{"title":"ElasticSearch","description":"How to use ElasticSearch in your Jace applications ","keywords":[],"isPublished":true,"pages":[{"layout":"flex","sections":[{"align":"justify-center","holders":[{"name":"default","width":8}]}],"holders":{"default":{"widgets":[{"type":"md-widget","name":"noname","icon":"mdi-markdown","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"%0D%0A%23%20About%20ElasticSearch%0D%0A%0D%0AElasticsearch%20is%20the%20distributed%20search%20and%20analytics%20engine%20at%20the%20heart%20of%0D%0Athe%20Elastic%20Stack.%20Logstash%20and%20Beats%20facilitate%20collecting%2C%20aggregating%2C%20and%0D%0Aenriching%20your%20data%20and%20storing%20it%20in%20Elasticsearch.%20Kibana%20enables%20you%20to%0D%0Ainteractively%20explore%2C%20visualize%2C%20and%20share%20insights%20into%20your%20data%20and%20manage%0D%0Aand%20monitor%20the%20stack.%20Elasticsearch%20is%20where%20the%20indexing%2C%20search%2C%20and%20analysis%0D%0Amagic%20happen.%0D%0A%0D%0AElasticsearch%20provides%20real-time%20search%20and%20analytics%20for%20all%20types%20of%20data.%20Whether%20you%0D%0Ahave%20structured%20or%20unstructured%20text%2C%20numerical%20data%2C%20or%20geospatial%20data%2C%0D%0AElasticsearch%20can%20efficiently%20store%20and%20index%20it%20in%20a%20way%20that%20supports%20fast%20searches.%0D%0AYou%20can%20go%20far%20beyond%20simple%20data%20retrieval%20and%20aggregate%20information%20to%20discover%0D%0Atrends%20and%20patterns%20in%20your%20data.%20And%20as%20your%20data%20and%20query%20volume%20grows%2C%20the%0D%0Adistributed%20nature%20of%20Elasticsearch%20enables%20your%20deployment%20to%20grow%20seamlessly%20right%0D%0Aalong%20with%20it.%0D%0A%0D%0A%23%23%20What%20is%20Elasticsearch%20used%20for%3F%0D%0A%0D%0AThe%20speed%20and%20scalability%20of%20Elasticsearch%20and%20its%20ability%20to%20index%20many%20%0D%0Atypes%20of%20content%20mean%20that%20it%20can%20be%20used%20for%20a%20number%20of%20use%20cases%3A%0D%0A-%20Application%20search%0D%0A-%20Website%20search%0D%0A-%20Enterprise%20searchLogging%20and%20log%20analytics%0D%0A-%20Infrastructure%20metrics%20and%20container%20monitoring%0D%0A-%20Application%20performance%20monitoring%0D%0A-%20Geospatial%20data%20analysis%20and%20visualization%0D%0A-%20Security%20analytics%0D%0A-%20Business%20analytics%0D%0A%0D%0A%23%23%20How%20does%20Elasticsearch%20work%3F%0D%0A%0D%0ARaw%20data%20flows%20into%20Elasticsearch%20from%20a%20variety%20of%20sources%2C%20including%20logs%2C%20%0D%0Asystem%20metrics%2C%20and%20web%20applications.%20%0D%0A%60%60%60Data%20ingestion%60%60%60%20is%20the%20process%20by%20which%20this%20raw%20data%20is%20parsed%2C%20normalized%2C%20and%20enriched%20before%20it%20%0D%0Ais%20%60%60%60indexed%60%60%60%20in%20Elasticsearch.%20%0D%0AOnce%20indexed%20in%20Elasticsearch%2C%20users%20can%20run%20complex%20queries%20against%20their%20data%20and%20use%20aggregations%20%0D%0Ato%20retrieve%20complex%20summaries%20of%20their%20data.%20From%20Kibana%2C%20users%20can%20create%20powerful%20visualizations%20of%20%0D%0Atheir%20data%2C%20share%20dashboards%2C%20and%20manage%20the%20Elastic%20Stack.%0D%0A%23%23%20Why%20use%20Elasticsearch%3F%0D%0A%0D%0A**Elasticsearch%20is%20fast.**%20Because%20Elasticsearch%20is%20built%20on%20top%20of%20Lucene%2C%20it%20excels%20at%20full-text%20%0D%0Asearch.%20Elasticsearch%20is%20also%20a%20near%20real-time%20search%20platform%2C%20meaning%20the%20latency%20%0D%0Afrom%20the%20time%20a%20document%20is%20indexed%20until%20it%20becomes%20searchable%20is%20very%20short%20%E2%80%94%20typically%20one%20second.%20%0D%0AAs%20a%20result%2C%20Elasticsearch%20is%20well%20suited%20for%20time-sensitive%20use%20%0D%0Acases%20such%20as%20security%20analytics%20and%20infrastructure%20monitoring.%0D%0A%0D%0A**Elasticsearch%20is%20distributed%20by%20nature.**%20The%20documents%20stored%20in%20%0D%0AElasticsearch%20are%20distributed%20across%20different%20containers%20known%20as%20%60%60%60shards%60%60%60%2C%20which%20are%20duplicated%20to%20%0D%0Aprovide%20redundant%20copies%20of%20the%20data%20in%20case%20of%20hardware%20failure.%20The%20distributed%20nature%20of%20Elasticsearch%20allows%20it%20to%20%0D%0Ascale%20out%20to%20hundreds%20(or%20even%20thousands)%20of%20servers%20and%20handle%20petabytes%20of%20data.%0D%0A%0D%0A**Elasticsearch%20comes%20with%20a%20wide%20set%20of%20features.**%20In%20addition%20to%20its%20speed%2C%20%0D%0Ascalability%2C%20and%20resiliency%2C%20Elasticsearch%20has%20a%20number%20of%20powerful%20built-in%20features%20that%20make%20%0D%0Astoring%20and%20searching%20data%20even%20more%20efficient%2C%20such%20as%20data%20rollups%20and%20index%20lifecycle%20management.%0D%0A%0D%0A**The%20Elastic%20Stack%20simplifies%20data%20ingest%2C%20visualization%2C%20and%20reporting.**%20Integration%20with%20Beats%20and%20Logstash%20%0D%0Amakes%20it%20easy%20to%20process%20data%20before%20indexing%20into%20Elasticsearch.%20And%20Kibana%20provides%20real-time%20visualization%20of%20%0D%0AElasticsearch%20data%20as%20well%20as%20UIs%20for%20quickly%20accessing%20application%20performance%20monitoring%20(APM)%2C%20logs%2C%20and%20%0D%0Ainfrastructure%20metrics%20data.%0D%0A%0D%0A%23%23%20Data%20in%3A%20documents%20and%20indices%0D%0A%0D%0AElasticsearch%20is%20a%20distributed%20document%20store.%20Instead%20of%20storing%20information%20as%20rows%20of%0D%0Acolumnar%20data%2C%20Elasticsearch%20stores%20complex%20data%20structures%20that%20have%20been%20serialized%0D%0Aas%20JSON%20documents.%20When%20you%20have%20multiple%20Elasticsearch%20nodes%20in%20a%20cluster%2C%20stored%0D%0Adocuments%20are%20distributed%20across%20the%20cluster%20and%20can%20be%20accessed%20immediately%0D%0Afrom%20any%20node.%0D%0A%0D%0AWhen%20a%20document%20is%20stored%2C%20it%20is%20indexed%20and%20fully%20searchable%20in%20near%0D%0Areal-time%E2%80%94%20within%201%20second.%20Elasticsearch%20uses%20a%20data%20structure%20called%20an%0D%0Ainverted%20index%20that%20supports%20very%20fast%20full-text%20searches.%20An%20inverted%20index%0D%0Alists%20every%20unique%20word%20that%20appears%20in%20any%20document%20and%20identifies%20all%20of%20the%0D%0Adocuments%20each%20word%20occurs%20in.%0D%0A%0D%0AAn%20index%20can%20be%20thought%20of%20as%20an%20optimized%20collection%20of%20documents%20and%20each%0D%0Adocument%20is%20a%20collection%20of%20fields%2C%20which%20are%20the%20key-value%20pairs%20that%20contain%0D%0Ayour%20data.%20By%20default%2C%20Elasticsearch%20indexes%20all%20data%20in%20every%20field%20and%20each%20indexed%0D%0Afield%20has%20a%20dedicated%2C%20optimized%20data%20structure.%20For%20example%2C%20text%20fields%20are%0D%0Astored%20in%20inverted%20indices%2C%20and%20numeric%20and%20geo%20fields%20are%20stored%20in%20BKD%20trees.%0D%0AThe%20ability%20to%20use%20the%20per-field%20data%20structures%20to%20assemble%20and%20return%20search%0D%0Aresults%20is%20what%20makes%20Elasticsearch%20so%20fast.%0D%0A%0D%0AElasticsearch%20also%20has%20the%20ability%20to%20be%20schema-less%2C%20which%20means%20that%20documents%20can%20be%0D%0Aindexed%20without%20explicitly%20specifying%20how%20to%20handle%20each%20of%20the%20different%20fields%0D%0Athat%20might%20occur%20in%20a%20document.%20When%20dynamic%20mapping%20is%20enabled%2C%20Elasticsearch%0D%0Aautomatically%20detects%20and%20adds%20new%20fields%20to%20the%20index.%20This%20default%0D%0Abehavior%20makes%20it%20easy%20to%20index%20and%20explore%20your%20data%20%E2%80%94%20just%20start%0D%0Aindexing%20documents%20and%20Elasticsearch%20will%20detect%20and%20map%20booleans%2C%20floating%20point%20and%0D%0Ainteger%20values%2C%20dates%2C%20and%20strings%20to%20the%20appropriate%20Elasticsearch%20datatypes.%0D%0A%0D%0AUltimately%2C%20however%2C%20you%20know%20more%20about%20your%20data%20and%20how%20you%20want%20to%20use%20it%0D%0Athan%20Elasticsearch%20can.%20You%20can%20define%20rules%20to%20control%20dynamic%20mapping%20and%20explicitly%0D%0Adefine%20mappings%20to%20take%20full%20control%20of%20how%20fields%20are%20stored%20and%20indexed.%0D%0A%0D%0ADefining%20your%20own%20mappings%20enables%20you%20to%3A%0D%0A-%20Distinguish%20between%20full-text%20string%20fields%20and%20exact%20value%20string%20fields%0D%0A-%20Perform%20language-specific%20text%20analysis%0D%0A-%20Optimize%20fields%20for%20partial%20matching%0D%0A-%20Use%20custom%20date%20formats%0D%0A-%20Use%20data%20types%20such%20as%20%60%60%60geo_point%60%60%60%20and%20%60%60%60geo_shape%60%60%60%20that%20cannot%20be%20automatically%0D%0Adetected%0D%0A%0D%0AIt%E2%80%99s%20often%20useful%20to%20index%20the%20same%20field%20in%20different%20ways%20for%20different%0D%0Apurposes.%20For%20example%2C%20you%20might%20want%20to%20index%20a%20string%20field%20as%20both%20a%20text%0D%0Afield%20for%20full-text%20search%20and%20as%20a%20keyword%20field%20for%20sorting%20or%20aggregating%0D%0Ayour%20data.%20Or%2C%20you%20might%20choose%20to%20use%20more%20than%20one%20language%20analyzer%20to%0D%0Aprocess%20the%20contents%20of%20a%20string%20field%20that%20contains%20user%20input.%0D%0A%0D%0AThe%20analysis%20chain%20that%20is%20applied%20to%20a%20full-text%20field%20during%20indexing%20is%20also%0D%0Aused%20at%20search%20time.%20When%20you%20query%20a%20full-text%20field%2C%20the%20query%20text%20undergoes%0D%0Athe%20same%20analysis%20before%20the%20terms%20are%20looked%20up%20in%20the%20index.%0D%0A%0D%0A%23%23%20Information%20out%3A%20search%20and%20analyze%0D%0A%0D%0AWhile%20you%20can%20use%20Elasticsearch%20as%20a%20document%20store%20and%20retrieve%20documents%20and%20their%0D%0Ametadata%2C%20the%20real%20power%20comes%20from%20being%20able%20to%20easily%20access%20the%20full%20suite%0D%0Aof%20search%20capabilities%20built%20on%20the%20Apache%20Lucene%20search%20engine%20library.%0D%0A%0D%0AElasticsearch%20provides%20a%20simple%2C%20coherent%20REST%20API%20for%20managing%20your%20cluster%20and%20indexing%0D%0Aand%20searching%20your%20data.%20%20For%20testing%20purposes%2C%20you%20can%20easily%20submit%20requests%0D%0Adirectly%20from%20the%20command%20line%20or%20through%20the%20Developer%20Console%20in%20Kibana.%20From%0D%0Ayour%20applications%2C%20you%20can%20use%20the%0D%0A%3Ca%20href%3D%22https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Fclient%2Findex.html%22%20class%3D%22ulink%22%20target%3D%22_top%22%3EElasticsearch%20client%3C%2Fa%3E%0D%0Afor%20your%20language%20of%20choice%3A%20Java%2C%20JavaScript%2C%20Go%2C%20.NET%2C%20PHP%2C%20Perl%2C%20Python%0D%0Aor%20Ruby.%0D%0A%0D%0A%23%23%23%20Searching%20your%20data%0D%0A%0D%0AThe%20Elasticsearch%20REST%20APIs%20support%20structured%20queries%2C%20full%20text%20queries%2C%20and%20complex%0D%0Aqueries%20that%20combine%20the%20two.%20Structured%20queries%20are%0D%0Asimilar%20to%20the%20types%20of%20queries%20you%20can%20construct%20in%20SQL.%20For%20example%2C%20you%0D%0Acould%20search%20the%20%60%60%60gender%60%60%60%20and%20%60%60%60age%60%60%60%20fields%20in%20your%20%60%60%60employee%60%60%60%20index%20and%20sort%20the%0D%0Amatches%20by%20the%20%60%60%60hire_date%60%60%60%20field.%20Full-text%20queries%20find%20all%20documents%20that%0D%0Amatch%20the%20query%20string%20and%20return%20them%20sorted%20by%20%60%60%60relevance%60%60%60%E2%80%94how%20good%20a%0D%0Amatch%20they%20are%20for%20your%20search%20terms.%0D%0A%0D%0AIn%20addition%20to%20searching%20for%20individual%20terms%2C%20you%20can%20perform%20phrase%20searches%2C%0D%0Asimilarity%20searches%2C%20and%20prefix%20searches%2C%20and%20get%20autocomplete%20suggestions.%0D%0A%0D%0AHave%20geospatial%20or%20other%20numerical%20data%20that%20you%20want%20to%20search%3F%20Elasticsearch%20indexes%0D%0Anon-textual%20data%20in%20optimized%20data%20structures%20that%20support%0D%0Ahigh-performance%20geo%20and%20numerical%20queries.%0D%0A%0D%0AYou%20can%20access%20all%20of%20these%20search%20capabilities%20using%20Elasticsearch%E2%80%99s%0D%0Acomprehensive%20JSON-style%20query%20language%20(%3Ca%20class%3D%22xref%22%20href%3D%22https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Freference%2Fcurrent%2Fquery-dsl.html%22%20title%3D%22Query%20DSL%22%3EQuery%20DSL%3C%2Fa%3E).%20You%20can%20also%0D%0Aconstruct%20%3Ca%20class%3D%22xref%22%20href%3D%22https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Felasticsearch%2Freference%2Fcurrent%2Fsql-overview.html%22%20title%3D%22Overview%22%3ESQL-style%20queries%3C%2Fa%3E%20to%20search%20and%20aggregate%20data%0D%0Anatively%20inside%20Elasticsearch%2C%20and%20JDBC%20and%20ODBC%20drivers%20enable%20a%20broad%20range%20of%0D%0Athird-party%20applications%20to%20interact%20with%20Elasticsearch%20via%20SQL.%0D%0A%0D%0A%23%23%23%20Analyzing%20your%20data%0D%0A%0D%0AElasticsearch%20aggregations%20enable%20you%20to%20build%20complex%20summaries%20of%20your%20data%20and%20gain%0D%0Ainsight%20into%20key%20metrics%2C%20patterns%2C%20and%20trends.%20Instead%20of%20just%20finding%20the%0D%0Aproverbial%20%E2%80%9Cneedle%20in%20a%20haystack%E2%80%9D%2C%20aggregations%20enable%20you%20to%20answer%20questions%0D%0Alike%3A%0D%0A-%20How%20many%20needles%20are%20in%20the%20haystack%3F%0D%0A-%20What%20is%20the%20average%20length%20of%20the%20needles%3F%0D%0A-%20What%20is%20the%20median%20length%20of%20the%20needles%2C%20broken%20down%20by%20manufacturer%3F%0D%0A-%20How%20many%20needles%20were%20added%20to%20the%20haystack%20in%20each%20of%20the%20last%20six%20months%3F%0D%0A%0D%0AYou%20can%20also%20use%20aggregations%20to%20answer%20more%20subtle%20questions%2C%20such%20as%3A%0D%0A-%20What%20are%20your%20most%20popular%20needle%20manufacturers%3F%0D%0A-%20Are%20there%20any%20unusual%20or%20anomalous%20clumps%20of%20needles%3F%0D%0A%0D%0ABecause%20aggregations%20leverage%20the%20same%20data-structures%20used%20for%20search%2C%20they%20are%0D%0Aalso%20very%20fast.%20This%20enables%20you%20to%20analyze%20and%20visualize%20your%20data%20in%20real%20time.%0D%0AYour%20reports%20and%20dashboards%20update%20as%20your%20data%20changes%20so%20you%20can%20take%20action%0D%0Abased%20on%20the%20latest%20information.%0D%0A%0D%0AWhat%E2%80%99s%20more%2C%20aggregations%20operate%20alongside%20search%20requests.%20You%20can%20search%0D%0Adocuments%2C%20filter%20results%2C%20and%20perform%20analytics%20at%20the%20same%20time%2C%20on%20the%20same%0D%0Adata%2C%20in%20a%20single%20request.%20And%20because%20aggregations%20are%20calculated%20in%20the%0D%0Acontext%20of%20a%20particular%20search%2C%20you%E2%80%99re%20not%20just%20displaying%20a%20count%20of%20all%0D%0Asize%2070%20needles%2C%20you%E2%80%99re%20displaying%20a%20count%20of%20the%20size%2070%20needles%0D%0Athat%20match%20your%20users'%20search%20criteria%20%E2%80%94%20for%20example%2C%20all%20size%2070%20%60%60%60non-stick%0D%0Aembroidery%60%60%60%20needles.%0D%0A%0D%0A%23%23%23%20But%20wait%2C%20there%E2%80%99s%20more%0D%0A%0D%0AWant%20to%20automate%20the%20analysis%20of%20your%20time-series%20data%3F%20You%20can%20use%0D%0A%3Ca%20href%3D%22https%3A%2F%2Fwww.elastic.co%2Fguide%2Fen%2Fmachine-learning%2F7.10%2Fml-overview.html%22%20class%3D%22ulink%22%20target%3D%22_top%22%3Emachine%20learning%3C%2Fa%3E%20features%20to%20create%20accurate%0D%0Abaselines%20of%20normal%20behavior%20in%20your%20data%20and%20identify%20anomalous%20patterns.%20With%0D%0Amachine%20learning%2C%20you%20can%20detect%3A%0D%0A-%20Anomalies%20related%20to%20temporal%20deviations%20in%20values%2C%20counts%2C%20or%20frequencies%0D%0A-%20Statistical%20rarity%0D%0A-%20Unusual%20behaviors%20for%20a%20member%20of%20a%20population%0D%0A%0D%0AAnd%20the%20best%20part%3F%20You%20can%20do%20this%20without%20having%20to%20specify%20algorithms%2C%20models%2C%0D%0Aor%20other%20data%20science-related%20configurations.%0D%0A%0D%0A%3Ca%20href%3D%22https%3A%2F%2Fwww.elastic.co%2F%22%20target%3D%22_blank%22%3E%0D%0A%20%20%20%20%3Ccenter%3E%0D%0A%3Cdiv%3E%0D%0A%20%20%20%20%3Cimg%20style%3D%22width%3A64px%22%20src%3D%22https%3A%2F%2Fcdn.iconscout.com%2Ficon%2Ffree%2Fpng-512%2Felasticsearch-226094.png%22%3E%0D%0A%20%20%20%20%0D%0A%3C%2Fdiv%3E%0D%0A%3Cdiv%20%0D%0A%20%20%20%20%20%20%20%20class%3D%22primary--text%20display-1%20font-weight-light%22%0D%0A%3E%0D%0A%20%20%20%20More%20about%20ElasticSearch%20here%0D%0A%3C%2Fdiv%3E%0D%0A%3C%2Fcenter%3E%0D%0A%3C%2Fa%3E%0D%0A","script":""},"id":"agr20qzexx7","activated":false}]}},"title":"Elasticsearch","url":"https://jace-dev.herokuapp.com/design/ElasticSearch#/"},{"layout":"flex","sections":[{"align":"justify-center","holders":[{"name":"default","width":11}]},{"align":"justify-center","holders":[{"name":"lapnr0gde3","width":11}]},{"align":"justify-center","holders":[{"name":"2vwvz46hqxg","width":11}]},{"align":"justify-center","holders":[{"name":"auc2fg14map","width":4}]},{"align":"justify-center","holders":[{"name":"r0w2t1d92lk","width":11}]},{"align":"justify-center","holders":[{"name":"vi9l9nacss","width":2},{"name":"gvkmxvq5shd","width":2},{"name":"6d3eeyidnan","width":2},{"name":"1u77mw4xbau","width":2}]},{"align":"justify-center","holders":[{"name":"wofhicigx3h","width":11}]},{"align":"justify-center","holders":[{"name":"o1hu8n8317q","width":2},{"name":"prroix9g39s","width":9}]}],"holders":{"default":{"widgets":[{"type":"mediator-widget","name":"noname_clone_xvrm4xxoop","icon":"mdi-language-javascript","options":{"widget":{"visible":true}},"data":{"script":"    \n    let mediator = this;\n    let scripts = mediator.api.selectWidgets(\"s05upyxsum\").$refs.instance.scripts\n    let getScript = name => _.find(scripts,item => item.name == name).script\n    \n    let indexSelector = mediator.api.selectWidgets( d => d.config.name ==\"indexSelector\")\n    // let fieldSelector = mediator.api.selectWidgets( d => d.config.name ==\"fieldSelector\")\n    let table = mediator.api.selectWidgets( d => d.config.name ==\"indexData\")\n    // let indexInfo = mediator.api.selectWidgets( d => d.config.name ==\"indexInfo\")\n    let clusterInfo = mediator.api.selectWidgets( d => d.config.name ==\"clusterInfo\")\n    \n    // let indexInfoHeader = mediator.api.selectWidgets( d => d.config.name ==\"indexInfoHeader\")\n    // let clusterInfoHeader = mediator.api.selectWidgets( d => d.config.name ==\"clusterInfoHeader\")   \n    let indexDataHeader = mediator.api.selectWidgets( d => d.config.name ==\"indexDataHeader\")\n    // let mappings = mediator.api.selectWidgets( d => d.config.name ==\"mappings\")\n    // let mappingsHeader = mediator.api.selectWidgets( d => d.config.name ==\"mappingsHeader\")\n    // let tree = mediator.api.selectWidgets( d => d.config.name ==\"tree\")\n    \n    // let test = mediator.api.selectWidgets( d => d.config.name ==\"test\")\n    \n    let selectedProgress = mediator.api.selectWidgets( d => d.config.name ==\"selectedProgress\")\n    \n    let querySettings = mediator.api.selectWidgets( d => d.config.name ==\"querySettings\")\n    \n    let health = mediator.api.selectWidgets( d => d.config.name ==\"health\")\n    let documents = mediator.api.selectWidgets( d => d.config.name ==\"documents\")\n    let deleted = mediator.api.selectWidgets( d => d.config.name ==\"deleted\")\n    let storage = mediator.api.selectWidgets( d => d.config.name ==\"storage\")\n    \n    let index_name = mediator.api.selectWidgets( d => d.config.name ==\"index_name\")\n    \n    mediator.hideIndicators = () => {\n        health.hide()\n        documents.hide()\n        deleted.hide()\n        storage.hide()\n        index_name.hide()\n    }\n    mediator.showIndicators = () => {\n        health.show()\n        documents.show()\n        deleted.show()\n        storage.show()\n        index_name.show()\n    }\n    \n    mediator.updateIndicators = data => {\n       \n        health.update({data: data.health})\n        documents.update({data: data.documents})\n        deleted.update({data: data.deleted})\n        storage.update({data: data.storage})\n        \n    }\n    \n    \n    mediator.off(\"start-page-script\")\n    mediator.off(\"init-page-state\")\n    mediator.off(\"apply\")\n    \n    \n    mediator.querySettings = {\n    \t\"field\": {\n    \t\t\"columns\": {\n    \t\t\t\"type\": \"select\",\n    \t\t\t\"label\": \"Table Columns\",\n    \t\t\t\"multiple\": true,\n    \t\t\t\"items\": [],\n    \t\t\t\"itemText\": \"label\",\n    \t\t\t\"value\": []\n    \t\t},\n    \t\t\"rows\": {\n    \t\t\t\"type\": \"number\",\n    \t\t\t\"label\": \"Rows Limit\",\n    \t\t\t\"value\": 10\n    \t\t},\n    \t\t\"useFilter\": {\n    \t\t\t\"type\": \"switch\",\n    \t\t\t\"value\": false,\n    \t\t\t\"label\": \"Use Filter\"\n    \t\t},\n    \t\t\"query\": {\n    \t\t\t\"type\": \"textarea\",\n    \t\t\t\"label\": \"Query\",\n    \t\t\t\"show\": [\n    \t\t\t\t\"useFilter\"\n    \t\t\t]\n    \t\t}\n    \t}\n    }\n    \n    mediator.clearQuerySettings = () => {\n         mediator.querySettings.field.useFilter.value = false;\n         mediator.querySettings.field.columns.value = []\n         mediator.querySettings.field.columns.items = []\n         mediator.querySettings.field.query.value = \"\"\n         mediator.querySettings.field.rows.value = 10\n         \n    }\n    \n    \n    \n    \n    let initPage = () => {\n        indexSelector.hide()\n        // fieldSelector.hide()\n        table.hide()\n        // indexInfo.hide()\n        clusterInfo.hide()\n        \n        // indexInfoHeader.hide()\n        // clusterInfoHeader.hide()   \n        indexDataHeader.hide()\n        // mappings.hide()\n        // mappingsHeader.hide()\n        // tree.hide()\n        querySettings.hide()\n        selectedProgress.hide()\n        mediator.hideIndicators()\n    }\n    \n    mediator.updateTable = data => {\n       \n        if(!data) return\n       \n        let res = {\n        \t\"dataset\": {\n        \t\t\"dimensions\": [],\n        \t\t\"source\": []\n        \t}\n        }\t\n        if(mediator.querySettings.field.columns.value.length == 0){\n            res.dataset.dimensions = [\"raw data\"]\n            res.dataset.source = data.dataset.source.map( d => ({\"raw data\":JSON.stringify(d,null,\" \")}))\n            table.update({data:res})\n        } else {\n            res.dataset.dimensions = mediator.querySettings.field.columns.value\n            res.dataset.source = data.dataset.source\n            table.update({data:res})\n        }\n        \n        let percents = parseFloat( (100*res.dataset.source.length/data.total ).toFixed(0))\n        selectedProgress.show()\n        // if( percents > 0 ){\n            selectedProgress.update({data:`\n                <div style=\"width: 100%;\">\n                    <div class=\"primary--text caption text-xs-center pb-1 \">${res.dataset.source.length} from ${data.total}</div>\n                    <div class=\"mb-2\" style=\"border:1px solid #dedede;\">\n                        <div class=\"success darken-1 white--text px-1 body-1 font-weight-light text-xs-center\" style=\"width:${percents}%;height: 0.3em;\"></div>\n                    </div>   \n                </div>\n            `})    \n        // } else {\n        //     selectedProgress.update({data:`\n        //         <div></div>   \n        //     `})\n        // }\n        \n    \n    }\n    \n    let renderPage = service => {\n        \n        initPage()\n           \n            \n        \n        let p = mediator.api.progress({\n            text:`connect to elasticsearch on ${window.esUrl}`, \n            maxStage:5, \n            title:\"Connect to elasticsearch service\"\n        })\n        \n        mediator.api.runDps(getScript(\"ping\"),{service})\n        .then( response => {\n            if( response.data == true ){\n                p.set({text:\"get service info\"})\n                Promise.all([\n                mediator.api.runDps(getScript(\"cluster_info\"),{service})\n                      .then( response => {\n                            clusterInfo.show()\n                            // clusterInfoHeader.show()\n                            clusterInfo.update({data:response.data}) \n                            p.set({text:\"get cluster info\"}) \n                      }),   \n                \n                mediator.api.runDps(getScript(\"get_index_list\"),{service})\n                      .then( response => {\n                            indexSelector.show()\n                            indexSelector.update({data:response.data})   \n                            p.set({text:\"get index list\"})\n                    \n                      })   \n                ]).then(()=>{\n                    p.set({text:`you are connected to elasticsearch on ${window.esUrl || \"Default Elasticsearch service\"}`})\n                    setTimeout(() => {\n                       p.cancel() \n                    },3000)\n                })\n                \n                let selectedFields = []\n                var indexData;\n            \n                \n            \n                mediator.api.off(\"data-select\")\n        \n                mediator.api.on({\n                    event: \"data-select\",\n                    callback:(emitter,data) => {\n                        let t = data.selection.filter(d => d.selected)\n                        \n                        index_name.update({data:`\n                        <div class=\"primary lighten-1 white--text pa-2 headline font-weight-light\">\n                             Index: ${t[0].entity.id}\n                        </div>\n                        `})\n                        \n                       mediator.clearQuerySettings();\n                       mediator.hideIndicators()\n                       mediator.api.runDps(getScript(\"get_index_info\"),{index:t[0].entity.id, service})\n                          .then( response => {\n                                mediator.showIndicators()\n                                mediator.updateIndicators(response.data)      \n                          })\n                        \n                        // indexInfo.update({data:`<div class=\"secondary--text px-3 body-1\">Wait..</div>`})\n                        //  indexInfo.hide() \n                        //  indexInfoHeader.hide() \n                        //  mediator.api.runDps(getScript(\"index_info\"),{index:t[0].entity.id, service})\n                        //   .then( response => {\n                        //         indexInfo.show()\n                        //         indexInfoHeader.show()\n                        //         indexInfo.update({data:response.data})      \n                        //   })    \n                         mediator.api.runDps(getScript(\"get_index_structure\"),{index:t[0].entity.id, service})\n                          .then( response => {\n                            //   fieldSelector.show()\n                            //   fieldSelector.update({data:response.data})\n                              querySettings.show()\n                              mediator.querySettings.field.columns.items = response.data.map( d => d.id)\n                              querySettings.update({data: mediator.querySettings})\n                              mediator.dataStructure = response.data\n                              mediator.index = t[0].entity.id \n                              mediator.api.runDps(getScript(\"get_index_data\"),{\n                                    index: mediator.index, \n                                    structure: mediator.dataStructure, \n                                    service,\n                                    query: getQuery(mediator.querySettings.field)\n                              })\n                                .then( response => {\n                                    mediator.indexData = response.data\n                                    table.show()\n                                    indexDataHeader.show()\n                                    mediator.updateTable(response.data)\n                                })    \n                          })\n                          \n                        //   mediator.api.runDps(getScript(\"mappings\"),{index:t[0].entity.id, service})\n                        //   .then( response => {\n                        //       mappings.show()\n                        //       mappingsHeader.show()\n                        //       mappings.update({data:response.data})\n                        //   })\n                          \n                        //   mediator.api.runDps(getScript(\"tree\"),{index:t[0].entity.id, service})\n                        //   .then( response => {\n                        //       tree.show()\n                        //       mappingsHeader.show()\n                        //       tree.update({data:response.data})\n                        //   })\n                          \n                          \n                    },\n                    rule: d => {\n                        return d.config.name == \"indexSelector\"\n                    }    \n                })\n            \n                // mediator.api.on({\n                //     event: \"data-select\",\n                //     callback:(emitter,data) => {\n                //         selectedFields = data.selection.filter(d => d.selected)\n                //         table.show()\n                //         indexDataHeader.show()\n                //         updateTable()        \n                //     },\n                //     rule: d => {\n                //         return d.config.name == \"fieldSelector\"\n                //     }    \n                // })\n            } else {\n                p.cancel()\n                mediator.api.warning({\n                    type:\"error\",\n                    title:\"Elasticsearch service error\",\n                    text:`No living connection on ${window.esUrl}`\n                })\n            }    \n        })\n        \n        \n    }\n    \n    mediator.on({\n        event: \"start-page-script\",\n        callback: () => {\n            \n            renderPage(window.esService)\n        },\n        rule: ()=>true\n    })\n    \n    mediator.on({\n        event: \"init-page-state\",\n        callback: () => {\n            \n            initPage()\n        },\n        rule: ()=>true\n    })\n    \n    mediator.on({\n        event:\"page-stop\",\n        callback: ()=>{\n            this.off()\n        },\n        rule:()=>true\n    })\n    \n    \n    let getQuery = settings => {\n        \n        if(!settings.useFilter.value) return {\n \n          \"size\": parseFloat(settings.rows.value),\n          \n          \"query\": {\n            \t\"bool\": {\n            \t\t\"must\": [],\n            \t\t\"filter\": [\n            \t\t\t{\n            \t\t\t\t\"match_all\": {}\n            \t\t\t}\n            \t\t],\n            \t\t\"should\": [],\n            \t\t\"must_not\": []\n            \t}\n            }\n        }\n        \n        \n         let parseNonTimeValue = (v) => {\n                let isBoolean = d => d.match(/true|false/g)\n                let isNumber = d => !Number.isNaN(parseFloat(d))\n                if(isBoolean(v)) return v == \"true\"\n                if(isNumber(v)) return parseFloat(v)\n                return v\n            }\n            \n            let normalizeValue = (v) => {\n                \n                let valueFormat = /\\(([\\s\\S]*)\\)/g\n                let parts = v.split(valueFormat).map( d => d.trim())\n                if (parts.length == 1) return parseNonTimeValue(parts[0]) \n                \n                return moment(parts[0],parts[1]).toDate()\n            }\n            \n            let operation =/[\\!\\<\\>\\=]?\\=|\\<|\\>/g\n            let listSplitter = /\\|/g\n            let negotiation = /\\!/g\n            \n            settings.query.value = settings.query.value || \"\" \n            let query = settings.query.value\n                            .trim()\n                            .split(\"\\n\")\n                            .map(d => d.trim())\n                            .filter(d => d)\n                            .filter(d => !d.startsWith(\"//\") )\n            \n           \n            query =  query.map(d => {\n                let o = d.match(operation)\n                let field, value\n                if(o){\n                    let parts = d.split(operation)\n                    return {\n                        operation: o[0],\n                        field: parts[0].trim(),\n                        value: parts[1].trim().split(listSplitter).map( v => normalizeValue(v.trim()) )\n                    }\n                } else {\n                    let parts = d.split(negotiation).map( v => v.trim())\n                    let op = (parts.length > 1) ? \"!\" : \"?\"\n                    let f = (parts.length > 1) ? parts[1] : parts[0]\n                    return {\n                        operation: op,\n                        field: f\n                    }\n                }\n            })\n            \n            return {\n                size: parseFloat(settings.rows.value),\n                query:{ bool: \n                    {\n                    must: query\n                            .filter( q => !q.operation.match(negotiation))\n                            .map( q => {\n                                if (q.operation == \"?\") return { exists: { field: q.field } }\n                                if (q.operation == \"==\") {\n                                    if (q.value.length == 1) {\n                                        let temp = { match_phrase: {}}\n                                        temp.match_phrase[q.field] = q.value[0]\n                                        return temp\n                                    } else {\n                                        return {\n                                          bool: {\n                                            should: q.value.map(v => {\n                                                let temp = { match_phrase: {}}\n                                                temp.match_phrase[q.field] = v\n                                                return temp\n                                            }),\n                                            minimum_should_match: 1\n                                          }\n                                        }\n                                    }\n                                } \n                                if(q.operation == \">=\") {\n                                    let temp = { range:{}}\n                                    temp.range[q.field] = {gte: q.value[0]}\n                                    return temp\n                                } \n                                if(q.operation == \">\"){\n                                    let temp = { range:{}}\n                                    temp.range[q.field] = {gt: q.value[0]}\n                                    return temp\n                                } \n                                if(q.operation == \"<=\") {\n                                    let temp = { range:{}}\n                                    temp.range[q.field] = {lte: q.value[0]}\n                                    return temp\n                                }    \n                                if(q.operation == \"<\"){\n                                    let temp = { range:{}}\n                                    temp.range[q.field] = {lt: q.value[0]}\n                                    return temp\n                                } \n                                \n                            }),\n                    filter: [\n                        {\n                          match_all: {}\n                        }\n                      ],\n                    should: [],\n                    must_not: query\n                                .filter( q => q.operation.match(negotiation))\n                                .map( q => {\n                                    if (q.operation == \"!\") return { exists: { field: q.field } }\n                                    if (q.operation == \"!=\") {\n                                        if (q.value.length == 1) {\n                                            let temp = { match_phrase: {}}\n                                            temp.match_phrase[q.field] = q.value[0]\n                                            return temp\n                                        } else {\n                                            return {\n                                              bool: {\n                                                should: q.value.map(v => {\n                                                    let temp = { match_phrase: {}}\n                                                    temp.match_phrase[q.field] = v\n                                                    return temp\n                                                }),\n                                                minimum_should_match: 1\n                                              }\n                                            }\n                                        }\n                                    } \n                                    \n                                }),\n                }\n                }\n            }\n    }\n    \n    mediator.on({\n        event:\"apply\",\n        callback: (data) => {\n           \n            mediator.querySettings.field = data\n            table.hide()\n            selectedProgress.hide()\n           \n            mediator.api.runDps(getScript(\"get_index_data\"),{\n                    index:mediator.index, \n                    structure: mediator.dataStructure, \n                    service: window.esService,\n                    query: getQuery(mediator.querySettings.field)\n              })\n                .then( response => {\n                  \n                    mediator.indexData = response.data\n                    table.show()\n                    indexDataHeader.show()\n                    table.show()\n                    mediator.updateTable(response.data)\n                })\n        },\n        role: () => true \n    })"},"id":"xvrm4xxoop","activated":false},{"type":"dps-suite-widget","name":"noname","icon":"mdi-card-text-outline","options":{"widget":{"visible":true}},"scripts":[{"name":"get_index_structure","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: get_index_structure\n **     SERVICE: http://localhost:8098\n **\n **/\n\n <?javascript\n    // $scope.service = { host: \"https://owdiu9cgtv:n3q29pc0dt@ginkgo-232472029.eu-west-1.bonsaisearch.net/\"}//localhost:9200\" }\n    // $scope.index = \"kibana_sample_data_ecommerce\"\n ?>\nservice.es(\n    from: {{service}},\n    cmd:\"indices.getMapping\",\n    args:<? {\n        index:$scope.index\n    } ?>\n    ,\n    returns:<? \n        d => {\n            let res = []\n            \n            let fetchFields = (properties, prefix) => {\n                _.keys( properties ).forEach( p => {\n                    let c = `${(prefix)?prefix+\".\":\"\"}${p}`\n                    res.push({\n                      id:c,\n                      title:c,\n                      data:{\n                          fieldName:c,    \n                          type: properties[p].type || \"object\"\n                      }\n                    })\n                    // if( properties[p].properties ) {\n                    //     fetchFields(properties[p].properties,`${(prefix) ? prefix+\".\":\"\"}${p}`)\n                    // }    \n                })\n            }\n        \n            fetchFields(d[$scope.index].mappings.properties)\n            \n            return res\n        }\n    ?>\n)   "},{"name":"get_index_data","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: get_index_data\n **     SERVICE: http://localhost:8098\n **\n **/\n\n// <?javascript\n\n//     $scope.query = {\n \n//   \"size\": 500,\n  \n//   \"query\": {\n// \t\"bool\": {\n// \t\t\"must\": [],\n// \t\t\"filter\": [\n// \t\t\t{\n// \t\t\t\t\"match_all\": {}\n// \t\t\t}\n// \t\t],\n// \t\t\"should\": [],\n// \t\t\"must_not\": []\n// \t}\n// }\n \n// }    \n//   $scope.service = { host: \"localhost:9200\" }\n//     $scope.index = \"kibana_sample_data_flights\"\n//     $scope.structure = [\n//     {\n//         \"id\": \"timestamp\",\n//         \"title\": \"timestamp\",\n//         \"data\": {\n//             \"fieldName\": \"timestamp\",\n//             \"type\": \"date\"\n//         }\n//     },\n//     {\n//         \"id\": \"dayOfWeek\",\n//         \"title\": \"dayOfWeek\",\n//         \"data\": {\n//             \"fieldName\": \"dayOfWeek\",\n//             \"type\": \"integer\"\n//         }\n//     },\n//     {\n//         \"id\": \"OriginWeather\",\n//         \"title\": \"OriginWeather\",\n//         \"data\": {\n//             \"fieldName\": \"OriginWeather\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"OriginRegion\",\n//         \"title\": \"OriginRegion\",\n//         \"data\": {\n//             \"fieldName\": \"OriginRegion\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"OriginLocation\",\n//         \"title\": \"OriginLocation\",\n//         \"data\": {\n//             \"fieldName\": \"OriginLocation\",\n//             \"type\": \"geo_point\"\n//         }\n//     },\n//     {\n//         \"id\": \"OriginCountry\",\n//         \"title\": \"OriginCountry\",\n//         \"data\": {\n//             \"fieldName\": \"OriginCountry\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"OriginCityName\",\n//         \"title\": \"OriginCityName\",\n//         \"data\": {\n//             \"fieldName\": \"OriginCityName\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"OriginAirportID\",\n//         \"title\": \"OriginAirportID\",\n//         \"data\": {\n//             \"fieldName\": \"OriginAirportID\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"Origin\",\n//         \"title\": \"Origin\",\n//         \"data\": {\n//             \"fieldName\": \"Origin\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"FlightTimeMin\",\n//         \"title\": \"FlightTimeMin\",\n//         \"data\": {\n//             \"fieldName\": \"FlightTimeMin\",\n//             \"type\": \"float\"\n//         }\n//     },\n//     {\n//         \"id\": \"FlightTimeHour\",\n//         \"title\": \"FlightTimeHour\",\n//         \"data\": {\n//             \"fieldName\": \"FlightTimeHour\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"FlightNum\",\n//         \"title\": \"FlightNum\",\n//         \"data\": {\n//             \"fieldName\": \"FlightNum\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"FlightDelayType\",\n//         \"title\": \"FlightDelayType\",\n//         \"data\": {\n//             \"fieldName\": \"FlightDelayType\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"FlightDelayMin\",\n//         \"title\": \"FlightDelayMin\",\n//         \"data\": {\n//             \"fieldName\": \"FlightDelayMin\",\n//             \"type\": \"integer\"\n//         }\n//     },\n//     {\n//         \"id\": \"FlightDelay\",\n//         \"title\": \"FlightDelay\",\n//         \"data\": {\n//             \"fieldName\": \"FlightDelay\",\n//             \"type\": \"boolean\"\n//         }\n//     },\n//     {\n//         \"id\": \"DistanceMiles\",\n//         \"title\": \"DistanceMiles\",\n//         \"data\": {\n//             \"fieldName\": \"DistanceMiles\",\n//             \"type\": \"float\"\n//         }\n//     },\n//     {\n//         \"id\": \"DistanceKilometers\",\n//         \"title\": \"DistanceKilometers\",\n//         \"data\": {\n//             \"fieldName\": \"DistanceKilometers\",\n//             \"type\": \"float\"\n//         }\n//     },\n//     {\n//         \"id\": \"DestWeather\",\n//         \"title\": \"DestWeather\",\n//         \"data\": {\n//             \"fieldName\": \"DestWeather\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"DestRegion\",\n//         \"title\": \"DestRegion\",\n//         \"data\": {\n//             \"fieldName\": \"DestRegion\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"DestLocation\",\n//         \"title\": \"DestLocation\",\n//         \"data\": {\n//             \"fieldName\": \"DestLocation\",\n//             \"type\": \"geo_point\"\n//         }\n//     },\n//     {\n//         \"id\": \"DestCountry\",\n//         \"title\": \"DestCountry\",\n//         \"data\": {\n//             \"fieldName\": \"DestCountry\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"DestCityName\",\n//         \"title\": \"DestCityName\",\n//         \"data\": {\n//             \"fieldName\": \"DestCityName\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"DestAirportID\",\n//         \"title\": \"DestAirportID\",\n//         \"data\": {\n//             \"fieldName\": \"DestAirportID\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"Dest\",\n//         \"title\": \"Dest\",\n//         \"data\": {\n//             \"fieldName\": \"Dest\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"Carrier\",\n//         \"title\": \"Carrier\",\n//         \"data\": {\n//             \"fieldName\": \"Carrier\",\n//             \"type\": \"keyword\"\n//         }\n//     },\n//     {\n//         \"id\": \"Cancelled\",\n//         \"title\": \"Cancelled\",\n//         \"data\": {\n//             \"fieldName\": \"Cancelled\",\n//             \"type\": \"boolean\"\n//         }\n//     },\n//     {\n//         \"id\": \"AvgTicketPrice\",\n//         \"title\": \"AvgTicketPrice\",\n//         \"data\": {\n//             \"fieldName\": \"AvgTicketPrice\",\n//             \"type\": \"float\"\n//         }\n//     }\n// ]\n//  ?>\nservice.es(\n    from: {{service}},\n    cmd:\"search\",\n    args:<? {\n        index:$scope.index,\n        body: $scope.query\n    } ?>\n    ,\n    returns:<? \n        d => d.hits.hits.map( r => {\n            let res = {}\n            $scope.structure.forEach( f => {\n                let value = r._source[f.id]\n                let type = f.data.type\n                if (type == \"float\"){\n                    value = Number.parseFloat(value.toFixed(3))\n                } else if(type == \"date\") {\n                    value = moment(new Date(value)).format(\"MMM DD YYYY HH:mm:ss\")\n                }\n                if(_.isObject(value)) {\n                    value = JSON.stringify(value)\n                }\n                res[f.id] = value\n                    \n                })\n            return res\n        })\n    ?>\n)   \n\nset(\"data\")\n\nservice.es(\n    from: {{service}},\n    cmd:\"count\",\n    args:<? {\n        index:$scope.index,\n        body: {\n \n              \"query\": {\n            \t\"bool\": {\n            \t\t\"must\": [],\n            \t\t\"filter\": [\n            \t\t\t{\n            \t\t\t\t\"match_all\": {}\n            \t\t\t}\n            \t\t],\n            \t\t\"should\": [],\n            \t\t\"must_not\": []\n            \t}\n            }\n \n        }\n    } ?>\n    ,\n    returns:<? \n        d => d.count\n    ?>\n)   \n\nset(\"total\")\n\n<?javascript\n    $scope.res = {\n        total: $scope.total,\n    \t\"dataset\": {\n    \t\t\"dimensions\": _.keys($scope.data[0]),\n    \t\t\"source\": $scope.data\n    \t}\n    }\t\n?>\n\nreturn(\"res\")"},{"name":"index_info","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: info\n **     SERVICE: http://localhost:8098\n **\n **/\n<?javascript\n    // $scope.service = { host: \"https://owdiu9cgtv:n3q29pc0dt@ginkgo-232472029.eu-west-1.bonsaisearch.net/\"}//localhost:9200\" }\n    // $scope.index = \"kibana_sample_data_flights\"\n ?>\n// service.es(\n//     from: {{service}},\n//     cmd:\"indices.get\",\n//     args:<? {\n//         index:$scope.index,\n//         // format:\"json\",\n//         // help:true\n//     } ?>\n//     ,\n//     returns:<? \n//         d => {\n//             let res = {\n//                 name: d[$scope.index].settings.index.provided_name,\n//                 createdAt: moment(new Date(d[$scope.index].settings.index.creation_date)).format(\"YYYY.MM.DD HH:mm:ss\"),\n//                 number_of_shards: d[$scope.index].settings.index.number_of_shards\n//             }\n//             return res\n//         }\n//     ?>\n// )   \n\n// set(\"data\")\n\nservice.es(\n    from: {{service}},\n    cmd:\"cat.indices\",\n    args:<? ({\n        format:\"json\"\n    })\n    ?>\n    ,\n    return:<?\n        d => _.find(d, i => i.index == $scope.index)\n    ?>\n)\nset(\"extData\")\n\n<?html\n    <div class=\"pa-3\" style=\"border:1px solid #eaeaea;background:white;\">\n        \n        <div class=\"body-1 secondary--index\">\n            <b>Name:</b> <span class=\"primary--text\">${index}</span><br/>\n           \n            \n            <b>Health:</b> <i class=\"mdi mdi-heart-circle-outline subheading ${status}--text\"></i><br/>\n            <b>Status:</b> ${status}<br/>\n            <b>Documents:</b> ${docs_count}<br/>\n            <b>Deleted:</b> ${docs_deleted}<br/>\n          \n            <b>Storage:</b> ${store_size}<br/><br/><br/>\n            \n            \n            \n        </div>\n    </div>    \n\n?>\nset(\"html\")\n<?javascript\n    $scope.data = _.extend({}, $scope.extData)\n    $scope.data.docs_count = $scope.data[\"docs.count\"]\n    $scope.data.docs_deleted = $scope.data[\"docs.deleted\"]\n    $scope.data.store_size = $scope.data[\"store.size\"]\n    $scope.data.status = ($scope.data.status == \"red\")\n                        ? \"error\"\n                        : ($scope.data.status == \"yellow\")\n                            ? \"warning\"\n                            : \"success\"\n    $scope.res = _.template($scope.html)($scope.data)\n?>\nreturn(\"res\")\ntext()\n"},{"name":"cluster_info","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: test\n **     SERVICE: http://localhost:8098\n **\n **/\n<?javascript\n    // $scope.service = { host: \"https://owdiu9cgtv:n3q29pc0dt@ginkgo-232472029.eu-west-1.bonsaisearch.net/\"}//localhost:9200\" }\n?> \n\nservice.es(\n    from: {{service}},\n    cmd:\"cluster.stats\"\n)\n\nset(\"data\")\n\n<?html\n\n\n    <div class=\"mx-3\">\n    <div class=\"layout row align-center primary lighten-1 white--text caption\">\n    \n    <div class=\"flex xs1  pa-2 font-weight-light headline\">\n        <!--<a><img src=\"https://s3.amazonaws.com/assets.heroku.com/addons.heroku.com/icons/854/original.png?1429293570\"></a>-->\n        Cluster Info\n    </div>\n    <div class=\"flex text-xs-right pr-2 \">\n    <div class=\" layout row justify-right\">\n    <div class=\"spacer\"></div>\n        <div class=\"ma-2\">\n                    <div class=\"text-center body-1\">\n                        Host\n                    </div>\n                    <div class=\"text-center font-weight-light\">\n                        ${host}\n                    </div>\n        </div>    \n        \n        <div class=\"ma-2\">\n                    <div class=\"text-center body-1\">\n                        Name\n                    </div>\n                    <div class=\"text-center font-weight-light\">\n                         ${cluster_name}\n                    </div>\n        </div> \n        \n        <div class=\"ma-2\">\n                    <div class=\"text-center body-1\">\n                        OS\n                    </div>\n                    <div class=\"text-center font-weight-light\">\n                        ${nodes.os.names[0].name}\n                    </div>\n        </div> \n            \n        <div class=\"ma-2\">\n                    <div class=\"text-center body-1\">\n                        Allocated processors\n                    </div>\n                    <div class=\"text-center font-weight-light\">\n                      ${nodes.os.allocated_processors} from  ${nodes.os.available_processors}\n                    </div>\n        </div> \n        \n        <div class=\"ma-2\">\n                    <div class=\"text-center body-1\">\n                        Health\n                    </div>\n                    <div class=\"text-center font-weight-light\">\n                      ${status}\n                    </div>\n        </div> \n        \n        <div class=\"ma-2\">\n                    <div class=\"text-center body-1\">\n                        Indices\n                    </div>\n                    <div class=\"text-center font-weight-light\">\n                      ${indices.count}\n                    </div>\n        </div> \n        \n        <div class=\"ma-2\">\n                    <div class=\"text-center body-1\">\n                        Number of shards\n                    </div>\n                    <div class=\"text-center font-weight-light\">\n                      ${indices.shards.total}\n                    </div>\n        </div> \n        \n        <div class=\"ma-2\">\n                    <div class=\"text-center body-1\">\n                        Documents\n                    </div>\n                    <div class=\"text-center font-weight-light\">\n                      ${indices.docs.count}\n                    </div>\n        </div> \n        \n        <div class=\"ma-2\">\n                    <div class=\"text-center body-1\">\n                        Deleted\n                    </div>\n                    <div class=\"text-center font-weight-light\">\n                      ${indices.docs.deleted}\n                    </div>\n        </div> \n      </div>\n    </div>\n</div>\n</div>\n    \n\n?>\nset(\"html\")\n<?javascript\n    $scope.data.host = ($scope.service) ? $scope.service.host : \"Default Elasticsearch service\"\n    // $scope.data.status = ($scope.data.status == \"red\")\n    //                     ? \"error\"\n    //                     : ($scope.data.status == \"yellow\")\n    //                         ? \"warning\"\n    //                         : \"success\"\n    $scope.res = _.template($scope.html)($scope.data)\n?>\nreturn(\"res\")\ntext()\n"},{"name":"1","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: 1\n **     SERVICE: http://localhost:8098\n **\n **/\n<?javascript\n    // $scope.service = { host:\"localhost:9200\" }\n    $scope.index = \"kibana_sample_data_ecommerce\"\n ?>\nservice.es(\n    from: {{service}},\n    cmd:\"indices.getMapping\",\n    args:<? {\n        index: $scope.index,\n        //type:\"geoip\",\n        // includeTypeName:true\n    } ?>\n    // ,\n    // returns:<? \n    //     d => {\n    //         let res = _.keys(d[$scope.index].mappings.properties).map( f => ({\n    //           id:f,\n    //           title:f,\n    //           data:{\n    //               fieldName:f,    \n    //               type: d[$scope.index].mappings.properties[f].type\n    //           }\n    //         }))\n    //         res.reverse()\n    //         return res\n    //     }\n    // ?>\n)   "},{"name":"get_index_list","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: get_index_list\n **     SERVICE: http://localhost:8098\n **\n **/\n<?javascript\n// $scope.service = { host: \"https://owdiu9cgtv:n3q29pc0dt@ginkgo-232472029.eu-west-1.bonsaisearch.net/\"}//localhost:9200\" }\n?>\nservice.es(\n    from: {{service}},\n    cmd:\"cat.indices\",\n    args:<? ({\n        format:\"json\"\n    })\n    ?>,\n    return:<?\n        d => d.map(r => r.index).filter(r=> !r.startsWith(\".\"))\n    ?>\n)\nc.order()\nc.map(<? d => ({id:d, title:d}) ?>)"},{"name":"test","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: test\n **     SERVICE: http://localhost:8098\n **\n **/\n<?javascript\n    $scope.service = { host: \"localhost:9200\" }\n    $scope.index = \"kibana_sample_data_flights\"\n ?>\n\nservice.es(\n    from: {{service}},\n    cmd:\"cat.indices\",\n    args:<? ({\n        index: $scope.index,\n        format:\"json\"\n    })\n    ?>\n    ,\n    return:<?\n        d => d[0]\n    ?>\n)\nset(\"extData\")\n\n<?html\n    <div class=\"pa-3\" style=\"border:1px solid #dedede;background:white;\">\n        <!--<div class=\"headline secondary--index\">-->\n        <!--    Index Info-->\n        <!--</div>    -->\n        <div class=\"body-1 secondary--index\">\n            <b>Name:</b> <span class=\"primary--text\">${index}</span><br/>\n           \n            \n            <b>Health:</b> <span style=\"color:${health}\"><i class=\"mdi mdi-cards-heart\"></i></span><br/>\n            <b>Status:</b> ${status}<br/>\n            <b>Documents:</b> ${docs_count}<br/>\n            <b>Deleted:</b> ${docs_deleted}<br/>\n            \n            <b>Storage:</b> ${store_size}<br/><br/>\n            \n            \n            \n        </div>\n    </div>    \n\n?>\nset(\"html\")\n<?javascript\n    $scope.data = _.extend({}, $scope.extData)\n    $scope.data.docs_count = $scope.data[\"docs.count\"]\n    $scope.data.docs_deleted = $scope.data[\"docs.deleted\"]\n    $scope.data.store_size = $scope.data[\"store.size\"]\n    \n    $scope.res = _.template($scope.html)($scope.data)\n?>\nreturn(\"res\")\ntext()\n"},{"name":"ping","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: 111\n **     SERVICE: http://localhost:8098\n **\n **/\n// <?javascript\n//     $scope.service = { host: \"localhost:9200\" }\n//  ?>\n\nservice.es(\n    from: {{service}},\n    cmd:\"ping\"\n)\n"},{"name":"mappings","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: mappings\n **     SERVICE: http://localhost:8098\n **\n **/\n<?javascript\n// $scope.service = { host:\"localhost:9200\"}\n// $scope.index=\"temp\"\n\n?>\nservice.es(\n    from: {{service}},\n    cmd:\"indices.getMapping\",\n    args:<? {\n        index:$scope.index\n    } ?>\n)    \nset(\"data\")\n\n<?html\n    <code class=\"caption secondary--text\" style=\"width: 100%;\n    height: 20em;\n    overflow: auto;\n    background:white;\">\n        ${mappings}\n    </code>    \n?>\nset(\"html\")\n\n<?javascript\n    $scope.res = _.template($scope.html)({\n        mappings: JSON.stringify($scope.data[$scope.index].mappings,null,\"   \")\n    })    \n?>\nreturn (\"res\")\nhtml()"},{"name":"tree","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: mappings_tree\n **     SERVICE: http://localhost:8098\n **\n **/\n \n <?javascript\n// $scope.service = { host:\"localhost:9200\"}\n// $scope.index=\"sdi_sdi\"\n\n?>\nservice.es(\n    from: {{service}},\n    cmd:\"indices.getMapping\",\n    args:<? {\n        index:$scope.index\n    } ?>,\n    return: <? d => d[$scope.index].mappings ?>\n)    \nset(\"data\")\n\n<?javascript\n \n    var getChilds = (node, name) => {\n        let n = name\n        if ( node.type ) n += \" [\" + node.type + \"]\"\n        if ( !_.isObject(node) ) n += \" : \" + node\n        \n        let res = {\n         name: n,\n         children:[]\n        }\n        _.keys(node).forEach( k => {\n            if(_.isObject(node[k])){\n                res.children.push(getChilds(node[k],k))\n            } \n            // else {\n            //     res.children.push({\n            //         name:`${k}:${node[k]}`,\n            //         children:[]\n            //     })\n            // }\n        })\n        return res    \n    }\n    \n    $scope.res = {\n\t\"tooltip\": {\n\t\t\"trigger\": \"item\",\n\t\t\"triggerOn\": \"mousemove\"\n\t},\n\t\"series\": [\n\t\t{\n\t\t\t\"type\": \"tree\",\n\t\t\t\"name\": \"tree2\",\n\t\t\t\"data\": [getChilds($scope.data,$scope.index)],\n\t\t\t\"top\": \"10%\",\n\t\t\t\"left\": \"10%\",\n\t\t\t\"bottom\": \"10%\",\n\t\t\t\"right\": \"15%\",\n\t\t\t\"symbolSize\": 8,\n\t\t\t\"symbol\": \"rect\",\n\t\t\t\"roam\": true,\n\t\t\t\"label\": {\n\t\t\t\t\"normal\": {\n\t\t\t\t\t\"position\": \"top\",\n\t\t\t\t\t\"align\": \"center\",\n\t\t\t\t\tfontSize:14\n\t\t\t\t// \t\"fontWeight\":\"bold\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"leaves\": {\n\t\t\t    \"symbolSize\": 2,\n\t\t\t\t\"label\": {\n\t\t\t\t\t\"normal\": {\n\t\t\t\t\t\t\"position\": \"right\",\n\t\t\t\t\t\t\"verticalAlign\": \"middle\",\n\t\t\t\t\t\t\"align\": \"left\",\n\t\t\t\t\t\t\"fontWeight\":\"bold\",\n\t\t\t\t\t\tfontSize:14\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"expandAndCollapse\": true,\n\t\t\t\"initialTreeDepth\": 3,\n\t\t\t\"animationDuration\": 550,\n\t\t\t\"animationDurationUpdate\": 750\n\t\t}\n\t]\n}\n    \n    \n    \n?>\nreturn(\"res\")\n"},{"name":"get_index_info","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: get_index_info\n **     SERVICE: http://localhost:8098\n **\n **/\nservice.es(\n    from: {{service}},\n    cmd:\"cat.indices\",\n    args:<? ({\n        format:\"json\"\n    })\n    ?>\n    ,\n    return:<?\n        d => _.find(d, i => i.index == $scope.index)\n    ?>\n)\nset(\"extData\")\n\n<?html\n\n<div class=\"ma-1\" style=\"border:1px solid #eaeaea; background:white;\">\n<div class=\"info--text mx-3 pa-2\">\n    <div class=\"row display-1 d-flex justify-center\">\n        <div class=\"align-center pa-0\">\n            <i class=\"mdi ${icon}\"></i>${value}\n        </div>\n        \n    </div>\n    <div class=\"pa-0 d-flex justify-center body-2\">\n                ${title}\n        </div>\n</div>\n</div>\n\n\n?>\nset(\"html\")\n<?javascript\n    $scope.data = _.extend({}, $scope.extData)\n    $scope.data.docs_count = $scope.data[\"docs.count\"]\n    $scope.data.docs_deleted = $scope.data[\"docs.deleted\"]\n    $scope.data.store_size = $scope.data[\"store.size\"]\n    $scope.data.color = ($scope.data.status == \"red\")\n                        ? \"error\"\n                        : ($scope.data.status == \"yellow\")\n                            ? \"warning\"\n                            : \"success\"\n    let t = _.template($scope.html)\n    $scope.res = {\n        health: t({\n            title: \"Status\",\n            color: $scope.data.color,\n            value: $scope.data.status,\n            icon: \"mdi-heart-circle-outline\"\n        }),\n        documents: t({\n            title: \"Documents\",\n            color: \"info\",\n            value: $scope.data.docs_count,\n            icon: \"mdi-file-document-box-multiple-outline\"\n        }),\n        deleted: t({\n            title: \"Deleted\",\n            color: \"info\",\n            value: $scope.data.docs_deleted,\n            icon: \"mdi-trash-can-outline\"\n        }),\n        storage: t({\n            title: \"Storage\",\n            color: \"info\",\n            value: $scope.data.store_size,\n            icon: \"mdi-database\"\n        }),\n    }\n?>\nreturn(\"res\")\n\n"}],"data":{"source":"embedded","embedded":"<h2 color=\"#eee\"><center>not configured<center></h2><p>Use options dialog for configure this widget</p>","script":""},"id":"s05upyxsum","activated":false}]},"wofhicigx3h":{"widgets":[{"type":"html-widget","name":"indexDataHeader","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"primary lighten-1 white--text pa-2 headline font-weight-light\">\n Samples\n</div>","script":""},"id":"pzm1xhcc3im","activated":false}]},"o1hu8n8317q":{"widgets":[{"type":"inputs-widget","name":"querySettings","icon":"mdi-file-document-box-outline","options":{"widget":{"visible":true,"height":300}},"data":{"source":"embedded","embedded":{"title":"Table Settings","field":{"columns":{"type":"select","label":"Table Columns","multiple":true,"items":[{"value":"a","label":"Last Day"},{"value":"b","label":"Last Month"},{"value":"c","label":"Last 15 Years"}],"itemText":"label","value":{"value":"a","label":"Last Day"}},"rows":{"type":"number","label":"Rows Limit","value":10}}},"script":""},"id":"omwzt4cfdde","activated":false}]},"prroix9g39s":{"widgets":[{"type":"html-widget","name":"selectedProgress","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div></div>","script":""},"id":"l0gyqzwzd8p","activated":false},{"type":"data-table-widget","name":"indexData","icon":"mdi-grid","options":{"widget":{"visible":true},"rowsPerPage":[10,25,50,{"text":"All","value":-1}],"usePagination":true,"headerTextOrientation":"horizontal","dense":true,"typography":"caption","textColor":"default","textBackground":"default","useColors":true,"palette":{"id":"BuGn_9","color":["#f7fcfd","#e5f5f9","#ccece6","#99d8c9","#66c2a4","#41ae76","#238b45","#006d2c","#00441b"],"isReverse":false},"colorMode":"column","pagination":false,"fixedHeader":true},"data":{"source":"embedded","embedded":{"dataset":{"dimensions":[],"source":[]}},"script":""},"id":"agwnj31a576","activated":false}]},"lapnr0gde3":{"widgets":[{"type":"html-widget","name":"noname_clone_gybpp2086g4","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"primary--text px-3\">\n<div class=\"display-2 font-weight-light\">\n     <i class=\"mdi mdi-feature-search-outline pr-2\"></i>Indices Exploration Example\n</div>\n<div class=\"body-1 font-weight-light\">\n    Analyze Elasticsearch Indices (Mappings and data of indices)\n</div>\n</div>\n","script":""},"id":"gybpp2086g4","activated":false}]},"2vwvz46hqxg":{"widgets":[{"type":"html-widget","name":"clusterInfo","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div></div>","script":""},"id":"epu1tfkex4a","activated":false}]},"vi9l9nacss":{"widgets":[{"type":"html-widget","name":"health","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div></div>","script":""},"id":"4nkyus1o0bm","activated":false}]},"gvkmxvq5shd":{"widgets":[{"type":"html-widget","name":"documents","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div></div>","script":""},"id":"hs3rj5g0v9t","activated":false}]},"6d3eeyidnan":{"widgets":[{"type":"html-widget","name":"deleted","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div>\n</div>","script":""},"id":"2s5j9v3ornm","activated":false}]},"1u77mw4xbau":{"widgets":[{"type":"html-widget","name":"storage","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div></div>","script":""},"id":"f8j9h45o8ws","activated":false}]},"auc2fg14map":{"widgets":[{"type":"data-selector-widget","name":"indexSelector","icon":"mdi-format-list-checks","options":{"widget":{"visible":true,"multiple":false,"label":"Select Index","anywaySelectFirst":true},"mapper":{"id":"3_alpha_code","title":"name"},"style":"\n  widget-style {\n    margin-top:0.5em;\n  }\n"},"data":{"source":"embedded","embedded":[],"script":"<?javascript\n// $scope.service = { host: \"https://owdiu9cgtv:n3q29pc0dt@ginkgo-232472029.eu-west-1.bonsaisearch.net/\"}//localhost:9200\" }\n?>\nservice.es(\n    from: {{service}},\n    cmd:\"cat.indices\",\n    args:<? ({\n        format:\"json\"\n    })\n    ?>,\n    return:<?\n        d => d.map(r => r.index).filter(r=> !r.startsWith(\".\"))\n    ?>\n)\nc.order()\nc.map(<? d => ({id:d, title:d}) ?>)"},"id":"ntpohtkiju","activated":false}]},"r0w2t1d92lk":{"widgets":[{"type":"html-widget","name":"index_name","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"\r\n<div class=\"pa-2 ma-2 primary--text\">\r\n   \r\n       \t\r\n            <div class=\"headline text-xs-center\">\r\n                <i class=\"mdi mdi-table-large pr-1\"></i>\r\n                kibana_sample_data_ecommerce\r\n            </div>\r\n            <div class=\"subheading font-weight-light text-xs-center\">\r\n                Index\r\n            </div>\r\n      \r\n   \r\n</div>    \r\n \r\n","script":""},"id":"bon7z3xzlj","activated":false}]}},"id":"explorer","title":"Indices Exploration","url":"https://jace-dev.herokuapp.com/design/ElasticSearch#/explorer"},{"layout":"flex","sections":[{"align":"justify-center","holders":[{"name":"default","width":11}]},{"align":"justify-center","holders":[{"name":"1s0fl89b4ed","width":2},{"name":"ia3zycvpweh","width":3},{"name":"aztej1zacy6","width":3}]},{"align":"justify-center","holders":[{"name":"op84or84zda","width":9}]},{"align":"justify-center","holders":[{"name":"4knze7eau2t","width":2},{"name":"4f1j44cmjeg","width":7}]},{"align":"justify-center","holders":[{"name":"9bz8agwvcu5","width":9}]},{"align":"justify-center","holders":[{"name":"579lixs0nie","width":11}]}],"holders":{"default":{"widgets":[{"type":"html-widget","name":"noname_clone_baovfu83voh_clone_trbg367oscq_clone_inxk1n9p4sc","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"primary--text pa-3\">\n<div class=\"display-2 font-weight-light\">\n     <i class=\"mdi mdi-airplane pr-2\"></i>Global Flight Dashboard Example\n</div>\n<div class=\"body-1 font-weight-light\">\n    Analyze mock flight data for ES-Air, Logstash Airways, Kibana Airlines and JetBeats\n</div> \n</div>","script":""},"id":"inxk1n9p4sc","activated":false},{"type":"mediator-widget","name":"noname","icon":"mdi-language-javascript","options":{"widget":{"visible":true}},"data":{"script":"    let mediator = this;\n     \n    let scripts = mediator.api.selectWidgets(\"0gq3gejm3ut4\").$refs.instance.scripts\n    let getScript = name => _.find(scripts,item => item.name == name).script\n    \n    ///////////////////////////////////////////////////////////////\n    class Queue {\n    \tconstructor(callback){\n    \t\tthis.iterations = 0\n    \t\tthis.callback = callback\n    \t}\n    \n    \t_run(i, resolver) {\n    \t\ti = i || 0\n    \t\tif(!resolver){\n    \t\t\treturn new Promise( resolve => {\n    \t\t\tresolver = resolve\n    \t\t\tthis.callback(i)\n    \t\t\t\t.then(() => {\n    \t\t\t\t\tif(i < this.iterations) {\n    \t\t\t\t\t\tthis._run(i+1, resolver)\n    \t\t\t\t\t} else {\n    \t\t\t\t\t\tresolver()\n    \t\t\t\t\t}\t\n    \t\t\t\t})\t\n    \t\t\t})\t\n    \t\t} else {\n    \t\t\tthis.callback(i)\n    \t\t\t\t.then(() => {\n    \t\t\t\t\tif(i < this.iterations-1) {\n    \t\t\t\t\t\tthis._run(i+1, resolver)\n    \t\t\t\t\t} else {\n    \t\t\t\t\t\tresolver()\n    \t\t\t\t\t}\t\n    \t\t\t\t})\t\n    \t\t}\n    \t}\n    \trun(iterations){\n    \t\tthis.iterations = iterations\n    \t\treturn this._run()\n    \t}\n    } \n\n    \n    \n    //////////////////////////////////////////////////////////////\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    let widgets = [\n        {name:\"total_flights\",message:\"Prepare totals\"},\n        {name:\"flight_success\",message:\"Prepare totals\"},\n        {name:\"flight_delays\",message:\"Prepare totals\"},\n        {name:\"flight_cancellations\",message:\"Prepare totals\"},\n        {name:\"countries\",message:\"Prepare locations\"},\n        {name:\"origins\",message:\"Prepare locations\"},\n        {name:\"destinations\",message:\"Prepare locations\"},\n        {name:\"carrier_activity\",message:\"Prepare carriers info\"},\n        {name:\"carrier_robustness\",message:\"Prepare carriers info\"},\n        {name:\"map\",message:\"Prepare locations\"},\n        // {name:\"dest_countries\",message:\"Prepare locations\"},\n        {name:\"flight_delay_bar\",message:\"Prepare activity\"},\n        {name:\"activity\",message:\"Prepare activity\"},\n        // {name:\"weather\",message:\"Prepare weather stat\"},\n        {name:\"log\",message:\"Prepare log\"},\n        {name:\"stacked\",message:\"Prepare carriers info\"}\n    ].map( w => ({\n        name: w.name,\n        script: w.name,\n        message: w.message,\n        instance: mediator.api.selectWidgets( d => d.config.name == w.name)\n    }))\n    \n    mediator.api.on({\n        event:\"init-page-state\",\n        callback: () => {\n            widgets.forEach( w => {\n                w.instance.hide()\n            })\n        }\n    })\n    \n    mediator.api.on({\n        event:\"page-stop\",\n        callback: () => {\n            mediator.api.off()\n        }\n    })\n    \n    \n    mediator.api.on({\n        event:\"start-page-script\",\n        callback: () => {\n            mediator.emit(\"init-page-state\")\n            \n            let p = mediator.api.progress({\n                text:`connect to elasticsearch on ${window.esUrl}`, \n                maxStage:16, \n                title:\"Connect to elasticsearch service\"\n            })\n            // console.log(\"$dialogManager\",mediator.$dialogManager)\n            let service =  window.esService\n            let q = new Queue ( index => {\n                console.log(index,widgets[index].name,widgets[index].updated)\n                if(widgets[index].updated) return new Promise( resolve => {resolve()})\n                \n                console.log(\"init\", index, widgets[index].script)\n                return mediator.api.runDps(getScript(widgets[index].script),{service})\n                .then( response => {\n                    console.log(\"res\", index, widgets[index].script, response)\n                    if(response.type == \"error\") return\n                    p.set({text:widgets[index].message})\n                    widgets[index].updated = true;\n                    setTimeout(() => {\n                        try{\n                            widgets[index].instance.update({data:response.data})    \n                        } catch (e){\n                            console.log(\"ERROR\",widgets[index].name)\n                        }\n                        \n                        widgets[index].instance.show()\n                    }, 100)\n                    return response.data\n                })\n            })\n            \n            q.run(widgets.length)\n            .then( result => {\n                p.set({text:\"Render dashboard\"})\n                setTimeout(()=>{\n                    p.cancel()\n                }, 2000)\n                \n                \n                    \n                // Promise.all(result.map( (r, index) => new Promise( (resolve, reject) => {\n                //     try {\n                //         widgets[index].instance.show()\n                //         setTimeout(() => {\n                //             widgets[index].instance.update({data:r})\n                //             resolve(true)\n                //         }, 10)    \n                //     } catch (e) {\n                //         reject(JSON.stringify(r)+'\\\\n'+e.toString())\n                //     }    \n                // })))\n                // .then(() => {\n                //     setTimeout(()=>{\n                //         p.cancel()\n                //     }, 2000)\n                // })\n                // .catch( e => {\n                //     console.log(\"ERROR\",e)\n                // })\n                \n                // // result.forEach( (r, index) => {\n                // //     widgets[index].instance.show()\n                // //     widgets[index].instance.update({data:r})\n                    \n                // // })\n                \n            })\n            \n            // Promise.all(widgets.map(w => mediator.api.runDps(getScript(w.script),{service})\n            //     .then( response => {\n            //         p.set({text:w.message})\n            //         return response.data\n            //     })))\n            // .then( result => {\n            //     p.set({text:\"Render dashboard\"})\n            //     Promise.all(result.map( (r, index) => new Promise( (resolve, reject) => {\n            //         try {\n            //             widgets[index].instance.show()\n            //             setTimeout(() => {\n            //                 widgets[index].instance.update({data:r})\n            //                 resolve(true)\n            //             }, 10)    \n            //         } catch (e) {\n            //             reject(JSON.stringify(r)+'\\\\n'+e.toString())\n            //         }    \n            //     })))\n            //     .then(() => {\n            //         setTimeout(()=>{\n            //             p.cancel()\n            //         }, 2000)\n            //     })\n            //     .catch( e => {\n            //         console.log(\"ERROR\",e)\n            //     })\n                \n            //     // result.forEach( (r, index) => {\n            //     //     widgets[index].instance.show()\n            //     //     widgets[index].instance.update({data:r})\n                    \n            //     // })\n                \n            // })\n        }\n    })\n"},"id":"v1g5wb2amm","activated":false},{"type":"dps-suite-widget","name":"noname","icon":"mdi-card-text-outline","options":{"widget":{"visible":true}},"scripts":[{"name":"total_flights","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: total_flights\n **     SERVICE: http://localhost:8098\n **\n **/\n// <?javascript\n//  $scope.service = {\n//      host:\"https://px9z1t1oz3:8tzna6hgfv@yew-17306313.eu-west-1.bonsaisearch.net:443\"\n//  }\n// ?> \n\nservice.es(\n\t\t\t\t\n    from: {{service}},\n    cmd:\"count\",\n    args:<? {\n        index:\"kibana_sample_data_flights\",\n        body: {\n \n              \"query\": {\n            \t\"bool\": {\n            \t\t\"must\": [],\n            \t\t\"filter\": [\n            \t\t\t{\n            \t\t\t\t\"match_all\": {}\n            \t\t\t}\n            \t\t],\n            \t\t\"should\": [],\n            \t\t\"must_not\": []\n            \t}\n            }\n \n        }\n    } ?>\n    ,\n    returns:<? \n        d => d.count\n    ?>\n)   \nset(\"response\")\n<?html\n\n<div class=\"ma-1\" style=\"border:1px solid #eaeaea; background: white;\">\n<div class=\"primary--text mx-3 pa-2\">\n    <div class=\"row display-1 d-flex justify-center\">\n        <div class=\"align-center pa-0\">\n            <i class=\"mdi mdi-airplane\"></i>${value}\n        </div>\n        \n    </div>\n    <div class=\"pa-0 d-flex justify-center body-2\">\n                Total Flights\n        </div>\n</div>\n</div>\n\n?>\nset(\"template\")\n<?javascript\n    $scope.res = _.template($scope.template)({value:$scope.response})\n?>\n\n\nreturn(\"res\")\nhtml()"},{"name":"flight_success","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: total_flights\n **     SERVICE: http://localhost:8098\n **\n **/\n \nservice.es(\n    from: {{service}},\n    cmd:\"count\",\n    args:<? {\n        index:\"kibana_sample_data_flights\",\n        body: {\n  \n          \"query\": {\n            \"bool\": {\n              \"must\": [\n                {\n                  \"match_phrase\": {\n                    \"Cancelled\": {\n                      \"query\": false\n                    }\n                  }\n                }\n              ],\n              \"filter\": [\n                {\n                  \"match_all\": {}\n                }\n              ],\n              \"should\": [],\n              \"must_not\": []\n            }\n          }\n        }\n    } ?>\n    ,\n    returns:<? \n        d => d.count\n    ?>\n)   \nset(\"response\")\n\n\n<?html\n<div class=\"ma-1\" style=\"border:1px solid #eaeaea; background: white;\">\n<div class=\"success--text mx-3 pa-2\">\n    <div class=\"row display-1 d-flex justify-center\">\n        <div class=\"align-center pa-0\">\n            <i class=\"mdi mdi-airplane\"></i>${value}\n        </div>\n        \n    </div>\n    <div class=\"pa-0 d-flex justify-center body-2\">\n                Successed\n        </div>\n</div>\n</div>\n\n?>\nset(\"template\")\n<?javascript\n    $scope.res = _.template($scope.template)({value: $scope.response})\n?>\n\n\nreturn(\"res\")\nhtml()"},{"name":"flight_delays","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: flight_delays\n **     SERVICE: http://localhost:8098\n **\n **/\nservice.es (\n    from: {{service}},\n    cmd:\"count\",\n    args:\n    <? \n        {\n            index: 'kibana_sample_data_flights',\n            body: {\n                \"query\": {\n                    \"bool\": {\n                        \"must\": [{\n                            \"match_phrase\": {\n                                \"FlightDelay\": {\n                                  \"query\": true\n                                }\n                            }\n                        }]\n                    }\n                }\n            }\n        }\n    ?>,\n    returns:<? \n        d => d.count\n    ?>\n)\nset(\"response\")\n\n<?html\n\n<div class=\"ma-1\" style=\"border:1px solid #eaeaea; background: white;\">\n    <div class=\"warning--text mx-3 pa-2\">\n    <div class=\"row display-1 d-flex justify-center\">\n        <div class=\"align-center pa-0\">\n            <i class=\"mdi mdi-airplane\"></i>${value}\n        </div>\n        \n    </div>\n    <div class=\"pa-0 d-flex justify-center body-2\">\n                Delayed\n        </div>\n</div>\n</div>\n\n\n?>\nset(\"template\")\n<?javascript\n    $scope.res = _.template($scope.template)({value: $scope.response})\n?>\n\n\nreturn(\"res\")\nhtml()"},{"name":"flight_cancellations","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: flight_cancellations\n **     SERVICE: http://localhost:8098\n **\n **/\nservice.es(\n    from: {{service}},\n    cmd:\"count\",\n    args:<? {\n        index:\"kibana_sample_data_flights\",\n        body: {\n  \n          \"query\": {\n            \"bool\": {\n              \"must\": [\n                {\n                  \"match_phrase\": {\n                    \"Cancelled\": {\n                      \"query\": true\n                    }\n                  }\n                }\n              ],\n              \"filter\": [\n                {\n                  \"match_all\": {}\n                }\n              ],\n              \"should\": [],\n              \"must_not\": []\n            }\n          }\n        }\n    } ?>\n    ,\n    returns:<? \n        d => d.count\n    ?>\n)   \nset(\"response\")\n\n<?html\n<div class=\"ma-1\" style=\"border:1px solid #eaeaea; background: white;\">\n    <div class=\"error--text mx-3 pa-2\">\n    <div class=\"row display-1 d-flex justify-center\">\n        <div class=\"align-center pa-0\">\n            <i class=\"mdi mdi-airplane-off\"></i>${value}\n        </div>\n        \n    </div>\n    <div class=\"pa-0 d-flex justify-center body-2\">\n                Cancelled\n        </div>\n</div>\n</div>\n\n?>\nset(\"template\")\n<?javascript\n    $scope.res = _.template($scope.template)({value: $scope.response})\n?>\n\n\nreturn(\"res\")\nhtml()"},{"name":"countries","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: countries\n **     SERVICE: http://localhost:8098\n **\n **/\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            index: 'kibana_sample_data_flights',\n            body: {\n              \"aggs\": {\n                \"data\": {\n                  \"terms\": {\n                    \"field\": \"OriginCountry\",\n                    \"size\":200\n                  }\n                }\n              },\n              \"size\": 0,\n              \n              \"query\": {\n                \"match_all\":{}\n              }\n            }\n        })\n    ?>\n)\nset(\"response\")\n\n<?html\n<div class=\"ma-1\" style=\"border:1px solid #eaeaea; background: white;\">\n    <div class=\"info--text mx-3 pa-2\">\n    <div class=\"row display-1 d-flex justify-center\">\n        <div class=\"align-center pa-0\">\n            <i class=\"mdi mdi-map-marker-outline\"></i>${value}\n        </div>\n        \n    </div>\n    <div class=\"pa-0 d-flex justify-center body-2\">\n                Countries\n        </div>\n</div>\n</div>\n\n\n?>\nset(\"template\")\n<?javascript\n    $scope.res = _.template($scope.template)({value: $scope.response.aggregations.data.buckets.length})\n?>\n\n\nreturn(\"res\")\nhtml()"},{"name":"carrier_activity","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: carrier_activity\n **     SERVICE: http://localhost:8098\n **\n **/\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n  \"aggs\": {\n    \"2\": {\n      \"terms\": {\n        \"field\": \"Carrier\",\n        \"order\": {\n          \"_count\": \"desc\"\n        },\n        \"size\": 5\n      }\n    }\n  },\n  \"size\": 0,\n  \"_source\": {\n    \"excludes\": []\n  },\n  \"stored_fields\": [\n    \"*\"\n  ],\n  \"script_fields\": {\n    \"hour_of_day\": {\n      \"script\": {\n        \"source\": \"doc['timestamp'].value.hourOfDay\",\n        \"lang\": \"painless\"\n      }\n    }\n  },\n  \"docvalue_fields\": [\n    {\n      \"field\": \"timestamp\",\n      \"format\": \"date_time\"\n    }\n  ],\n  \"query\": {\n    \"bool\": {\n    //   \"must\": [\n    //     {\n    //       \"range\": {\n    //         \"timestamp\": {\n    //           \"format\": \"strict_date_optional_time\",\n    //           \"gte\": \"2019-07-25T10:57:13.181Z\",\n    //           \"lte\": \"2019-07-26T10:57:13.181Z\"\n    //         }\n    //       }\n    //     }\n    //   ],\n      \"filter\": [\n        {\n          \"match_all\": {}\n        },\n        {\n          \"match_all\": {}\n        },\n        {\n          \"match_all\": {}\n        }\n      ],\n      \"should\": [],\n      \"must_not\": []\n    }\n  }\n}\n        })\n    ?>\n)\nset(\"response\")\n<?javascript\n    $scope.fstat = $scope.response.aggregations[\"2\"].buckets\n?>\nget(\"fstat\")\nc.order(by:\"doc_count\")\ns.norm.log(by:\"doc_count\")\nset(\"fstat\")\n<?javascript\n    $scope.res = {\n\t\"legend\": [\n\t\t\"Carrier Activity\"\n\t],\n\t\"yAxis\":$scope.fstat.map( d => d.key),\n\t\"series\": [\n\t\t{\n\t\t\t\"name\": \"Carrier Activity\",\n\t\t\t\"type\": \"bar\",\n\t\t\t\"data\": $scope.fstat.map( d => Number.parseFloat(d.log.toFixed(2)))\n\t\t}\t\n\t]\n}\n?>\nreturn(\"res\")"},{"name":"carrier_robustness","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: carrier_robustness\n **     SERVICE: http://localhost:8098\n **\n **/\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n              \"aggs\": {\n                \"data\": {\n                  \"terms\": {\n                    \"field\": \"Carrier\",\n                    \"order\": {\n                      \"_count\": \"desc\"\n                    }\n                  }\n                }\n              },\n              \"size\":0,\n              \"query\": {\n                \n                \"match_phrase\": {\n                  \"Cancelled\": {\n                    \"query\": true\n                  }\n               }\n              }\n            }\n        })\n    ?>\n)\nset(\"response\")\n<?javascript\n    $scope.fstat = $scope.response.aggregations.data.buckets\n?>\nget(\"fstat\")\n\ns.norm.log(by:\"doc_count\")\n\n\n<?javascript\n    $scope.res = {\n\t\"legend\": [\n\t\t\"Carries Robustness\"\n\t],\n\t\"yAxis\":$scope.fstat.map( d => d.key),\n\t\"series\": [\n\t\t{\n\t\t\t\"name\": \"Carries Robustness\",\n\t\t\t\"type\": \"bar\",\n\t\t\t\"data\": $scope.fstat.map( d => Number.parseFloat((1-d.log).toFixed(2)))\n\t\t}\t\n\t]\n}\n?>\nreturn(\"res\")"},{"name":"origin_countries","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: origin_countries\n **     SERVICE: http://localhost:8098\n **\n **/\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n      \"aggs\": {\n        \"data\": {\n          \"terms\": {\n            \"field\": \"OriginCountry\",\n            \"size\": 200\n          }\n        }\n      },\n      \"size\": 0,\n      \n      \"query\": {\n        \"match_all\":{}\n      }\n        }\n        })\n    ?>\n)\nset(\"response\")\n<?javascript\n    $scope.fstat = $scope.response.aggregations.data.buckets\n?>\nget(\"fstat\")\nc.order(by:\"doc_count\")\nset(\"fstat\")\n<?javascript\n    $scope.res = {\n\t\"legend\": [\n\t\t\"Origin Countries\"\n\t],\n\t\"yAxis\":$scope.fstat.map( d => d.key),\n\t\"series\": [\n\t\t{\n\t\t\t\"name\": \"Origin Countries\",\n\t\t\t\"type\": \"bar\",\n\t\t\t\"data\": $scope.fstat.map( d => d.doc_count)\n\t\t}\t\n\t]\n}\n?>\nreturn(\"res\")"},{"name":"dest_countries","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: dest_countries\n **     SERVICE: http://localhost:8098\n **\n **/\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n              \"aggs\": {\n                \"data\": {\n                  \"terms\": {\n                    \"field\": \"OriginCountry\",\n                    \"size\": 92\n                  }\n                }\n              },\n              \"size\": 0,\n              \n              \"query\": {\n                \"match_all\":{}\n              }\n            }\n        })\n    ?>\n)\nset(\"response\")\n<?javascript\n    $scope.fstat = $scope.response.aggregations.data.buckets\n?>\nget(\"fstat\")\nc.order(by:\"doc_count\")\nset(\"fstat\")\n<?javascript\n    $scope.res = {\n\t\"legend\": [\n\t\t\"Origin Countries\"\n\t],\n\t\"yAxis\":$scope.fstat.map( d => d.key),\n\t\"series\": [\n\t\t{\n\t\t\t\"name\": \"Origin Countries\",\n\t\t\t\"type\": \"bar\",\n\t\t\t\"data\": $scope.fstat.map( d => d.doc_count)\n\t\t}\t\n\t]\n}\n?>\nreturn(\"res\")"},{"name":"flight_delay_bar","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: flight_delay_bar\n **     SERVICE: http://localhost:8098\n **\n **/\nservice.es (\n    from: {{service}},\n   cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n  \"aggs\": {\n    \"data\": {\n      \"histogram\": {\n        \"field\": \"FlightDelayMin\",\n        \"interval\": 30,\n        \"min_doc_count\": 1\n      }\n    }\n  },\n  \"size\":0,\n  \"query\": {\n    \"bool\": {\n      \"filter\": [\n        {\n          \"match_all\": {}\n        },\n        {\n          \"match_all\": {}\n        }\n      ],\n      \"should\": [],\n      \"must_not\": [\n        {\n          \"match_phrase\": {\n            \"FlightDelayMin\": {\n              \"query\": 0\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n        })\n    ?>\n)\nset(\"response\")\n<?javascript\n    $scope.fstat = $scope.response.aggregations.data.buckets\n?>\nget(\"fstat\")\n\n\n\n<?javascript\n    $scope.res = {\n\t\"legend\": [\n\t\t\"Flight Delay\"\n\t],\n\t\"xAxis\": $scope.fstat.map(d => d.key),\n\t\"series\": [\n\t\t{\n\t\t\t\"name\": \"Flight Delay\",\n\t\t\t\"type\": \"bar\",\n\t\t\t\"data\": $scope.fstat.map(d => d.doc_count)\n\t\t}\n\t]\n}\n?>\nreturn(\"res\")"},{"name":"activity","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: activity\n **     SERVICE: http://localhost:8098\n **\n **/\n// <?javascript\n//     $scope.service = {host:\"localhost:9200\"}\n// ?>\n\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n              \"aggs\": {\n                \"time\": {\n                  \"date_histogram\": {\n                    \"field\": \"timestamp\",\n                    \"interval\": \"1d\",\n                    \"time_zone\": \"Europe/Kiev\",\n                    \"min_doc_count\": 1\n                  },\n                  \"aggs\": {\n                    \"flight_count\": {\n                      \"terms\": {\n                        \"field\": \"Carrier\",\n                        \"order\": {\n                          \"_count\": \"asc\"\n                        },\n                        \"size\": 5\n                      }\n                    }\n                  }\n                }\n              },\n              \"size\": 0,\n             \n              \"query\": {\n                \"bool\": {\n                  \n                  \"filter\": [\n                    {\n                      \"match_all\": {}\n                    }\n                  ]\n                  \n                }\n              }\n            }\n        })\n    ?>,\n    returns: <? \n        d => _.drop(d.aggregations.time.buckets.map( t => {\n            let res = {\n                time: moment(new Date(t.key_as_string)).format(\"YYYY-MM-DD\")\n            }\n            t.flight_count.buckets.forEach( c => {\n                res[c.key] = c.doc_count\n            })\n            return res\n        }))\n    ?> \n)\n\nc.order(by:\"time\")\nc.select(where: <? d => _.keys(d).length > 1 ?>)\nset(\"response\")\n\n\n\n<?javascript\n    let carriers = _.drop( _.keys( $scope.response[0]))\n    $scope.res = {\n    \t\"legend\": carriers,\n    \t\"xAxis\": $scope.response.map(d => d.time),\n    \t\"series\": carriers.map( c => ({\n    \t    name: c,\n    \t    type: \"bar\",\n    \t    stack: \"a\",\n    \t    \"areaStyle\":{\n    \t\t    opacity:0.3\n    \t\t},\n    \t\t\"data\": $scope.response.map(d => d[c]),\n    \t\t\"smooth\": true\n    \t    \n    \t}))\n\t\n    }\n?>\nreturn(\"res\")\n"},{"name":"weather","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: weather\n **     SERVICE: http://localhost:8098\n **\n **/\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n  \"aggs\": {\n    \"data\": {\n      \"terms\": {\n        \"field\": \"DestWeather\",\n        \"order\": {\n          \"_count\": \"desc\"\n        },\n        \"size\": 20\n      }\n    }\n  },\n  \"size\": 0,\n \n  \"query\": {\n  \n          \"match_all\": {}\n  \n  }\n}\n        })\n    ?>\n)\nset(\"response\")\n<?javascript\n    $scope.fstat = $scope.response.aggregations.data.buckets\n?>\nget(\"fstat\")\n\n\n\n<?javascript\n    $scope.res = {\n\t\"series\": [\n\t\t{\n\t\t\t\"name\": \"Weather\",\n\t\t\t\"type\": \"wordCloud\",\n\t\t\t\"left\": \"center\",\n\t\t\t\"top\": \"center\",\n\t\t\t\"width\": \"100%\",\n\t\t\t\"height\": \"100%\",\n\t\t\t\"right\": null,\n\t\t\t\"bottom\": null,\n\t\t\t\"sizeRange\": [\n\t\t\t\t10,\n\t\t\t\t48\n\t\t\t],\n\t\t\t\"gridSize\": 10,\n\t\t\t\"rotationRange\": [\n\t\t\t\t0,\n\t\t\t\t0\n\t\t\t],\n\t\t\t\"rotationStep\": 0,\n\t\t\t\"textPadding\": 10,\n\t\t\t\"drawOutOfBound\": true,\n\t\t\t\"data\": $scope.fstat.map( d => ({\n\t\t\t    name:d.key,\n\t\t\t    value: d.doc_count\n\t\t\t}))\n\t\t}\n\t]\n}\n?>\nreturn(\"res\")"},{"name":"log","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: log\n **     SERVICE: http://localhost:8098\n **\n **/\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n  \"version\": true,\n  \"size\": 500,\n  \"sort\": [\n    {\n      \"timestamp\": {\n        \"order\": \"desc\",\n        \"unmapped_type\": \"boolean\"\n      }\n    }\n  ],\n  \"_source\": {\n    \"excludes\": []\n  },\n  \"stored_fields\": [\n    \"*\"\n  ],\n  \"script_fields\": {\n    \"hour_of_day\": {\n      \"script\": {\n        \"source\": \"doc['timestamp'].value.hourOfDay\",\n        \"lang\": \"painless\"\n      }\n    }\n  },\n  \"docvalue_fields\": [\n    {\n      \"field\": \"timestamp\",\n      \"format\": \"date_time\"\n    }\n  ],\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"timestamp\": {\n              \"format\": \"strict_date_optional_time\",\n              \"gte\": \"2020-04-22T20:59:48.003Z\",\n              \"lte\": \"2020-05-23T20:59:48.004Z\"\n            }\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"match_all\": {}\n        },\n        {\n          \"match_all\": {}\n        }\n      ],\n      \"should\": [],\n      \"must_not\": []\n    }\n  },\n  \"highlight\": {\n    \"pre_tags\": [\n      \"@kibana-highlighted-field@\"\n    ],\n    \"post_tags\": [\n      \"@/kibana-highlighted-field@\"\n    ],\n    \"fields\": {\n      \"*\": {}\n    },\n    \"fragment_size\": 2147483647\n  }\n}\n\n        })\n    ?>\n)\nset(\"response\")\n<?javascript\n    $scope.fstat = $scope.response.hits.hits.map( d=> d._source )\n    $scope.res = {\n\t\"dataset\": {\n\t\t\"dimensions\": [\n\t\t    \n\t\t\t\"Flight Number\",\n\t\t\t\"Carrier\",\n\t\t\t\"Origin\",\n\t\t\t\"Destination\",\n\t\t\t\"Ticket Price (Avg)\",\n\t\t\t\"Distance (km)\",\n\t\t\t\"Cancelled\"\n\t\t],\n\t\t\"source\": $scope.fstat.map( d => {\n\t\t    let res = {\n\t\t        \n    \t\t\t\"Flight Number\": d.FlightNum,\n    \t\t\t\"Carrier\": d.Carrier,\n    \t\t\t\"Origin\":`${d.Origin} - ${d.OriginCountry} ${d.OriginCityName}`,\n    \t\t\t\"Destination\":`${d.Dest} - ${d.DestCountry} ${d.DestCityName}`,\n    \t\t\t\"Ticket Price (Avg)\": Number.parseFloat(d.AvgTicketPrice.toFixed(2)),\n    \t\t\t\"Distance (km)\": Number.parseFloat(d.DistanceKilometers.toFixed(0)),\n    \t\t\t\"Cancelled\": d.Cancelled\n\t\t    }\n\t\t    return res\n\t\t})\n\t}\n}\n?>\nreturn (\"res\")"},{"name":"stacked","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: stacked\n **     SERVICE: http://localhost:8098\n **\n **/\n// <?javascript\n//  $scope.service = {\n//      host:\"https://px9z1t1oz3:8tzna6hgfv@yew-17306313.eu-west-1.bonsaisearch.net:443\"\n//  }\n// ?>\n \n \nservice.es(\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n                      \"aggs\": {\n                        \"data\": {\n                          \"date_histogram\": {\n                            \"field\": \"timestamp\",\n                            \"interval\": \"2d\",\n                            \"time_zone\": \"Europe/Kiev\",\n                            \"min_doc_count\": 1\n                          },\n                          \"aggs\": {\n                            \"values\": {\n                              \"terms\": {\n                                \"field\": \"FlightDelayType\",\n                                \"order\": {\n                                  \"_count\": \"desc\"\n                                },\n                                \"size\": 5\n                              }\n                            }\n                          }\n                        }\n                      },\n                      \"size\": 0,\n                      \"docvalue_fields\": [\n                        {\n                          \"field\": \"timestamp\",\n                          \"format\": \"date_time\"\n                        }\n                      ],\n                      \"query\": {\n                        \"bool\": {\n                          \n                          \"filter\": [\n                            {\n                              \"match_all\": {}\n                            }\n                          ]\n                        }\n                      }\n                    }\n\n        })\n    ?>,\n    return: <? \n            d => d.aggregations.data.buckets.map( row => {\n             \n            let res = {\n                time: moment(new Date(row.key_as_string)).format(\"MMM DD\"),\n                data: row.values.buckets.map( b =>({\n                    key: b.key,\n                    value:b.doc_count\n                }))\n            }\n            // $scope.series.forEach( s => {\n            //     let f = _.find(row.data.buckets, i => i.key == s)\n            //     res[s] = (f) ? f.doc_count : 0\n            // })\n            return res\n        })\n?>\n)\nset(\"series\")\n\n<?javascript\n    let legend = _.unique(\n        _.flatten($scope.series.map(r => r.data)).map(r => r.key)\n    )\n    let timeline = $scope.series.map(r => r.time)\n    $scope.res = {\n    \tlegend,\n    \t\"xAxis\": timeline,\n    \t\"series\": legend.map( s => ({\n    \t    name: s,\n    \t    type:\"bar\",\n    \t    stack:\"a\",\n    \t    data: $scope.series.map( v => {\n    \t     let f = _.find(v.data, d => d.key == s)\n    \t     return (f) ? f.value : 0\n    \t    })\n    \t}))\n    }\t\n\n    \n?>\n\nreturn (\"res\")\n// service.es (\n//     from: {{service}},\n//     cmd:\"search\",\n//     args:\n//     <? \n//         ({\n//             // index: 'kibana_sample_data_flights',\n//             body: {\n//               \"aggs\": {\n//                 \"data\": {\n//                   \"date_histogram\": {\n//                     \"field\": \"timestamp\",\n//                     \"interval\": \"1h\",\n//                     \"time_zone\": \"Europe/Kiev\",\n//                     \"min_doc_count\": 1\n//                   },\n//                   \"aggs\": {\n//                     \"data\": {\n//                       \"terms\": {\n//                         \"field\": \"FlightDelayType\",\n//                         \"order\": {\n//                           \"_count\": \"desc\"\n//                         },\n//                         \"size\": 5\n//                       }\n//                     }\n//                   }\n//                 }\n//               },\n//               \"size\": 0,\n              \n//               \"query\": {\n//                 \"bool\": {\n//                   \"must\": [\n                    \n//                     {\n//                       \"range\": {\n//                         \"timestamp\": {\n//                           \"format\": \"strict_date_optional_time\",\n//                           \"gte\": \"2019-07-26T12:51:00.017Z\",\n//                           \"lte\": \"2019-07-27T12:51:00.017Z\"\n//                         }\n//                       }\n//                     }\n//                   ]\n                  \n//                 }\n//               }\n//             }\n\n//         })\n//     ?>,\n//     returns: <? \n   \n//         d => d.aggregations.data.buckets.map( row => {\n             \n//             let res = {\n//                 time: moment(new Date(row.key_as_string)).format(\"MMM DD HH:mm\")\n//             }\n//             $scope.series.forEach( s => {\n//                 let f = _.find(row.data.buckets, i => i.key == s)\n//                 res[s] = (f) ? f.doc_count : 0\n//             })\n//             return res\n//         }) \n//     ?>\n// )\n\n// set(\"data\")\n// <?javascript\n//     $scope.res = {\n// \t\"legend\": $scope.series,\n// \t\"xAxis\": $scope.data.map(d => d.time),\n// \t\"series\": $scope.series.map( s => ({\n// \t    name: s,\n// \t    type:\"bar\",\n// \t    stack:\"a\",\n// \t    data: $scope.data.map( r => r[s])\n// \t})) \n\t\n\t\n// }\n// ?>\n// return(\"res\")"},{"name":"a1","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: a1\n **     SERVICE: http://localhost:8098\n **\n **/\n<?javascript\n    $scope.service = {host:\"localhost:9200\"}\n?>\n\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n              \"aggs\": {\n                \"time\": {\n                  \"date_histogram\": {\n                    \"field\": \"timestamp\",\n                    \"interval\": \"1d\",\n                    \"time_zone\": \"Europe/Kiev\",\n                    \"min_doc_count\": 1\n                  },\n                  \"aggs\": {\n                    \"flight_count\": {\n                      \"terms\": {\n                        \"field\": \"Carrier\",\n                        \"order\": {\n                          \"_count\": \"asc\"\n                        },\n                        \"size\": 5\n                      }\n                    }\n                  }\n                }\n              },\n              \"size\": 0,\n             \n              \"query\": {\n                \"bool\": {\n                  \n                  \"filter\": [\n                    {\n                      \"match_all\": {}\n                    }\n                  ]\n                  \n                }\n              }\n            }\n        })\n    ?>,\n    returns: <? \n        d => _.drop(d.aggregations.time.buckets.map( t => {\n            let res = {\n                time: moment(new Date(t.key_as_string)).format(\"YY-MM-DD\")\n            }\n            t.flight_count.buckets.forEach( c => {\n                res[c.key] = c.doc_count\n            })\n            return res\n        }))\n    ?> \n)\n\nc.order(by:\"time\")\nc.select(where: <? d => _.keys(d).length > 1 ?>)\nset(\"response\")\n\n\n\n<?javascript\n    let carriers = _.drop( _.keys( $scope.response[0]))\n    $scope.res = {\n    \t\"legend\": carriers,\n    \t\"xAxis\": $scope.response.map(d => d.time),\n    \t\"series\": carriers.map( c => ({\n    \t    name: c,\n    \t    type: \"line\",\n    \t    stack: \"a\",\n    \t    \"areaStyle\":{\n    \t\t    opacity:0.3\n    \t\t},\n    \t\t\"data\": $scope.response.map(d => d[c]),\n    \t\t\"smooth\": true\n    \t    \n    \t}))\n\t\n    }\n?>\nreturn(\"res\")\n"},{"name":"origins","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: origins\n **     SERVICE: http://localhost:8098\n **\n **/\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            index: 'kibana_sample_data_flights',\n            body: {\n  \"aggs\": {\n    \"data\": {\n      \"terms\": {\n        \"field\": \"Origin\",\n        \"order\": {\n          \"_count\": \"asc\"\n        },\n        \"size\": 92\n      }\n    }\n  },\n  \"size\": 0,\n  \n  \"query\": {\n    \"match_all\":{}\n  }\n}\n        })\n    ?>\n)\nset(\"response\")\n\n<?html\n\n<div class=\"ma-1\" style=\"border:1px solid #eaeaea; background: white;\">\n    <div class=\"info--text mx-3 pa-2\">\n    <div class=\"row display-1 d-flex justify-center\">\n        <div class=\"align-center pa-0\">\n            <i class=\"mdi mdi-airplane-takeoff\"></i>${value}\n        </div>\n        \n    </div>\n    <div class=\"pa-0 d-flex justify-center body-2\">\n                Origins\n        </div>\n</div>\n</div>\n\n\n?>\nset(\"template\")\n<?javascript\n    $scope.res = _.template($scope.template)({value: $scope.response.aggregations.data.buckets.length})\n?>\n\n\nreturn(\"res\")\nhtml()"},{"name":"destinations","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: destinations\n **     SERVICE: http://localhost:8098\n **\n **/\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            index: 'kibana_sample_data_flights',\n            body: {\n  \"aggs\": {\n    \"data\": {\n      \"terms\": {\n        \"field\": \"Dest\",\n        \"order\": {\n          \"_count\": \"asc\"\n        },\n        \"size\": 92\n      }\n    }\n  },\n  \"size\": 0,\n  \n  \"query\": {\n    \"match_all\":{}\n  }\n}\n        })\n    ?>\n)\nset(\"response\")\n\n<?html\n<div class=\"ma-1\" style=\"border:1px solid #eaeaea; background: white;\">\n    <div class=\"info--text mx-3 pa-2\">\n    <div class=\"row display-1 d-flex justify-center\">\n        <div class=\"align-center pa-0\">\n            <i class=\"mdi mdi-airplane-landing\"></i>${value}\n        </div>\n        \n    </div>\n    <div class=\"pa-0 d-flex justify-center body-2\">\n                 Destinations\n        </div>\n</div>\n</div>\n\n?>\nset(\"template\")\n<?javascript\n    $scope.res = _.template($scope.template)({value: $scope.response.aggregations.data.buckets.length})\n?>\n\n\nreturn(\"res\")\nhtml()"},{"name":"map","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: map\n **     SERVICE: http://localhost:8098\n **\n **/\n// <?javascript\n//     $scope.service = {host:\"localhost:9200\"}\n// ?>\n\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n              \"aggs\": {\n                \"origin\": {\n                  \"terms\": {\n                    \"field\": \"OriginCityName\",\n                    \"order\": {\n                      \"_count\": \"desc\"\n                    },\n                    \"size\": 100\n                  },\n                  \"aggs\": {\n                    \"dest\": {\n                      \"terms\": {\n                        \"field\": \"DestCityName\",\n                        \"order\": {\n                          \"_count\": \"desc\"\n                        },\n                        \"size\": 100\n                      }\n                    }\n                  }\n                }\n              },\n              \"size\": 0,\n            \n              \"query\": {\n                \"bool\": {\n                  \"filter\": [\n                    {\n                      \"match_all\": {}\n                    }\n                  ]\n                }\n              }\n            }\n        })\n    ?>\n    ,\n    returns: <? \n        d => {\n            let res = []\n            d.aggregations.origin.buckets.forEach( o => {\n                res = res.concat(\n                    o.dest.buckets.map( _d => ({\n                        origin: o.key,\n                        dest: _d.key,\n                        value: _d.doc_count\n                    }))\n                )\n            })\n            return res.filter(_d => _d.value > 10 && _d.origin != _d.dest)    \n        }\n    ?> \n)\nset(\"connections\")\n\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n              \"aggs\": {\n                \"filter_agg\": {\n                  \"filter\": {\n                    \"geo_bounding_box\": {\n                      \"ignore_unmapped\": true,\n                      \"DestLocation\": {\n                        \"top_left\": {\n                          \"lat\": 90,\n                          \"lon\": -180\n                        },\n                        \"bottom_right\": {\n                          \"lat\": -90,\n                          \"lon\": 180\n                        }\n                      }\n                    }\n                  },\n                  \"aggs\": {\n                     \"4\": {\n                        \"terms\": {\n                          \"field\": \"DestCityName\",\n                          \"order\": {\n                            \"_count\": \"desc\"\n                          },\n                          \"size\": 100\n                        },\n                        \"aggs\":{\n                          \"2\": {\n                            \"geohash_grid\": {\n                              \"field\": \"DestLocation\",\n                              \"precision\": 2\n                            },\n                            \"aggs\": {\n                              \"3\": {\n                                \"geo_centroid\": {\n                                  \"field\": \"DestLocation\"\n                                }\n                                \n                              }\n                            }\n                          }\n                        }\n                      }\n                  }\n                }\n              },\n              \"size\": 0,\n              \"query\": {\n                \"bool\": {\n                 \n                  \"filter\": [\n                    {\n                      \"match_all\": {}\n                    },\n                    {\n                      \"match_all\": {}\n                    }\n                  ]\n                }\n              }\n            }\n        })\n    ?>\n    ,\n    returns: <? \n        d => d.aggregations.filter_agg[\"4\"].buckets.map( r => [\n                r[\"2\"].buckets[0][\"3\"].location.lon,\n                r[\"2\"].buckets[0][\"3\"].location.lat,\n                r.doc_count,\n                r.key\n            ])\n    ?> \n)\n\nset(\"points\")\n\n<?javascript\n    $scope.connections = $scope.connections.map( d => ({\n      origin: _.find($scope.points, p => p[3] == d.origin),\n      dest: _.find($scope.points, p => p[3] == d.dest),\n      value: d.value,\n      originName: d.origin,\n      destName:d.dest\n    }))\n    .map( d => ({\n        coords:[\n            d.origin,\n            d.dest\n        ],\n        value: d.value,\n        originName: d.originName,\n        destName:d.destName\n    }))\n    \n    $scope.res = {\n        colorScale:true,\n        series:[\n            {\n    \t\t\t\"name\": \"Cities\",\n    \t\t\t\"type\": \"scatter\",\n    \t\t\tsymbolSizeRange:[2,40],\n    \t\t\t\"coordinateSystem\": \"geo\",\n    \t\t\t\"data\": $scope.points,\n    \t\t\t\"activeOpacity\": 1,\n    \t\t\t\"label\": {\n    \t\t\t\t\"normal\": {\n    \t\t\t\t\t\"position\": \"top\",\n    \t\t\t\t\t\"color\": \"#222\",\n    \t\t\t\t\t\"show\": true\n    \t\t\t\t},\n    \t\t\t\t\"emphasis\": {\n    \t\t\t\t\t\"show\": true\n    \t\t\t\t}\n    \t\t\t},\n    \t\t\t\"itemStyle\": {\n    \t\t\t\t\"normal\": {\n    \t\t\t\t\t\"borderColor\": \"#404a59\"\n    \t\t\t\t}\n    \t\t\t}\n\t\t    },\n\t\t{\n\t\t\t\"name\": \"Flights\",\n\t\t\t\"type\": \"lines\",\n\t\t\t\"zlevel\": 1,\n\t\t\t\"effect\": {\n\t\t\t\t\"show\": true,\n\t\t\t\t\"period\": 9,\n\t\t\t\t\"trailLength\": 0.2,\n\t\t\t\t\"color\": \"#999\",\n\t\t\t\t\"symbolSize\": 4\n\t\t\t},\n\t\t\t\"lineStyle\": {\n\t\t\t\t\"normal\": {\n\t\t\t\t    width:0,\n\t\t\t\t\tcolor:\"#999\",\n\t\t\t\t\t\"curveness\": 0.3\n\t\t\t\t},\n\t\t\t\t\"emphasis\":{\n\t\t\t\t    width:3,\n\t\t\t\t    color:\"#777\",\n\t\t\t\t    curveness: 0.3\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"data\": $scope.connections,\n\t\t\t\"symbolSize\": 6\n\t\t}\n\t\t ]\n\t}\n?>\nreturn (\"res\")\n"},{"name":"connections","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: connections\n **     SERVICE: http://localhost:8098\n **\n **/\n// <?javascript\n//     $scope.service = {host:\"localhost:9200\"}\n// ?>\n\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n              \"aggs\": {\n                \"origin\": {\n                  \"terms\": {\n                    \"field\": \"OriginCityName\",\n                    \"order\": {\n                      \"_count\": \"desc\"\n                    },\n                    \"size\": 10 //100\n                  },\n                  \"aggs\": {\n                    \"dest\": {\n                      \"terms\": {\n                        \"field\": \"DestCityName\",\n                        \"order\": {\n                          \"_count\": \"desc\"\n                        },\n                        \"size\": 100\n                      }\n                    }\n                  }\n                }\n              },\n              \"size\": 0,\n            \n              \"query\": {\n                \"bool\": {\n                  \"filter\": [\n                    {\n                      \"match_all\": {}\n                    }\n                  ]\n                }\n              }\n            }\n        })\n    ?>\n    ,\n    returns: <? \n        d => {\n            let res = []\n            d.aggregations.origin.buckets.forEach( o => {\n                res = res.concat(\n                    o.dest.buckets.map( _d => ({\n                        origin: o.key,\n                        dest: _d.key,\n                        value: _d.doc_count\n                    }))\n                )\n            })\n            return res.filter(_d => _d.value > 10 && _d.origin != _d.dest)    \n        }\n    ?> \n)\nset(\"connections\")\n\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n              \"aggs\": {\n                \"filter_agg\": {\n                  \"filter\": {\n                    \"geo_bounding_box\": {\n                      \"ignore_unmapped\": true,\n                      \"DestLocation\": {\n                        \"top_left\": {\n                          \"lat\": 90,\n                          \"lon\": -180\n                        },\n                        \"bottom_right\": {\n                          \"lat\": -90,\n                          \"lon\": 180\n                        }\n                      }\n                    }\n                  },\n                  \"aggs\": {\n                     \"4\": {\n                        \"terms\": {\n                          \"field\": \"DestCityName\",\n                          \"order\": {\n                            \"_count\": \"desc\"\n                          },\n                          \"size\": 100\n                        },\n                        \"aggs\":{\n                          \"2\": {\n                            \"geohash_grid\": {\n                              \"field\": \"DestLocation\",\n                              \"precision\": 2\n                            },\n                            \"aggs\": {\n                              \"3\": {\n                                \"geo_centroid\": {\n                                  \"field\": \"DestLocation\"\n                                }\n                                \n                              }\n                            }\n                          }\n                        }\n                      }\n                  }\n                }\n              },\n              \"size\": 0,\n              \"query\": {\n                \"bool\": {\n                 \n                  \"filter\": [\n                    {\n                      \"match_all\": {}\n                    },\n                    {\n                      \"match_all\": {}\n                    }\n                  ]\n                }\n              }\n            }\n        })\n    ?>\n    ,\n    returns: <? \n        d => d.aggregations.filter_agg[\"4\"].buckets.map( r => [\n                r[\"2\"].buckets[0][\"3\"].location.lon,\n                r[\"2\"].buckets[0][\"3\"].location.lat,\n                r.doc_count,\n                r.key\n            ])\n    ?> \n)\n\nset(\"points\")\n\n<?javascript\n    $scope.connections = $scope.connections.map( d => ({\n      origin: _.find($scope.points, p => p[3] == d.origin),\n      dest: _.find($scope.points, p => p[3] == d.dest),\n      value: d.value\n    }))\n    \n    $scope.res = {\n        series:[{\n            data: $scope.points,\n            markLine:{\n                data: $scope.connections.map( d => [\n                    {x: d.origin[0], y: d.origin[1]},\n                    {x: d.dest[0], y: d.dest[1]},\n                    d.value\n                ])\n            }        \n        }]\n    }\n?>\nreturn (\"res\")\n"}],"data":{"source":"embedded","embedded":"<h2 color=\"#eee\"><center>not configured<center></h2><p>Use options dialog for configure this widget</p>","script":""},"id":"0gq3gejm3ut4","activated":false}]},"579lixs0nie":{"widgets":[{"type":"html-widget","name":"noname","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"display-1 primary lighten-1 white--text font-weight-light pa-2\">\n   Flight Log\n</div> \n","script":""},"id":"ptd0j6aofd","activated":false},{"type":"data-table-widget","name":"log","icon":"mdi-grid","options":{"widget":{"visible":true},"headerTextOrientation":"horizontal","useColors":true,"palette":{"id":"YlGn_3","color":["#f7fcb9","#addd8e","#31a354"],"isReverse":false},"colorMode":"column","rowsPerPage":[10,25,50,{"text":"All","value":-1}],"usePagination":true,"dense":true,"typography":"caption","textColor":"default","textBackground":"default","fixedHeader":false,"pagination":true},"data":{"source":"embedded","embedded":{"dataset":{"dimensions":[],"source":[]}},"script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: table\n **     SERVICE: http://localhost:8098\n **\n **/\nservice.es (\n    from: <? ({host:\"localhost:9200\"}) ?>,\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n  \"version\": true,\n  \"size\": 500,\n  \"sort\": [\n    {\n      \"timestamp\": {\n        \"order\": \"desc\",\n        \"unmapped_type\": \"boolean\"\n      }\n    }\n  ],\n  \"_source\": {\n    \"excludes\": []\n  },\n  \"stored_fields\": [\n    \"*\"\n  ],\n  \"script_fields\": {\n    \"hour_of_day\": {\n      \"script\": {\n        \"source\": \"doc['timestamp'].value.hourOfDay\",\n        \"lang\": \"painless\"\n      }\n    }\n  },\n  \"docvalue_fields\": [\n    {\n      \"field\": \"timestamp\",\n      \"format\": \"date_time\"\n    }\n  ],\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"range\": {\n            \"AvgTicketPrice\": {\n              \"gte\": 100,\n              \"lte\": 997\n            }\n          }\n        },\n        {\n          \"range\": {\n            \"timestamp\": {\n              \"format\": \"strict_date_optional_time\",\n              \"gte\": \"2019-07-26T10:14:47.178Z\",\n              \"lte\": \"2019-07-27T10:14:47.178Z\"\n            }\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"match_all\": {}\n        },\n        {\n          \"match_all\": {}\n        }\n      ],\n      \"should\": [],\n      \"must_not\": []\n    }\n  },\n  \"highlight\": {\n    \"pre_tags\": [\n      \"@kibana-highlighted-field@\"\n    ],\n    \"post_tags\": [\n      \"@/kibana-highlighted-field@\"\n    ],\n    \"fields\": {\n      \"*\": {}\n    },\n    \"fragment_size\": 2147483647\n  }\n}\n\n        })\n    ?>\n)\nset(\"response\")\n<?javascript\n    $scope.fstat = $scope.response.hits.hits.map( d=> d._source )\n    $scope.res = {\n\t\"dataset\": {\n\t\t\"dimensions\": [\n\t\t    \n\t\t\t\"Flight Number\",\n\t\t\t\"Carrier\",\n\t\t\t\"Origin\",\n\t\t\t\"Destination\",\n\t\t\t\"Ticket Price (Avg)\",\n\t\t\t\"Distance (km)\",\n\t\t\t\"Cancelled\"\n\t\t],\n\t\t\"source\": $scope.fstat.map( d => {\n\t\t    let res = {\n\t\t        \n    \t\t\t\"Flight Number\": d.FlightNum,\n    \t\t\t\"Carrier\": d.Carrier,\n    \t\t\t\"Origin\":`${d.Origin} - ${d.OriginCountry} ${d.OriginCityName}`,\n    \t\t\t\"Destination\":`${d.Dest} - ${d.DestCountry} ${d.DestCityName}`,\n    \t\t\t\"Ticket Price (Avg)\": Number.parseFloat(d.AvgTicketPrice.toFixed(2)),\n    \t\t\t\"Distance (km)\": Number.parseFloat(d.DistanceKilometers.toFixed(0)),\n    \t\t\t\"Cancelled\": d.Cancelled\n\t\t    }\n\t\t    return res\n\t\t})\n\t}\n}\n?>\nreturn (\"res\")"},"id":"ge22hm64hiq","activated":false}]},"9bz8agwvcu5":{"widgets":[{"type":"html-widget","name":"noname_clone_o9s5lclw85a_clone_eysvtk56po","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"display-1 primary lighten-1 white--text font-weight-light pa-2\">\n    Activity\n</div> \n","script":""},"id":"eysvtk56po","activated":false},{"type":"bar-chart-widget","name":"activity","icon":"mdi-chart-bar","options":{"widget":{"visible":true},"tooltip":{"trigger":"axis","axisPointer":{"type":"shadow"}},"legend":{"data":["Serie1","Serie2"]},"grid":{"left":"3%","right":"4%","bottom":"3%","containLabel":true},"yAxis":{"type":"value","boundaryGap":[0,0.01]},"xAxis":{"type":"category","data":["o1","o2","o3","o4","o5","o6"]},"series":[{"name":"Serie1","type":"bar","data":[18203,23489,29034,104970,131744,630230]},{"name":"Serie2","type":"bar","data":[19325,23438,31000,121594,134141,681807]}],"style":"\n  widget-style {\n    background: white;\n    border:1px solid #eaeaea;\n  }\n"},"data":{"source":"embedded","embedded":{"legend":[],"xAxis":[],"series":[]},"script":"<?javascript\n    $scope.service = {host:\"localhost:9200\"}\n?>\n\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n              \"aggs\": {\n                \"time\": {\n                  \"date_histogram\": {\n                    \"field\": \"timestamp\",\n                    \"interval\": \"1d\",\n                    \"time_zone\": \"Europe/Kiev\",\n                    \"min_doc_count\": 1\n                  },\n                  \"aggs\": {\n                    \"flight_count\": {\n                      \"terms\": {\n                        \"field\": \"Carrier\",\n                        \"order\": {\n                          \"_count\": \"asc\"\n                        },\n                        \"size\": 5\n                      }\n                    }\n                  }\n                }\n              },\n              \"size\": 0,\n             \n              \"query\": {\n                \"bool\": {\n                  \n                  \"filter\": [\n                    {\n                      \"match_all\": {}\n                    }\n                  ]\n                  \n                }\n              }\n            }\n        })\n    ?>,\n    returns: <? \n        d => _.drop(d.aggregations.time.buckets.map( t => {\n            let res = {\n                time: moment(new Date(t.key_as_string)).format(\"YY-MM-DD\")\n            }\n            t.flight_count.buckets.forEach( c => {\n                res[c.key] = c.doc_count\n            })\n            return res\n        }))\n    ?> \n)\nc.select(where: <? d => _.keys(d).length > 1 ?>)\nc.order(by:\"time\")\nset(\"response\")\n\n\n\n<?javascript\n    let carriers = _.drop( _.keys( $scope.response[0]))\n    $scope.res = {\n    \t\"legend\": carriers,\n    \t\"xAxis\": $scope.response.map(d => d.time),\n    \t\"series\": carriers.map( c => ({\n    \t    name: c,\n    \t    type: \"bar\",\n    \t    stack: \"a\",\n    \t    \"areaStyle\":{\n    \t\t    opacity:0.3\n    \t\t},\n    \t\t\"data\": $scope.response.map(d => d[c]),\n    \t\t\"smooth\": true\n    \t    \n    \t}))\n\t\n    }\n?>\nreturn(\"res\")\n"},"id":"5ouow4i1psv","activated":false}]},"1s0fl89b4ed":{"widgets":[{"type":"html-widget","name":"noname_clone_baovfu83voh_clone_trbg367oscq_clone_uh31eyji4sf_clone_fbsa3h2z5tg_clone_kmdxhgo882_clone_23fr6ov66m1","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"display-1 primary lighten-1 white--text font-weight-light pa-2\">\n    Flights\n</div> \n","script":""},"id":"23fr6ov66m1","activated":false},{"type":"html-widget","name":"total_flights","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"primary--text\">\n    wait...\n</div>","script":"service.es (\n    from: <? ({host:\"localhost:9200\"}) ?>,\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            index: 'kibana_sample_data_flights',\n            body: {\n                query:{\n                    match_all:{}\n                }\n            }\n        })\n    ?>\n)\nset(\"response\")\n\n<?html\n<div>\n    <div class=\"pa-2 ma-2\"  style=\"border:2px solid #dedede; background:white;\">\n        <div class=\"primary--text darken-2 headline text-xs-center\">\n            &${relation.substring(0,2)}; ${value}\n        </div>\n        <div class=\"primary--text darken-2 subheading font-weight-light text-xs-center\">\n            Total Flights\n        </div>\n    </div>\n</div>    \n?>\nset(\"template\")\n<?javascript\n    $scope.res = _.template($scope.template)($scope.response.hits.total)\n?>\n\n\nreturn(\"res\")\nhtml()"},"id":"63eqm9qdnke","activated":false},{"type":"html-widget","name":"flight_success","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"primary--text\">\n    wait...\n</div>","script":"service.es (\n    from: <? ({host:\"localhost:9200\"}) ?>,\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            index: 'kibana_sample_data_flights',\n            body: {\n  \"aggs\": {\n    \"2\": {\n      \"terms\": {\n        \"field\": \"Cancelled\",\n        \"order\": {\n          \"_count\": \"desc\"\n        },\n        \"size\": 5\n      }\n    }\n  },\n  \"size\": 0,\n  \"_source\": {\n    \"excludes\": []\n  },\n  \"stored_fields\": [\n    \"*\"\n  ],\n  \"script_fields\": {\n    \"hour_of_day\": {\n      \"script\": {\n        \"source\": \"doc['timestamp'].value.hourOfDay\",\n        \"lang\": \"painless\"\n      }\n    }\n  },\n  \"docvalue_fields\": [\n    {\n      \"field\": \"timestamp\",\n      \"format\": \"date_time\"\n    }\n  ],\n  \"query\": {\n    \"bool\": {\n    //   \"must\": [\n    //     {\n    //       \"range\": {\n    //         \"timestamp\": {\n    //           \"format\": \"strict_date_optional_time\",\n    //           \"gte\": \"2019-07-25T10:28:46.129Z\",\n    //           \"lte\": \"2019-07-26T10:28:46.129Z\"\n    //         }\n    //       }\n    //     }\n    //   ],\n      \"filter\": [\n        {\n          \"match_all\": {}\n        },\n        {\n          \"match_all\": {}\n        }\n      ],\n      \"should\": [],\n      \"must_not\": []\n    }\n  }\n}\n        })\n    ?>\n)\nset(\"response\")\n\n<?html\n<div>\n    <div class=\"pa-2 ma-2\"   style=\"border:2px solid #dedede; background:white;\">\n\n        <div class=\"success--text darken-2 headline text-xs-center\">\n             ${value}\n        </div>\n        <div class=\"success--text darken-2 subheading font-weight-light text-xs-center\">\n            Flight Success\n        </div>\n    </div>   \n</div>    \n?>\nset(\"template\")\n<?javascript\n    $scope.res = _.template($scope.template)({value: $scope.response.aggregations[\"2\"].buckets[0].doc_count})\n?>\n\n\nreturn(\"res\")\nhtml()"},"id":"rxsg4g8a6b","activated":false},{"type":"html-widget","name":"flight_delays","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"primary--text\">\n    wait...\n</div>","script":"service.es (\n    from: <? ({host:\"localhost:9200\"}) ?>,\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            index: 'kibana_sample_data_flights',\n            body: {\n  \n  \"size\": 0,\n \n  \n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"match_phrase\": {\n            \"FlightDelay\": {\n              \"query\": true\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n        })\n    ?>\n)\nset(\"response\")\n\n<?html\n<div>\n    <div class=\"pa-2 ma-2\"  style=\"border:2px solid #dedede; background:white;\">\n        <div class=\"warning--text darken-2 headline text-xs-center\">\n             ${value}\n        </div>\n        <div class=\"warning--text darken-2 subheading font-weight-light text-xs-center\">\n            Flight Delays\n        </div>\n    </div>    \n</div>    \n?>\nset(\"template\")\n<?javascript\n    $scope.res = _.template($scope.template)({value: $scope.response.hits.total.value})\n?>\n\n\nreturn(\"res\")\nhtml()"},"id":"1tuf0dbysfl","activated":false},{"type":"html-widget","name":"flight_cancellations","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"primary--text\">\n    wait...\n</div>","script":"service.es (\n    from: <? ({host:\"localhost:9200\"}) ?>,\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            index: 'kibana_sample_data_flights',\n            body: {\n  \"aggs\": {\n    \"2\": {\n      \"terms\": {\n        \"field\": \"Cancelled\",\n        \"order\": {\n          \"_count\": \"desc\"\n        },\n        \"size\": 5\n      }\n    }\n  },\n  \"size\": 0,\n  \"_source\": {\n    \"excludes\": []\n  },\n  \"stored_fields\": [\n    \"*\"\n  ],\n  \"script_fields\": {\n    \"hour_of_day\": {\n      \"script\": {\n        \"source\": \"doc['timestamp'].value.hourOfDay\",\n        \"lang\": \"painless\"\n      }\n    }\n  },\n  \"docvalue_fields\": [\n    {\n      \"field\": \"timestamp\",\n      \"format\": \"date_time\"\n    }\n  ],\n  \"query\": {\n    \"bool\": {\n    //   \"must\": [\n    //     {\n    //       \"range\": {\n    //         \"timestamp\": {\n    //           \"format\": \"strict_date_optional_time\",\n    //           \"gte\": \"2019-07-25T10:28:46.129Z\",\n    //           \"lte\": \"2019-07-26T10:28:46.129Z\"\n    //         }\n    //       }\n    //     }\n    //   ],\n      \"filter\": [\n        {\n          \"match_all\": {}\n        },\n        {\n          \"match_all\": {}\n        }\n      ],\n      \"should\": [],\n      \"must_not\": []\n    }\n  }\n}\n        })\n    ?>\n)\nset(\"response\")\n\n<?html\n<div>\n    <div class=\"pa-2 ma-2\"  style=\"border:2px solid #dedede; background:white;\">\n        <div class=\"error--text darken-2 headline text-xs-center\">\n             ${value}\n        </div>\n        <div class=\"error--text darken-2 subheading font-weight-light text-xs-center\">\n            Flight Cancellations\n        </div>\n    </div>    \n</div>    \n?>\nset(\"template\")\n<?javascript\n    $scope.res = _.template($scope.template)({value: $scope.response.aggregations[\"2\"].buckets[1].doc_count})\n?>\n\n\nreturn(\"res\")\nhtml()"},"id":"bo26vb1z3ir","activated":false}]},"ia3zycvpweh":{"widgets":[{"type":"html-widget","name":"noname_clone_baovfu83voh_clone_trbg367oscq_clone_uh31eyji4sf_clone_fbsa3h2z5tg_clone_kmdxhgo882","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"display-1 primary lighten-1 white--text font-weight-light pa-2\">\n    Carriers\n</div> \n","script":""},"id":"kmdxhgo882","activated":false},{"type":"bar-chart-widget","name":"carrier_activity","icon":"mdi-chart-bar","options":{"widget":{"visible":true,"height":"200"},"tooltip":{"trigger":"axis","axisPointer":{"type":"shadow"}},"legend":{"data":["Serie1","Serie2"]},"grid":{"left":"3%","right":"4%","bottom":"3%","containLabel":true},"xAxis":{"type":"value","boundaryGap":[0,0.01]},"yAxis":{"type":"category","data":["o1","o2","o3","o4","o5","o6"]},"series":[{"name":"Serie1","type":"bar","data":[18203,23489,29034,104970,131744,630230]},{"name":"Serie2","type":"bar","data":[19325,23438,31000,121594,134141,681807]}],"color":["#0c2c84","#225ea8","#1d91c0","#41b6c4","#7fcdbb","#c7e9b4","#edf8b1","#ffffd9"],"palette":{"id":"YlGnBu_8","color":["#ffffd9","#edf8b1","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#0c2c84"],"isReverse":true},"style":"\n  widget-style {\n    background: white;\n    border:1px solid #eaeaea;\n  }\n"},"data":{"source":"embedded","embedded":{"legend":["Serie1","Serie2"],"yAxis":["o1","o2","o3","o4","o5","o6"],"series":[{"name":"Serie1","type":"bar","data":[18203,23489,29034,104970,131744,630230]},{"name":"Serie2","type":"bar","data":[19325,23438,31000,121594,134141,681807]}]},"script":"service.es (\n    from: <? ({host:\"localhost:9200\"}) ?>,\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n  \"aggs\": {\n    \"2\": {\n      \"terms\": {\n        \"field\": \"Carrier\",\n        \"order\": {\n          \"_count\": \"desc\"\n        },\n        \"size\": 5\n      }\n    }\n  },\n  \"size\": 0,\n  \"_source\": {\n    \"excludes\": []\n  },\n  \"stored_fields\": [\n    \"*\"\n  ],\n  \"script_fields\": {\n    \"hour_of_day\": {\n      \"script\": {\n        \"source\": \"doc['timestamp'].value.hourOfDay\",\n        \"lang\": \"painless\"\n      }\n    }\n  },\n  \"docvalue_fields\": [\n    {\n      \"field\": \"timestamp\",\n      \"format\": \"date_time\"\n    }\n  ],\n  \"query\": {\n    \"bool\": {\n    //   \"must\": [\n    //     {\n    //       \"range\": {\n    //         \"timestamp\": {\n    //           \"format\": \"strict_date_optional_time\",\n    //           \"gte\": \"2019-07-25T10:57:13.181Z\",\n    //           \"lte\": \"2019-07-26T10:57:13.181Z\"\n    //         }\n    //       }\n    //     }\n    //   ],\n      \"filter\": [\n        {\n          \"match_all\": {}\n        },\n        {\n          \"match_all\": {}\n        },\n        {\n          \"match_all\": {}\n        }\n      ],\n      \"should\": [],\n      \"must_not\": []\n    }\n  }\n}\n        })\n    ?>\n)\nset(\"response\")\n<?javascript\n    $scope.fstat = $scope.response.aggregations[\"2\"].buckets\n?>\nget(\"fstat\")\nc.order(by:\"doc_count\")\ns.norm.log(by:\"doc_count\")\nset(\"fstat\")\n<?javascript\n    $scope.res = {\n\t\"legend\": [\n\t\t\"Carrier Activity\"\n\t],\n\t\"yAxis\":$scope.fstat.map( d => d.key),\n\t\"series\": [\n\t\t{\n\t\t\t\"name\": \"Carrier Activity\",\n\t\t\t\"type\": \"bar\",\n\t\t\t\"data\": $scope.fstat.map( d => Number.parseFloat(d.log.toFixed(2)))\n\t\t}\t\n\t]\n}\n?>\nreturn(\"res\")"},"id":"06bsvjz2cxab","activated":false},{"type":"bar-chart-widget","name":"carrier_robustness","icon":"mdi-chart-bar","options":{"widget":{"visible":true,"height":"200"},"tooltip":{"trigger":"axis","axisPointer":{"type":"shadow"}},"legend":{"data":["Serie1","Serie2"]},"grid":{"left":"3%","right":"4%","bottom":"3%","containLabel":true},"xAxis":{"type":"value","boundaryGap":[0,0.01]},"yAxis":{"type":"category","data":["o1","o2","o3","o4","o5","o6"]},"series":[{"name":"Serie1","type":"bar","data":[18203,23489,29034,104970,131744,630230]},{"name":"Serie2","type":"bar","data":[19325,23438,31000,121594,134141,681807]}],"color":["#31a354","#addd8e","#f7fcb9"],"palette":{"id":"YlGn_3","color":["#f7fcb9","#addd8e","#31a354"],"isReverse":true},"style":"\n  widget-style {\n    background: white;\n    border:1px solid #eaeaea;\n  }\n"},"data":{"source":"embedded","embedded":{"legend":["Serie1","Serie2"],"yAxis":["o1","o2","o3","o4","o5","o6"],"series":[{"name":"Serie1","type":"bar","data":[18203,23489,29034,104970,131744,630230]},{"name":"Serie2","type":"bar","data":[19325,23438,31000,121594,134141,681807]}]},"script":"service.es (\n    from: <? ({host:\"localhost:9200\"}) ?>,\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n              \"aggs\": {\n                \"data\": {\n                  \"terms\": {\n                    \"field\": \"Carrier\",\n                    \"order\": {\n                      \"_count\": \"desc\"\n                    }\n                  }\n                }\n              },\n              \"size\":0,\n              \"query\": {\n                \n                \"match_phrase\": {\n                  \"Cancelled\": {\n                    \"query\": true\n                  }\n               }\n              }\n            }\n        })\n    ?>\n)\nset(\"response\")\n<?javascript\n    $scope.fstat = $scope.response.aggregations.data.buckets\n?>\nget(\"fstat\")\n\ns.norm.log(by:\"doc_count\")\n\n\n<?javascript\n    $scope.res = {\n\t\"legend\": [\n\t\t\"Carries Robustness\"\n\t],\n\t\"yAxis\":$scope.fstat.map( d => d.key),\n\t\"series\": [\n\t\t{\n\t\t\t\"name\": \"Carries Robustness\",\n\t\t\t\"type\": \"bar\",\n\t\t\t\"data\": $scope.fstat.map( d => Number.parseFloat((1-d.log).toFixed(2)))\n\t\t}\t\n\t]\n}\n?>\nreturn(\"res\")"},"id":"1lb79tn41uq","activated":false}]},"aztej1zacy6":{"widgets":[{"type":"html-widget","name":"noname_clone_baovfu83voh_clone_trbg367oscq_clone_uh31eyji4sf_clone_fbsa3h2z5tg_clone_kmdxhgo882_clone_1cxrbf1umc2h","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"display-1 primary lighten-1 white--text font-weight-light pa-2\">\n    Flight Delays\n</div> \n","script":""},"id":"1cxrbf1umc2h","activated":false},{"type":"bar-chart-widget","name":"flight_delay_bar","icon":"mdi-chart-bar","options":{"widget":{"visible":true,"height":"200"},"tooltip":{"trigger":"axis","axisPointer":{"type":"shadow"}},"legend":{"data":["Serie1","Serie2"]},"grid":{"left":"3%","right":"4%","bottom":"3%","containLabel":true},"yAxis":{"type":"value","boundaryGap":[0,0.01]},"xAxis":{"type":"category","data":["o1","o2","o3","o4","o5","o6"]},"series":[{"name":"Serie1","type":"bar","data":[18203,23489,29034,104970,131744,630230]},{"name":"Serie2","type":"bar","data":[19325,23438,31000,121594,134141,681807]}],"color":["#d95f0e","#fec44f","#fff7bc"],"palette":{"id":"YlOrBr_3","color":["#fff7bc","#fec44f","#d95f0e"],"isReverse":true},"style":"\n  widget-style {\n    background: white;\n    border:1px solid #eaeaea;\n  }\n"},"data":{"source":"embedded","embedded":{"legend":["Serie1","Serie2"],"xAxis":["o1","o2","o3","o4","o5","o6"],"series":[{"name":"Serie1","type":"bar","data":[18203,23489,29034,104970,131744,630230]},{"name":"Serie2","type":"bar","data":[19325,23438,31000,121594,134141,681807]}]},"script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: histdelay\n **     SERVICE: http://localhost:8098\n **\n **/\n\nservice.es (\n    from: <? ({host:\"localhost:9200\"}) ?>,\n   cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n  \"aggs\": {\n    \"data\": {\n      \"histogram\": {\n        \"field\": \"FlightDelayMin\",\n        \"interval\": 30,\n        \"min_doc_count\": 1\n      }\n    }\n  },\n  \"size\":0,\n  \"query\": {\n    \"bool\": {\n      \"filter\": [\n        {\n          \"match_all\": {}\n        },\n        {\n          \"match_all\": {}\n        }\n      ],\n      \"should\": [],\n      \"must_not\": [\n        {\n          \"match_phrase\": {\n            \"FlightDelayMin\": {\n              \"query\": 0\n            }\n          }\n        }\n      ]\n    }\n  }\n}\n        })\n    ?>\n)\nset(\"response\")\n<?javascript\n    $scope.fstat = $scope.response.aggregations.data.buckets\n?>\nget(\"fstat\")\n\n\n\n<?javascript\n    $scope.res = {\n\t\"legend\": [\n\t\t\"Flight Delay\"\n\t],\n\t\"xAxis\": $scope.fstat.map(d => d.key),\n\t\"series\": [\n\t\t{\n\t\t\t\"name\": \"Flight Delay\",\n\t\t\t\"type\": \"bar\",\n\t\t\t\"data\": $scope.fstat.map(d => d.doc_count)\n\t\t}\n\t]\n}\n?>\nreturn(\"res\")"},"id":"iausaggtar","activated":false},{"type":"bar-chart-widget","name":"stacked","icon":"mdi-chart-bar","options":{"widget":{"visible":true,"height":"200"},"tooltip":{"trigger":"axis","axisPointer":{"type":"shadow"}},"legend":{"data":["Serie1","Serie2"]},"grid":{"left":"3%","right":"4%","bottom":"3%","containLabel":true},"yAxis":{"type":"value","boundaryGap":[0,0.01]},"xAxis":{"type":"category","data":["o1","o2","o3","o4","o5","o6"]},"series":[{"name":"Serie1","type":"bar","data":[18203,23489,29034,104970,131744,630230]},{"name":"Serie2","type":"bar","data":[19325,23438,31000,121594,134141,681807]}],"color":["#666666","#a6761d","#e6ab02","#66a61e","#e7298a","#7570b3","#d95f02","#1b9e77"],"palette":{"id":"Dark2_8","color":["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e","#e6ab02","#a6761d","#666666"],"isReverse":true},"style":"\n  widget-style {\n    background: white;\n    border:1px solid #eaeaea;\n  }\n"},"data":{"source":"embedded","embedded":{"legend":["Serie1","Serie2"],"xAxis":["o1","o2","o3","o4","o5","o6"],"series":[{"name":"Serie1","type":"bar","data":[18203,23489,29034,104970,131744,630230],"stack":"a"},{"name":"Serie2","type":"bar","data":[19325,23438,31000,121594,134141,681807],"stack":"a"}]},"script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: stacked\n **     SERVICE: http://localhost:8098\n **\n **/\n\n\n\n\n\n\nservice.es(\n    from: <? ({host:\"localhost:9200\"}) ?>,\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n              \"aggs\": {\n                \"data\": {\n                  \"terms\": {\n                    \"field\": \"FlightDelayType\",\n                    \"order\": {\n                      \"_count\": \"desc\"\n                    },\n                    \"size\": 10\n                  }\n                }\n              },\n              \"size\": 0,\n              \"query\": {\n                \"match_all\": {}\n              }\n            }\n\n        })\n    ?>,\n    return: <? \n        d => d.aggregations.data.buckets.map( row => row.key )\n    ?>\n)\nset(\"series\")\n\nservice.es (\n    from: <? ({host:\"localhost:9200\"}) ?>,\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n              \"aggs\": {\n                \"data\": {\n                  \"date_histogram\": {\n                    \"field\": \"timestamp\",\n                    \"interval\": \"1h\",\n                    \"time_zone\": \"Europe/Kiev\",\n                    \"min_doc_count\": 1\n                  },\n                  \"aggs\": {\n                    \"data\": {\n                      \"terms\": {\n                        \"field\": \"FlightDelayType\",\n                        \"order\": {\n                          \"_count\": \"desc\"\n                        },\n                        \"size\": 5\n                      }\n                    }\n                  }\n                }\n              },\n              \"size\": 0,\n              \n              \"query\": {\n                \"bool\": {\n                  \"must\": [\n                    \n                    {\n                      \"range\": {\n                        \"timestamp\": {\n                          \"format\": \"strict_date_optional_time\",\n                          \"gte\": \"2019-07-26T12:51:00.017Z\",\n                          \"lte\": \"2019-07-27T12:51:00.017Z\"\n                        }\n                      }\n                    }\n                  ]\n                  \n                }\n              }\n            }\n\n        })\n    ?>,\n    returns: <? \n   \n        d => d.aggregations.data.buckets.map( row => {\n             \n            let res = {\n                time: moment(new Date(row.key_as_string)).format(\"MMM DD HH:mm\")\n            }\n            $scope.series.forEach( s => {\n                let f = _.find(row.data.buckets, i => i.key == s)\n                res[s] = (f) ? f.doc_count : 0\n            })\n            return res\n        }) \n    ?>\n)\n\nset(\"data\")\n<?javascript\n    $scope.res = {\n\t\"legend\": $scope.series,\n\t\"xAxis\": $scope.data.map(d => d.time),\n\t\"series\": $scope.series.map( s => ({\n\t    name: s,\n\t    type:\"bar\",\n\t    stack:\"a\",\n\t    data: $scope.data.map( r => r[s])\n\t})) \n\t\n\t\n}\n?>\nreturn(\"res\")"},"id":"lju4vvo2lxm","activated":false}]},"4knze7eau2t":{"widgets":[{"type":"html-widget","name":"countries","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"primary--text\">\n    wait...\n</div>","script":"service.es (\n    from: <? ({host:\"localhost:9200\"}) ?>,\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            index: 'kibana_sample_data_flights',\n            body: {\n  \"aggs\": {\n    \"data\": {\n      \"terms\": {\n        \"field\": \"OriginCountry\",\n        \"order\": {\n          \"_count\": \"asc\"\n        },\n        \"size\": 92\n      }\n    }\n  },\n  \"size\": 0,\n  \n  \"query\": {\n    \"match_all\":{}\n  }\n}\n        })\n    ?>\n)\nset(\"response\")\n\n<?html\n<div>\n    <div class=\"pa-2 ma-2\"   style=\"border:2px solid #dedede; background:white;\">\n\n        <div class=\"success--text darken-2 headline text-xs-center\">\n             ${value}\n        </div>\n        <div class=\"success--text darken-2 subheading font-weight-light text-xs-center\">\n            Countries\n        </div>\n    </div>   \n</div>    \n?>\nset(\"template\")\n<?javascript\n    $scope.res = _.template($scope.template)({value: $scope.response.aggregations.data.buckets.length})\n?>\n\n\nreturn(\"res\")\nhtml()"},"id":"ybqzi3t7e5q","activated":false},{"type":"html-widget","name":"origins","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"primary--text\">\n    wait...\n</div>","script":"service.es (\n    from: <? ({host:\"localhost:9200\"}) ?>,\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            index: 'kibana_sample_data_flights',\n            body: {\n  \"aggs\": {\n    \"data\": {\n      \"terms\": {\n        \"field\": \"Origin\",\n        \"order\": {\n          \"_count\": \"asc\"\n        },\n        \"size\": 92\n      }\n    }\n  },\n  \"size\": 0,\n  \n  \"query\": {\n    \"match_all\":{}\n  }\n}\n        })\n    ?>\n)\nset(\"response\")\n\n<?html\n<div>\n    <div class=\"pa-2 ma-2\"   style=\"border:2px solid #dedede; background:white;\">\n\n        <div class=\"success--text darken-2 headline text-xs-center\">\n             ${value}\n        </div>\n        <div class=\"success--text darken-2 subheading font-weight-light text-xs-center\">\n            Origins\n        </div>\n    </div>   \n</div>    \n?>\nset(\"template\")\n<?javascript\n    $scope.res = _.template($scope.template)({value: $scope.response.aggregations.data.buckets.length})\n?>\n\n\nreturn(\"res\")\nhtml()"},"id":"zt25ee9pak","activated":false},{"type":"html-widget","name":"destinations","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"primary--text\">\n    wait...\n</div>","script":"service.es (\n    from: <? ({host:\"localhost:9200\"}) ?>,\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            index: 'kibana_sample_data_flights',\n            body: {\n  \"aggs\": {\n    \"data\": {\n      \"terms\": {\n        \"field\": \"Dest\",\n        \"order\": {\n          \"_count\": \"asc\"\n        },\n        \"size\": 92\n      }\n    }\n  },\n  \"size\": 0,\n  \n  \"query\": {\n    \"match_all\":{}\n  }\n}\n        })\n    ?>\n)\nset(\"response\")\n\n<?html\n<div>\n    <div class=\"pa-2 ma-2\"   style=\"border:2px solid #dedede; background:white;\">\n\n        <div class=\"success--text darken-2 headline text-xs-center\">\n             ${value}\n        </div>\n        <div class=\"success--text darken-2 subheading font-weight-light text-xs-center\">\n            Destinations\n        </div>\n    </div>   \n</div>    \n?>\nset(\"template\")\n<?javascript\n    $scope.res = _.template($scope.template)({value: $scope.response.aggregations.data.buckets.length})\n?>\n\n\nreturn(\"res\")\nhtml()"},"id":"ujdvhgi82h9","activated":false}]},"4f1j44cmjeg":{"widgets":[{"type":"geo-markers-chart-widget","name":"map","icon":"mdi-map-marker","options":{"0":[4.895168,52.370216,1,"Amsterdam"],"1":[-83.357567,33.951935,2,"Athens"],"2":[174.763332,-36.84846,3,"Auckland"],"3":[100.501765,13.756331,4,"Bangkok"],"4":[2.173403,41.385064,5,"Barcelona"],"5":[30.5234,50.4501,6,"Kiev"],"6":[25.279651,54.687156,7,"Vilnius"],"7":[21.012229,52.229676,8,"Warsaw"],"8":[16.373819,48.208174,9,"Vienna"],"widget":{"visible":true,"height":"500"},"map":{"locale":"en","scope":"World","name":"World"},"geo":{"map":"World","silent":true,"label":{"emphasis":{"show":false,"areaColor":"#eee"}},"itemStyle":{"normal":{"borderWidth":0.2,"borderColor":"#404a59"}},"roam":true,"boundingCoords":[[-149.97549976687878,-48.255812442395836],[178.5545021155849,78.7343124258332]]},"visualMap":{"align":"auto","orient":"horizontal","dimension":2,"inRange":{"color":["#1a9641","#a6d96a","#fdae61","#d7191c"]},"outOfRange":{"color":["#dedede"]},"text":["High","Low"],"calculable":true,"min":null,"max":null,"precision":3},"series":[{"data":[[8.549169916659594,47.46469896286726,691,"Zurich"],[108.7519989721477,34.44710197392851,526,"Xi'an"],[121.57588455548009,31.170024663056314,479,"Shanghai"],[-97.23989870399237,49.909999812953174,460,"Winnipeg"],[139.9842695170867,35.62389545053704,445,"Tokyo"],[20.967100113630295,52.16569899581373,405,"Warsaw"],[10.888499999418855,45.39569896180183,390,"Verona"],[16.569700157269835,48.11029812321067,377,"Vienna"],[12.351899994537234,45.50529896747321,344,"Venice"],[7.649629935622215,45.20080198533833,332,"Torino"],[128.44500697217882,51.16999696008861,331,"Belogorsk"],[-0.33329778192366694,51.521467838116486,329,"London"],[-58.535800063982606,-34.822200019843876,305,"Buenos Aires"],[12.194399926811457,45.6483989674598,293,"Treviso"],[151.17700195871294,-33.94609835464507,269,"Sydney"],[17.91860000230372,59.65190122369677,255,"Stockholm"],[37.41459991782904,55.97259898670018,249,"Moscow"],[9.036714352550916,45.52625566633651,240,"Milan"],[-78.3575000334531,-0.12916667852550745,237,"Quito"],[78.42985530383885,17.2313175117597,193,"Hyderabad"],[10.39269994944334,43.68389896117151,192,"Pisa"],[12.298534716143035,41.8001307175051,191,"Rome"],[-75.66919712349772,45.3224982926622,190,"Ottawa"],[11.10039995983243,60.193901024758816,178,"Oslo"],[28.245999980717897,-26.139200027100742,173,"Johannesburg"],[14.290799992159009,40.886001996695995,170,"Naples"],[11.78609998896718,48.3538019657135,169,"Munich"],[33.46390150487423,68.15180202014744,159,"Olenegorsk"],[141.69200127013028,42.77519986499101,156,"Chitose / Tomakomai"],[-73.74079897999763,45.47060010954738,152,"Montreal"],[135.34167232190998,34.60763469254919,145,"Osaka"],[126.61243694050492,37.51145443922619,139,"Seoul"],[144.84300199896097,-37.67330203671008,128,"Melbourne"],[-2.274950109422207,53.353698696009815,120,"Manchester"],[-66.00180060602725,18.439399707131088,116,"San Juan"],[-97.43309788405895,37.64989850576967,103,"Wichita"],[-99.07209808006883,19.436299977824092,99,"Mexico City"],[-79.63059998117387,43.67720031179488,98,"Toronto"],[-77.45580296963453,38.944499962963164,96,"Washington"],[31.119722155854106,-29.614444454200566,93,"Durban"],[-74.14690000936389,4.701589993201196,91,"Bogota"],[-77.11430403403938,-12.02190002426505,80,"Lima"],[-122.59799961000681,45.588699323125184,80,"Portland"],[77.70629899576306,13.197899982333183,78,"Bangalore"],[126.49299616925418,33.51129911374301,75,"Jeju City"],[-95.88809972628951,36.19839855004102,69,"Tulsa"],[77.1031039673835,28.56649998575449,68,"New Delhi"],[-122.30858044754436,47.453836962761386,67,"Seattle"],[8.837499925866723,44.41329997032881,63,"Genova"],[24.963300693780184,60.31719970051199,62,"Helsinki"],[-110.9410019684583,32.11610027588904,62,"Tucson"],[-117.53399661742151,47.61989974882454,60,"Spokane"],[-82.53320317715406,27.975500081665814,60,"Tampa"],[-92.50000001862645,43.90829847659916,58,"Rochester"],[8.570555923506618,50.0333329802379,54,"Frankfurt am Main"],[-112.01200107112527,33.434299430809915,54,"Phoenix"],[-76.10630038194358,43.11119842808694,54,"Syracuse"],[9.704169938340783,45.67390099167824,52,"Bergamo"],[-122.37500008195639,37.61899945791811,49,"San Francisco"],[12.656000135466456,55.617900816723704,48,"Copenhagen"],[113.29900357872248,23.392400736920536,48,"Guangzhou"],[-117.19000247307122,32.73360061459243,47,"San Diego"],[-90.50749976187944,41.44850158598274,46,"Moline"],[-80.23290258832276,40.49150080885738,45,"Pittsburgh"],[-78.78749853931367,35.877601616084576,45,"Raleigh/Durham"],[-77.31970215216279,37.505199406296015,45,"Richmond"],[-70.78579715453088,-33.39300158433616,45,"Santiago"],[-6.270070094615221,53.42129895463586,44,"Dublin"],[-113.58000185340643,53.30969999078661,44,"Edmonton"],[13.090999955311418,38.175998968072236,43,"Palermo"],[-81.2021027226001,32.1276015881449,43,"Savannah"],[-89.83519703149796,38.54519996792078,42,"Belleville"],[-75.24109653197229,39.87189862411469,42,"Philadelphia"],[55.36439895629883,25.252799978479743,41,"Dubai"],[-90.37000302225351,38.748696986585855,40,"St Louis"],[7.1427397057414055,50.86589811835438,38,"Cologne"],[-86.67819980531931,36.12450025510043,38,"Nashville"],[-98.46980293281376,29.533700910396874,38,"San Antonio"],[-111.97799686342478,40.78839871566743,37,"Salt Lake City"],[-76.49299629963934,37.131900787353516,35,"Newport News"],[-119.76799777708948,39.499099692329764,35,"Reno"],[72.86789702251554,19.088699310086668,34,"Mumbai"],[-74.168701171875,40.692501068115234,34,"Newark"],[-76.20120246894658,36.89459988847375,32,"Norfolk"],[-81.23750310391188,28.77759930677712,31,"Orlando"],[-93.22180182673037,44.88199994433671,30,"Minneapolis"],[103.94699854776263,30.578500740230083,29,"Chengdu"],[-89.97669990174472,35.04240032751113,29,"Memphis"],[-79.93730169720948,36.097801169380546,28,"Greensboro"],[2.549999915063381,49.012798299081624,28,"Paris"],[136.804992640391,34.8583984002471,28,"Tokoname"],[-80.29060369357467,25.79319950658828,27,"Miami"],[-90.25800327770412,29.993400564417243,26,"New Orleans"],[9.054279997944832,39.25149898510426,25,"Cagliari"],[-115.15200046822429,36.08010097872466,25,"Las Vegas"],[-85.73600004427135,38.17439999431372,25,"Louisville"],[-94.7138980217278,39.297599997371435,22,"Kansas City"],[-86.29440302029252,39.71729999408126,19,"Indianapolis"],[-118.40799710713327,33.94250105135143,19,"Los Angeles"],[153.11700434423983,-27.384199141524732,18,"Brisbane"]],"markLine":{"data":[[{"x":12.298534716143035,"y":41.8001307175051},{"x":-0.33329778192366694,"y":51.521467838116486},21],[{"x":12.298534716143035,"y":41.8001307175051},{"x":-58.535800063982606,"y":-34.822200019843876},18],[{"x":12.298534716143035,"y":41.8001307175051},{"x":10.888499999418855,"y":45.39569896180183},17],[{"x":12.298534716143035,"y":41.8001307175051},{"x":121.57588455548009,"y":31.170024663056314},16],[{"x":12.298534716143035,"y":41.8001307175051},{"x":-78.3575000334531,"y":-0.12916667852550745},14],[{"x":12.298534716143035,"y":41.8001307175051},{"x":139.9842695170867,"y":35.62389545053704},13],[{"x":-0.33329778192366694,"y":51.521467838116486},{"x":-78.3575000334531,"y":-0.12916667852550745},18],[{"x":-0.33329778192366694,"y":51.521467838116486},{"x":121.57588455548009,"y":31.170024663056314},16],[{"x":-0.33329778192366694,"y":51.521467838116486},{"x":-58.535800063982606,"y":-34.822200019843876},15],[{"x":-0.33329778192366694,"y":51.521467838116486},{"x":9.036714352550916,"y":45.52625566633651},15],[{"x":-0.33329778192366694,"y":51.521467838116486},{"x":17.91860000230372,"y":59.65190122369677},13],[{"x":-0.33329778192366694,"y":51.521467838116486},{"x":139.9842695170867,"y":35.62389545053704},13],[{"x":-0.33329778192366694,"y":51.521467838116486},{"x":-2.274950109422207,"y":53.353698696009815},12],[{"x":-0.33329778192366694,"y":51.521467838116486},{"x":-66.00180060602725,"y":18.439399707131088},12],[{"x":-0.33329778192366694,"y":51.521467838116486},{"x":-73.74079897999763,"y":45.47060010954738},11],[{"x":-0.33329778192366694,"y":51.521467838116486},{"x":33.46390150487423,"y":68.15180202014744},11],[{"x":-0.33329778192366694,"y":51.521467838116486},{"x":-75.66919712349772,"y":45.3224982926622},11],[{"x":-78.3575000334531,"y":-0.12916667852550745},{"x":-58.535800063982606,"y":-34.822200019843876},21],[{"x":-78.3575000334531,"y":-0.12916667852550745},{"x":139.9842695170867,"y":35.62389545053704},14],[{"x":-78.3575000334531,"y":-0.12916667852550745},{"x":144.84300199896097,"y":-37.67330203671008},11],[{"x":-78.3575000334531,"y":-0.12916667852550745},{"x":14.290799992159009,"y":40.886001996695995},11],[{"x":-78.3575000334531,"y":-0.12916667852550745},{"x":121.57588455548009,"y":31.170024663056314},11],[{"x":135.34167232190998,"y":34.60763469254919},{"x":12.298534716143035,"y":41.8001307175051},16],[{"x":135.34167232190998,"y":34.60763469254919},{"x":-0.33329778192366694,"y":51.521467838116486},14],[{"x":135.34167232190998,"y":34.60763469254919},{"x":139.9842695170867,"y":35.62389545053704},13],[{"x":135.34167232190998,"y":34.60763469254919},{"x":-58.535800063982606,"y":-34.822200019843876},12],[{"x":135.34167232190998,"y":34.60763469254919},{"x":12.194399926811457,"y":45.6483989674598},12],[{"x":135.34167232190998,"y":34.60763469254919},{"x":77.70629899576306,"y":13.197899982333183},11],[{"x":126.61243694050492,"y":37.51145443922619},{"x":12.298534716143035,"y":41.8001307175051},12],[{"x":139.9842695170867,"y":35.62389545053704},{"x":12.351899994537234,"y":45.50529896747321},22],[{"x":139.9842695170867,"y":35.62389545053704},{"x":20.967100113630295,"y":52.16569899581373},20],[{"x":139.9842695170867,"y":35.62389545053704},{"x":7.649629935622215,"y":45.20080198533833},19],[{"x":139.9842695170867,"y":35.62389545053704},{"x":108.7519989721477,"y":34.44710197392851},19],[{"x":139.9842695170867,"y":35.62389545053704},{"x":8.549169916659594,"y":47.46469896286726},17],[{"x":139.9842695170867,"y":35.62389545053704},{"x":128.44500697217882,"y":51.16999696008861},15],[{"x":139.9842695170867,"y":35.62389545053704},{"x":16.569700157269835,"y":48.11029812321067},15],[{"x":139.9842695170867,"y":35.62389545053704},{"x":12.194399926811457,"y":45.6483989674598},13],[{"x":139.9842695170867,"y":35.62389545053704},{"x":10.888499999418855,"y":45.39569896180183},13],[{"x":139.9842695170867,"y":35.62389545053704},{"x":-97.23989870399237,"y":49.909999812953174},12],[{"x":-58.535800063982606,"y":-34.822200019843876},{"x":139.9842695170867,"y":35.62389545053704},13],[{"x":-58.535800063982606,"y":-34.822200019843876},{"x":121.57588455548009,"y":31.170024663056314},12],[{"x":-58.535800063982606,"y":-34.822200019843876},{"x":-73.74079897999763,"y":45.47060010954738},11],[{"x":-74.14690000936389,"y":4.701589993201196},{"x":-0.33329778192366694,"y":51.521467838116486},13],[{"x":121.57588455548009,"y":31.170024663056314},{"x":8.549169916659594,"y":47.46469896286726},19],[{"x":121.57588455548009,"y":31.170024663056314},{"x":7.649629935622215,"y":45.20080198533833},18],[{"x":121.57588455548009,"y":31.170024663056314},{"x":128.44500697217882,"y":51.16999696008861},16],[{"x":121.57588455548009,"y":31.170024663056314},{"x":16.569700157269835,"y":48.11029812321067},16],[{"x":121.57588455548009,"y":31.170024663056314},{"x":17.91860000230372,"y":59.65190122369677},15],[{"x":121.57588455548009,"y":31.170024663056314},{"x":139.9842695170867,"y":35.62389545053704},15],[{"x":121.57588455548009,"y":31.170024663056314},{"x":10.888499999418855,"y":45.39569896180183},15],[{"x":121.57588455548009,"y":31.170024663056314},{"x":-97.23989870399237,"y":49.909999812953174},15],[{"x":121.57588455548009,"y":31.170024663056314},{"x":151.17700195871294,"y":-33.94609835464507},12],[{"x":121.57588455548009,"y":31.170024663056314},{"x":12.194399926811457,"y":45.6483989674598},12],[{"x":121.57588455548009,"y":31.170024663056314},{"x":12.351899994537234,"y":45.50529896747321},12],[{"x":121.57588455548009,"y":31.170024663056314},{"x":37.41459991782904,"y":55.97259898670018},11],[{"x":9.036714352550916,"y":45.52625566633651},{"x":-58.535800063982606,"y":-34.822200019843876},16],[{"x":9.036714352550916,"y":45.52625566633651},{"x":121.57588455548009,"y":31.170024663056314},16],[{"x":9.036714352550916,"y":45.52625566633651},{"x":139.9842695170867,"y":35.62389545053704},12],[{"x":9.036714352550916,"y":45.52625566633651},{"x":108.7519989721477,"y":34.44710197392851},12]]},"symbolSize":6,"name":"Serie 0"}],"color":["#1a9641","#a6d96a","#fdae61","#d7191c"],"palette":{"id":"RdYlGn_4","color":["#d7191c","#fdae61","#a6d96a","#1a9641"],"isReverse":true},"style":"\n  widget-style {\n    background: white;\n    border:1px solid #eaeaea;\n  }\n"},"data":{"source":"embedded","embedded":{"series":[]},"script":"<?javascript\n    $scope.service = {host:\"localhost:9200\"}\n?>\n\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n              \"aggs\": {\n                \"origin\": {\n                  \"terms\": {\n                    \"field\": \"OriginCityName\",\n                    \"order\": {\n                      \"_count\": \"desc\"\n                    },\n                    \"size\": 10 //100\n                  },\n                  \"aggs\": {\n                    \"dest\": {\n                      \"terms\": {\n                        \"field\": \"DestCityName\",\n                        \"order\": {\n                          \"_count\": \"desc\"\n                        },\n                        \"size\": 100\n                      }\n                    }\n                  }\n                }\n              },\n              \"size\": 0,\n            \n              \"query\": {\n                \"bool\": {\n                  \"filter\": [\n                    {\n                      \"match_all\": {}\n                    }\n                  ]\n                }\n              }\n            }\n        })\n    ?>\n    ,\n    returns: <? \n        d => {\n            let res = []\n            d.aggregations.origin.buckets.forEach( o => {\n                res = res.concat(\n                    o.dest.buckets.map( _d => ({\n                        origin: o.key,\n                        dest: _d.key,\n                        value: _d.doc_count\n                    }))\n                )\n            })\n            return res.filter(_d => _d.value > 10 && _d.origin != _d.dest)    \n        }\n    ?> \n)\nset(\"connections\")\n\nservice.es (\n    from: {{service}},\n    cmd:\"search\",\n    args:\n    <? \n        ({\n            // index: 'kibana_sample_data_flights',\n            body: {\n              \"aggs\": {\n                \"filter_agg\": {\n                  \"filter\": {\n                    \"geo_bounding_box\": {\n                      \"ignore_unmapped\": true,\n                      \"DestLocation\": {\n                        \"top_left\": {\n                          \"lat\": 90,\n                          \"lon\": -180\n                        },\n                        \"bottom_right\": {\n                          \"lat\": -90,\n                          \"lon\": 180\n                        }\n                      }\n                    }\n                  },\n                  \"aggs\": {\n                     \"4\": {\n                        \"terms\": {\n                          \"field\": \"DestCityName\",\n                          \"order\": {\n                            \"_count\": \"desc\"\n                          },\n                          \"size\": 100\n                        },\n                        \"aggs\":{\n                          \"2\": {\n                            \"geohash_grid\": {\n                              \"field\": \"DestLocation\",\n                              \"precision\": 2\n                            },\n                            \"aggs\": {\n                              \"3\": {\n                                \"geo_centroid\": {\n                                  \"field\": \"DestLocation\"\n                                }\n                                \n                              }\n                            }\n                          }\n                        }\n                      }\n                  }\n                }\n              },\n              \"size\": 0,\n              \"query\": {\n                \"bool\": {\n                 \n                  \"filter\": [\n                    {\n                      \"match_all\": {}\n                    },\n                    {\n                      \"match_all\": {}\n                    }\n                  ]\n                }\n              }\n            }\n        })\n    ?>\n    ,\n    returns: <? \n        d => d.aggregations.filter_agg[\"4\"].buckets.map( r => [\n                r[\"2\"].buckets[0][\"3\"].location.lon,\n                r[\"2\"].buckets[0][\"3\"].location.lat,\n                r.doc_count,\n                r.key\n            ])\n    ?> \n)\n\nset(\"points\")\n\n<?javascript\n    $scope.connections = $scope.connections.map( d => ({\n      origin: _.find($scope.points, p => p[3] == d.origin),\n      dest: _.find($scope.points, p => p[3] == d.dest),\n      value: d.value,\n      originName: d.origin,\n      destName:d.dest\n    }))\n    .map( d => ({\n        coords:[\n            d.origin,\n            d.dest\n        ],\n        value: d.value,\n        originName: d.originName,\n        destName:d.destName\n    }))\n    \n    $scope.res = {\n        colorScale:true,\n        series:[\n            {\n    \t\t\t\"name\": \"Cities\",\n    \t\t\t\"type\": \"scatter\",\n    \t\t\tsymbolSizeRange:[2,40],\n    \t\t\t\"coordinateSystem\": \"geo\",\n    \t\t\t\"data\": $scope.points,\n    \t\t\t\"activeOpacity\": 1,\n    \t\t\t\"label\": {\n    \t\t\t\t\"normal\": {\n    \t\t\t\t\t\"position\": \"top\",\n    \t\t\t\t\t\"color\": \"#222\",\n    \t\t\t\t\t\"show\": true\n    \t\t\t\t},\n    \t\t\t\t\"emphasis\": {\n    \t\t\t\t\t\"show\": true\n    \t\t\t\t}\n    \t\t\t},\n    \t\t\t\"itemStyle\": {\n    \t\t\t\t\"normal\": {\n    \t\t\t\t\t\"borderColor\": \"#404a59\"\n    \t\t\t\t}\n    \t\t\t}\n\t\t    },\n\t\t{\n\t\t\t\"name\": \"Flights\",\n\t\t\t\"type\": \"lines\",\n\t\t\t\"zlevel\": 1,\n\t\t\t\"effect\": {\n\t\t\t\t\"show\": true,\n\t\t\t\t\"period\": 6,\n\t\t\t\t\"trailLength\": 0.5,\n\t\t\t\t\"color\": \"#999\",\n\t\t\t\t\"symbolSize\": 4\n\t\t\t},\n\t\t\t\"lineStyle\": {\n\t\t\t\t\"normal\": {\n\t\t\t\t    width:0,\n\t\t\t\t\tcolor:\"#999\",\n\t\t\t\t\t\"curveness\": 0.3\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"data\": $scope.connections,\n\t\t\t\"symbolSize\": 6\n\t\t}\n\t\t ]\n\t}\n?>\nreturn (\"res\")\n"},"id":"rrr755yo45h","activated":false}]},"op84or84zda":{"widgets":[{"type":"html-widget","name":"noname_clone_baovfu83voh_clone_trbg367oscq_clone_uh31eyji4sf_clone_fbsa3h2z5tg_clone_kmdxhgo882_clone_1s43tslzemi","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"display-1 primary lighten-1 white--text font-weight-light pa-2\">\n    Locations\n</div> \n","script":""},"id":"1s43tslzemi","activated":false}]}},"id":"flights","title":"Flight Monitor","url":"https://jace-dev.herokuapp.com/design/ElasticSearch#/flights"},{"layout":"flex","sections":[{"align":"justify-center","holders":[{"name":"default","width":8}]}],"holders":{"default":{"widgets":[{"type":"md-widget","name":"noname","icon":"mdi-markdown","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"%0A%23%20service.es()%0A%0ANow%20you%20can%20use%20dps%20command%20**service.es**%20to%20fetch%20data%20from%20elasticsearch%0A%0A%60%60%60js%0Aservice.es(%0A%20%20%20%20from%3A%20%7B%7Bservice%7D%7D%2C%20%0A%20%20%20%20cmd%3A%22count%22%2C%20%0A%20%20%20%20args%3A%20%0A%20%20%20%20%20%20%20%20%3C%3F%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20index%3A%22kibana_sample_data_flights%22%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20body%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20query%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20bool%3A%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20must%3A%20%5B%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20filter%3A%20%5B%20%7B%20match_all%20%3A%20%7B%7D%20%7D%20%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20should%3A%20%5B%5D%2C%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20must_not%3A%20%5B%5D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%20%3F%5C%3E%0A)%20%20%20%20%20%20%20%20%0A%60%60%60%0A%0AThe%20fetched%20data%20is%20showed%20below%3A%0A%0A%60%60%60json%0A%7B%0A%20%20%20%20%22count%22%3A%2013059%2C%0A%20%20%20%20%22_shards%22%3A%20%7B%0A%20%20%20%20%20%20%20%20%22total%22%3A%201%2C%0A%20%20%20%20%20%20%20%20%22successful%22%3A%201%2C%0A%20%20%20%20%20%20%20%20%22skipped%22%3A%200%2C%0A%20%20%20%20%20%20%20%20%22failed%22%3A%200%0A%20%20%20%20%7D%0A%7D%0A%60%60%60%0A%23%20Our%20Examples%20%0A%0A%23%23%20%3Ci%20class%3D%22mdi%20mdi-feature-search-outline%20pr-2%22%3E%3C%2Fi%3EIndices%20Exploration%20%3Ca%20href%3D%22https%3A%2F%2Fjace-dev.herokuapp.com%2Fdesign%2FElasticSearch%23%2Fexplorer%22%20class%3D%22body-1%22%3E(%20try%20it%20)%3C%2Fa%3E%0A%20Analyze%20Elasticsearch%20Indices%20(Mappings%20and%20data%20of%20indices)%0A%0A%23%23%20Sample%20eCommerce%20Data%20%3Ca%20href%3D%22https%3A%2F%2Fjace-dev.herokuapp.com%2Fdesign%2FElasticSearch%23%2Fe_commerce%22%20class%3D%22body-1%22%3E(%20try%20it%20)%3C%2Fa%3E%0A%20This%20dashboard%20contains%20sample%20data%20for%20you%20to%20play%20with.%20You%20can%20view%20it%2C%20search%20it%2C%20and%20interact%20with%20the%20visualizations.%0A%20%0A","script":""},"id":"omnuao4l87","activated":false}]}},"id":"service","title":"service.es","url":"https://jace-dev.herokuapp.com/design/ElasticSearch#/service"},{"layout":"flex","sections":[{"align":"justify-center","holders":[{"name":"dbff55l9i4w","width":8}]},{"align":"justify-center","holders":[{"name":"p3adrrs20xb","width":4},{"name":"svr8t06zrf","width":2},{"name":"1fo40ob1rvj","width":2}]},{"align":"justify-center","holders":[{"name":"p3o5ah6pnkb","width":8}]},{"align":"justify-center","holders":[{"name":"0kzxrrtmq99q","width":2},{"name":"w0pxqxuyww","width":2},{"name":"7f8tszclp3l","width":2},{"name":"6z1u5cwy3he","width":2}]},{"align":"justify-center","holders":[{"name":"qzk8d2qwl1j","width":1},{"name":"y1cup7hpm8b","width":7}]},{"align":"justify-center","holders":[{"name":"x05ae076il","width":1},{"name":"uvknugko83","width":7}]},{"align":"justify-center","holders":[{"name":"1frfkradols","width":2},{"name":"dy1k08psyw","width":2},{"name":"3rx4d9rdjq3","width":1},{"name":"2bxhyrwum33","width":3}]},{"align":"justify-center","holders":[{"name":"fwxlvcoozg","width":2},{"name":"cgyofof4xzn","width":3},{"name":"4ra2kk0t0s7","width":2},{"name":"sdvrnhqqv1","width":2}]},{"align":"justify-center","holders":[{"name":"jepu8saf3a","width":8}]},{"align":"justify-center","holders":[{"name":"brvejm45o7r","width":5},{"name":"tiaeq53z16q","width":3}]},{"align":"justify-center","holders":[{"name":"k4i7nte74sk","width":8}]}],"holders":{"fwxlvcoozg":{"widgets":[{"type":"html-widget","name":"noname_clone_3pt8tchnmkv","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div style=\"font-size:24px\" class=\"secondary--text text--lighten-3 font-weight-light\">Sold Products</div>    \n","script":""},"id":"3pt8tchnmkv","activated":false},{"type":"graph-chart-widget","name":"Sold Products","icon":"mdi-graphql","options":{"widget":{"visible":true,"height":"350"},"tooltip":{},"animationDurationUpdate":1500,"animationEasingUpdate":"quinticInOut","series":[{"type":"graph","layout":"none","width":"75%","height":"75%","symbolSize":15,"roam":true,"label":{"normal":{"show":true,"position":"left","textStyle":{"fontSize":16,"show":true}}},"edgeSymbol":["circle","arrow"],"edgeSymbolSize":[4,7],"edgeLabel":{"normal":{"textStyle":{"fontSize":12,"show":true},"format":["@type"]}},"nodes":[{"y":150,"x":100,"id":19,"labels":["Person"],"born":1958,"name":"Person: Kevin Bacon","uri":"http://localhost:7474/db/data/node/19","label":{"normal":{"show":true,"position":"right","textStyle":{"fontSize":16,"show":true}}}},{"x":150,"y":50,"id":144,"labels":["Movie"],"tagline":"Houston, we have a problem.","title":"Apollo 13","released":1995,"uri":"http://localhost:7474/db/data/node/144","name":"Movie: 'Apollo 13'"},{"x":200,"y":100,"id":71,"labels":["Person"],"born":1956,"name":"Person: Tom Hanks","uri":"http://localhost:7474/db/data/node/71"},{"x":280,"y":50,"id":73,"labels":["Movie"],"tagline":"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?","title":"Sleepless in Seattle","released":1993,"uri":"http://localhost:7474/db/data/node/73","name":"Movie: 'Sleepless in Seattle'"},{"x":300,"y":150,"id":34,"labels":["Person"],"born":1961,"name":"Person: Meg Ryan","uri":"http://localhost:7474/db/data/node/34"}],"links":[{"id":203,"type":"ACTED_IN","roles":["Jack Swigert"],"uri":"http://localhost:7474/db/data/relationship/203","source":0,"target":1,"name":"ACTED_IN: Jack Swigert","label":{"normal":{"show":true}}},{"id":202,"type":"ACTED_IN","roles":["Jim Lovell"],"uri":"http://localhost:7474/db/data/relationship/202","source":2,"target":1,"name":"ACTED_IN: Jim Lovell"},{"id":91,"type":"ACTED_IN","roles":["Sam Baldwin"],"uri":"http://localhost:7474/db/data/relationship/91","source":2,"target":3,"name":"ACTED_IN: Sam Baldwin"},{"id":92,"type":"ACTED_IN","roles":["Annie Reed"],"uri":"http://localhost:7474/db/data/relationship/92","source":4,"target":3,"name":"ACTED_IN: Annie Reed"}],"lineStyle":{"normal":{"opacity":1,"color":"#777777","width":1,"curveness":0.01}}}],"style":"\n  widget-style {\n    /*margin:1em;*/\n    padding:1em;\n    font-size:18px;\n    border: 1px solid #cfd7e6;\n    box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);\n  }\n\n","color":["#c23531","#2f4554","#61a0a8","#d48265","#91c7ae","#749f83","#ca8622","#bda29a","#6e7074","#546570","#c4ccd3"],"palette":{"id":"Echart","color":["#c23531","#2f4554","#61a0a8","#d48265","#91c7ae","#749f83","#ca8622","#bda29a","#6e7074","#546570","#c4ccd3"]}},"data":{"source":"embedded","embedded":{"series":[]},"script":""},"id":"a3qouq0075l","activated":false}]},"cgyofof4xzn":{"widgets":[{"type":"html-widget","name":"noname_clone_3pt8tchnmkv_clone_tlrunzytpsg","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div style=\"font-size:24px\" class=\"secondary--text text--lighten-3 font-weight-light\">Sales by Gender</div>    \n","script":""},"id":"tlrunzytpsg","activated":false},{"type":"graph-chart-widget","name":"Sales by Gender","icon":"mdi-graphql","options":{"widget":{"visible":true,"height":"350"},"tooltip":{},"animationDurationUpdate":1500,"animationEasingUpdate":"quinticInOut","series":[{"type":"graph","layout":"none","width":"75%","height":"75%","symbolSize":15,"roam":true,"label":{"normal":{"show":true,"position":"left","textStyle":{"fontSize":16,"show":true}}},"edgeSymbol":["circle","arrow"],"edgeSymbolSize":[4,7],"edgeLabel":{"normal":{"textStyle":{"fontSize":12,"show":true},"format":["@type"]}},"nodes":[{"y":150,"x":100,"id":19,"labels":["Person"],"born":1958,"name":"Person: Kevin Bacon","uri":"http://localhost:7474/db/data/node/19","label":{"normal":{"show":true,"position":"right","textStyle":{"fontSize":16,"show":true}}}},{"x":150,"y":50,"id":144,"labels":["Movie"],"tagline":"Houston, we have a problem.","title":"Apollo 13","released":1995,"uri":"http://localhost:7474/db/data/node/144","name":"Movie: 'Apollo 13'"},{"x":200,"y":100,"id":71,"labels":["Person"],"born":1956,"name":"Person: Tom Hanks","uri":"http://localhost:7474/db/data/node/71"},{"x":280,"y":50,"id":73,"labels":["Movie"],"tagline":"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?","title":"Sleepless in Seattle","released":1993,"uri":"http://localhost:7474/db/data/node/73","name":"Movie: 'Sleepless in Seattle'"},{"x":300,"y":150,"id":34,"labels":["Person"],"born":1961,"name":"Person: Meg Ryan","uri":"http://localhost:7474/db/data/node/34"}],"links":[{"id":203,"type":"ACTED_IN","roles":["Jack Swigert"],"uri":"http://localhost:7474/db/data/relationship/203","source":0,"target":1,"name":"ACTED_IN: Jack Swigert","label":{"normal":{"show":true}}},{"id":202,"type":"ACTED_IN","roles":["Jim Lovell"],"uri":"http://localhost:7474/db/data/relationship/202","source":2,"target":1,"name":"ACTED_IN: Jim Lovell"},{"id":91,"type":"ACTED_IN","roles":["Sam Baldwin"],"uri":"http://localhost:7474/db/data/relationship/91","source":2,"target":3,"name":"ACTED_IN: Sam Baldwin"},{"id":92,"type":"ACTED_IN","roles":["Annie Reed"],"uri":"http://localhost:7474/db/data/relationship/92","source":4,"target":3,"name":"ACTED_IN: Annie Reed"}],"lineStyle":{"normal":{"opacity":1,"color":"#777777","width":1,"curveness":0.01}}}],"style":"\n  widget-style {\n    /*margin:1em;*/\n    padding:1em;\n    font-size:18px;\n    border: 1px solid #cfd7e6;\n    box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);\n  }\n\n","color":["#c23531","#2f4554","#61a0a8","#d48265","#91c7ae","#749f83","#ca8622","#bda29a","#6e7074","#546570","#c4ccd3"],"palette":{"id":"Echart","color":["#c23531","#2f4554","#61a0a8","#d48265","#91c7ae","#749f83","#ca8622","#bda29a","#6e7074","#546570","#c4ccd3"]}},"data":{"source":"embedded","embedded":{"series":[]},"script":""},"id":"l0cfb9v38k7","activated":false}]},"4ra2kk0t0s7":{"widgets":[{"type":"html-widget","name":"noname_clone_3pt8tchnmkv_clone_tlrunzytpsg_clone_lh8f0vjeip9","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div style=\"font-size:24px\" class=\"secondary--text text--lighten-3 font-weight-light\">Average Sales Price</div>    \n","script":""},"id":"lh8f0vjeip9","activated":false},{"type":"graph-chart-widget","name":"Average Sales Price","icon":"mdi-graphql","options":{"widget":{"visible":true,"height":"350"},"tooltip":{},"animationDurationUpdate":1500,"animationEasingUpdate":"quinticInOut","series":[{"type":"graph","layout":"none","width":"75%","height":"75%","symbolSize":15,"roam":true,"label":{"normal":{"show":true,"position":"left","textStyle":{"fontSize":16,"show":true}}},"edgeSymbol":["circle","arrow"],"edgeSymbolSize":[4,7],"edgeLabel":{"normal":{"textStyle":{"fontSize":12,"show":true},"format":["@type"]}},"nodes":[{"y":150,"x":100,"id":19,"labels":["Person"],"born":1958,"name":"Person: Kevin Bacon","uri":"http://localhost:7474/db/data/node/19","label":{"normal":{"show":true,"position":"right","textStyle":{"fontSize":16,"show":true}}}},{"x":150,"y":50,"id":144,"labels":["Movie"],"tagline":"Houston, we have a problem.","title":"Apollo 13","released":1995,"uri":"http://localhost:7474/db/data/node/144","name":"Movie: 'Apollo 13'"},{"x":200,"y":100,"id":71,"labels":["Person"],"born":1956,"name":"Person: Tom Hanks","uri":"http://localhost:7474/db/data/node/71"},{"x":280,"y":50,"id":73,"labels":["Movie"],"tagline":"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?","title":"Sleepless in Seattle","released":1993,"uri":"http://localhost:7474/db/data/node/73","name":"Movie: 'Sleepless in Seattle'"},{"x":300,"y":150,"id":34,"labels":["Person"],"born":1961,"name":"Person: Meg Ryan","uri":"http://localhost:7474/db/data/node/34"}],"links":[{"id":203,"type":"ACTED_IN","roles":["Jack Swigert"],"uri":"http://localhost:7474/db/data/relationship/203","source":0,"target":1,"name":"ACTED_IN: Jack Swigert","label":{"normal":{"show":true}}},{"id":202,"type":"ACTED_IN","roles":["Jim Lovell"],"uri":"http://localhost:7474/db/data/relationship/202","source":2,"target":1,"name":"ACTED_IN: Jim Lovell"},{"id":91,"type":"ACTED_IN","roles":["Sam Baldwin"],"uri":"http://localhost:7474/db/data/relationship/91","source":2,"target":3,"name":"ACTED_IN: Sam Baldwin"},{"id":92,"type":"ACTED_IN","roles":["Annie Reed"],"uri":"http://localhost:7474/db/data/relationship/92","source":4,"target":3,"name":"ACTED_IN: Annie Reed"}],"lineStyle":{"normal":{"opacity":1,"color":"#777777","width":1,"curveness":0.01}}}],"style":"\n  widget-style {\n    /*margin:1em;*/\n    padding:1em;\n    font-size:18px;\n    border: 1px solid #cfd7e6;\n    box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);\n  }\n\n","color":["#c23531","#2f4554","#61a0a8","#d48265","#91c7ae","#749f83","#ca8622","#bda29a","#6e7074","#546570","#c4ccd3"],"palette":{"id":"Echart","color":["#c23531","#2f4554","#61a0a8","#d48265","#91c7ae","#749f83","#ca8622","#bda29a","#6e7074","#546570","#c4ccd3"]}},"data":{"source":"embedded","embedded":{"series":[]},"script":""},"id":"ul4jgn164cr","activated":false}]},"sdvrnhqqv1":{"widgets":[{"type":"html-widget","name":"noname_clone_3pt8tchnmkv_clone_tlrunzytpsg_clone_lh8f0vjeip9_clone_1v9xvgz445k","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div style=\"font-size:24px\" class=\"secondary--text text--lighten-3 font-weight-light\">Average Sold Quantity</div>    \n","script":""},"id":"1v9xvgz445k","activated":false},{"type":"graph-chart-widget","name":"Average Sold Quantity","icon":"mdi-graphql","options":{"widget":{"visible":true,"height":"350"},"tooltip":{},"animationDurationUpdate":1500,"animationEasingUpdate":"quinticInOut","series":[{"type":"graph","layout":"none","width":"75%","height":"75%","symbolSize":15,"roam":true,"label":{"normal":{"show":true,"position":"left","textStyle":{"fontSize":16,"show":true}}},"edgeSymbol":["circle","arrow"],"edgeSymbolSize":[4,7],"edgeLabel":{"normal":{"textStyle":{"fontSize":12,"show":true},"format":["@type"]}},"nodes":[{"y":150,"x":100,"id":19,"labels":["Person"],"born":1958,"name":"Person: Kevin Bacon","uri":"http://localhost:7474/db/data/node/19","label":{"normal":{"show":true,"position":"right","textStyle":{"fontSize":16,"show":true}}}},{"x":150,"y":50,"id":144,"labels":["Movie"],"tagline":"Houston, we have a problem.","title":"Apollo 13","released":1995,"uri":"http://localhost:7474/db/data/node/144","name":"Movie: 'Apollo 13'"},{"x":200,"y":100,"id":71,"labels":["Person"],"born":1956,"name":"Person: Tom Hanks","uri":"http://localhost:7474/db/data/node/71"},{"x":280,"y":50,"id":73,"labels":["Movie"],"tagline":"What if someone you never met, someone you never saw, someone you never knew was the only someone for you?","title":"Sleepless in Seattle","released":1993,"uri":"http://localhost:7474/db/data/node/73","name":"Movie: 'Sleepless in Seattle'"},{"x":300,"y":150,"id":34,"labels":["Person"],"born":1961,"name":"Person: Meg Ryan","uri":"http://localhost:7474/db/data/node/34"}],"links":[{"id":203,"type":"ACTED_IN","roles":["Jack Swigert"],"uri":"http://localhost:7474/db/data/relationship/203","source":0,"target":1,"name":"ACTED_IN: Jack Swigert","label":{"normal":{"show":true}}},{"id":202,"type":"ACTED_IN","roles":["Jim Lovell"],"uri":"http://localhost:7474/db/data/relationship/202","source":2,"target":1,"name":"ACTED_IN: Jim Lovell"},{"id":91,"type":"ACTED_IN","roles":["Sam Baldwin"],"uri":"http://localhost:7474/db/data/relationship/91","source":2,"target":3,"name":"ACTED_IN: Sam Baldwin"},{"id":92,"type":"ACTED_IN","roles":["Annie Reed"],"uri":"http://localhost:7474/db/data/relationship/92","source":4,"target":3,"name":"ACTED_IN: Annie Reed"}],"lineStyle":{"normal":{"opacity":1,"color":"#777777","width":1,"curveness":0.01}}}],"style":"\n  widget-style {\n    /*margin:1em;*/\n    padding:1em;\n    font-size:18px;\n    border: 1px solid #cfd7e6;\n    box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);\n  }\n\n","color":["#c23531","#2f4554","#61a0a8","#d48265","#91c7ae","#749f83","#ca8622","#bda29a","#6e7074","#546570","#c4ccd3"],"palette":{"id":"Echart","color":["#c23531","#2f4554","#61a0a8","#d48265","#91c7ae","#749f83","#ca8622","#bda29a","#6e7074","#546570","#c4ccd3"]}},"data":{"source":"embedded","embedded":{"series":[]},"script":""},"id":"uttdckcvv3p","activated":false}]},"brvejm45o7r":{"widgets":[{"type":"html-widget","name":"noname_clone_53h2i79q93p_clone_0bjc6ve8d8zc_clone_luvhko456s","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div style=\"font-size:24px\" class=\"secondary--text text--lighten-3 font-weight-light\">Average Sales Per Region</div>    \n","script":""},"id":"luvhko456s","activated":false},{"type":"geo-chart-widget","name":"Average Sales Per Region","icon":"mdi-map","options":{"widget":{"visible":true,"height":"350"},"map":{"locale":"en","scope":"World","name":"World"},"tooltip":{"trigger":"item","formatter":"{b} {c}"},"visualMap":{"align":"auto","orient":"horizontal","inRange":{"color":["#313695","#e0f3f8","#ffffbf","#fee090","#a50026"]},"text":["High","Low"],"calculable":true},"series":[{"type":"map","roam":true,"map":"World","itemStyle":{"normal":{"borderWidth":0.2,"borderColor":"#404a59"}},"data":[{"id":"AFG","name":"Afghanistan","value":33885.92544},{"id":"ARM","name":"Armenia","value":3124.784854},{"id":"UKR","name":"Ukraine","value":3124.784854}]}],"color":["#f7fcf5","#e5f5e0","#c7e9c0","#a1d99b","#74c476","#41ab5d","#238b45","#006d2c","#00441b"],"style":"\n  widget-style {\n    /*margin:1em;*/\n    padding:1em;\n    font-size:18px;\n    border: 1px solid #cfd7e6;\n    box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);\n    background:rgba(0,20,200,0.01);\n  }\n\n","palette":{"id":"Greens_9","color":["#f7fcf5","#e5f5e0","#c7e9c0","#a1d99b","#74c476","#41ab5d","#238b45","#006d2c","#00441b"],"isReverse":false}},"data":{"source":"embedded","embedded":{"serie":[]},"script":""},"id":"0ujr9rahvee","activated":false}]},"tiaeq53z16q":{"widgets":[{"type":"html-widget","name":"noname_clone_53h2i79q93p_clone_0bjc6ve8d8zc_clone_luvhko456s_clone_ymfnd5y7eqo","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div style=\"font-size:24px\" class=\"secondary--text text--lighten-3 font-weight-light\">Top Selling Products</div>    \n","script":""},"id":"ymfnd5y7eqo","activated":false},{"type":"wordcloud-chart-widget","name":"Top Selling Products","icon":"mdi-format-letter-case","options":{"widget":{"visible":true,"height":"350"},"tooltip":{"show":true},"series":[{"name":"Google Trends","type":"wordCloud","left":"center","top":"center","width":"100%","height":"100%","right":null,"bottom":null,"rotationRange":[0,0],"rotationStep":0,"drawOutOfBound":true,"textPadding":10,"data":[{"name":"ECHARTS WORDCLOUD","value":10000,"itemStyle":{"normal":{"color":"black"}}},{"name":"Macys","value":6181},{"name":"Amy Schumer","value":4386},{"name":"Jurassic World","value":4055},{"name":"Charter Communications","value":2467},{"name":"Chick Fil A","value":2244},{"name":"Planet Fitness","value":1898},{"name":"Pitch Perfect","value":1484},{"name":"Express","value":1112},{"name":"Home","value":965},{"name":"Johnny Depp","value":847},{"name":"Lena Dunham","value":582},{"name":"Lewis Hamilton","value":555},{"name":"KXAN","value":550},{"name":"Mary Ellen Mark","value":462},{"name":"Farrah Abraham","value":366},{"name":"Rita Ora","value":360},{"name":"Serena Williams","value":282},{"name":"NCAA baseball tournament","value":273},{"name":"Point Break","value":265}]}],"style":"\n  widget-style {\n    /*margin:1em;*/\n    padding:1em;\n    font-size:18px;\n    border: 1px solid #cfd7e6;\n    box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);\n  }\n\n","color":["#636363","#bdbdbd","#f0f0f0"],"palette":{"id":"Greys_3","color":["#f0f0f0","#bdbdbd","#636363"],"isReverse":true}},"data":{"source":"embedded","embedded":{"series":[]},"script":""},"id":"vnifso3uogo","activated":false}]},"k4i7nte74sk":{"widgets":[{"type":"html-widget","name":"noname_clone_53h2i79q93p_clone_0bjc6ve8d8zc_clone_luvhko456s_clone_ymfnd5y7eqo_clone_xvxlei2g6us","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div style=\"font-size:24px\" class=\"secondary--text text--lighten-3 font-weight-light\">Orders</div>    \n","script":""},"id":"xvxlei2g6us","activated":false},{"type":"data-table-widget","name":"Orders","icon":"mdi-grid","options":{"widget":{"visible":true},"headerTextOrientation":"horizontal","dense":true,"fixedHeader":false,"pagination":true,"typography":"caption","textColor":"default","textBackground":"default"},"data":{"source":"embedded","embedded":{"dataset":{"dimensions":[],"source":[]}},"script":""},"id":"waiz3g9utd","activated":false}]},"dbff55l9i4w":{"widgets":[{"type":"dps-suite-widget","name":"noname","icon":"mdi-card-text-outline","options":{"widget":{"visible":true}},"scripts":[{"name":"Total Revenue","script":"<?javascript\n    $scope.service = {\n        host: \"https://ao67vvmh5b:if1xwb6ag5@beech-495313317.eu-west-1.bonsaisearch.net:443\"\n    }\n    \n    // $scope.manufacturer = [\"Champion Arts\", \"Elitelligence\"]\n    // $scope.category = [\"Men's Accessories\", \"Men's Shoes\"]\n    \n    // $scope.manufacturer = []\n    // $scope.category = []\n    \n?>\n\nservice.es(\n\t\t\t\t\n    from: {{service}},\n    cmd:\"search\",\n    args:<? {\n        index:\"kibana_sample_data_ecommerce\",\n        body: {\n  \"aggs\": {\n    \"total\": {\n      \"sum\": {\n        \"field\": \"taxful_total_price\"\n      }\n    }\n  },\n  \"size\": 0,\n  \"_source\": {\n    \"excludes\": []\n  },\n  \"stored_fields\": [\n    \"*\"\n  ],\n  \"script_fields\": {},\n  \"docvalue_fields\": [\n    {\n      \"field\": \"customer_birth_date\",\n      \"format\": \"date_time\"\n    },\n    {\n      \"field\": \"order_date\",\n      \"format\": \"date_time\"\n    },\n    {\n      \"field\": \"products.created_on\",\n      \"format\": \"date_time\"\n    }\n  ],\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"bool\": {\n            \"should\": $scope.category.map( item =>({\n                \"match_phrase\": {\n                  \"category.keyword\": item\n                }\n            })),\n            \"minimum_should_match\": 1\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": $scope.manufacturer.map(item => ({\n                \"match_phrase\": {\n                  \"manufacturer.keyword\": item\n                }    \n            })),\n            \"minimum_should_match\": 1\n          }\n        },\n        {\n          \"range\": {\n            \"order_date\": {\n              \"format\": \"strict_date_optional_time\",\n              \"gte\": \"2020-11-15T13:08:15.982Z\",\n              \"lte\": \"2020-11-22T13:08:15.982Z\"\n            }\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"match_all\": {}\n        },\n        {\n          \"match_all\": {}\n        }\n      ],\n      \"should\": [],\n      \"must_not\": []\n    }\n  }\n}\n    } ?>,\n    \n    returns: <? data => data.aggregations.total ?>\n)   \nset(\"response\")\n\n<?html\n<div class=\"display-1 secondary--text text--lighten-2 d-flex align-center justify-center pa-1\" style=\"\n        border: 1px solid #cfd7e6;\n        box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);\n    \">\n        $${value}\n    </div>\n?>\nset(\"html\")\n<?javascript\n    $scope.res = _.template($scope.html)({\n        value : $scope.response.value.toFixed(2)\n    })\n?>\nreturn(\"res\")\nhtml()"},{"name":"ping","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: ping\n **     SERVICE: https://jace-dps.herokuapp.com\n **\n **/\n<?javascript\n    $scope.service = {\n        host: \"https://ao67vvmh5b:if1xwb6ag5@beech-495313317.eu-west-1.bonsaisearch.net:443\"\n    }\n?>\n \nservice.es(\n    from: {{service}},\n    cmd:\"ping\"\n)\n"},{"name":"Sold Products","script":"<?javascript\n    $scope.service = {\n        host: \"https://ao67vvmh5b:if1xwb6ag5@beech-495313317.eu-west-1.bonsaisearch.net:443\"\n    }\n    \n    // $scope.manufacturer = [\"Spritechnologies\"]\n    // $scope.category = [\"Women's Clothing\"]\n    \n    // $scope.manufacturer = []\n    // $scope.category = []\n    \n?>\n\nservice.es(\n\t\t\t\t\n    from: {{service}},\n    cmd:\"search\",\n    args:<? {\n        index:\"kibana_sample_data_ecommerce\",\n        body:{\n          \"size\":0,\n          \"aggs\": {\n              \"sales_over_time\": {\n                \"date_histogram\": {\n                  \"field\": \"order_date\",\n                  \"fixed_interval\": \"1d\"\n                }\n              }\n            },  \n        \"query\": {\n            \"bool\": {\n              \"must\": [\n                {\n                  \"bool\": {\n                    \"should\": $scope.category.map( item =>({\n                        \"match_phrase\": {\n                          \"category.keyword\": item\n                        }\n                    })),\n                    \"minimum_should_match\": 1\n                  }\n                },\n                {\n                  \"bool\": {\n                    \"should\": $scope.manufacturer.map(item => ({\n                        \"match_phrase\": {\n                          \"manufacturer.keyword\": item\n                        }    \n                    })),\n                    \"minimum_should_match\": 1\n                  }\n                },\n                {\n                  \"range\": {\n                    \"order_date\": {\n                      \"format\": \"strict_date_optional_time\",\n                      \"gte\": \"2020-11-15T13:08:15.982Z\",\n                      \"lte\": \"2020-11-22T13:08:15.982Z\"\n                    }\n                  }\n                }\n              ],\n              \"filter\": [\n                {\n                  \"match_all\": {}\n                },\n                {\n                  \"match_all\": {}\n                }\n              ],\n              \"should\": [],\n              \"must_not\": []\n            }\n          }\n        }\n    \n    }?>,\n    \n    returns: <? data => ({\n        max : _.max(data.aggregations.sales_over_time.buckets.map( d => d.doc_count)),\n        min : _.min(data.aggregations.sales_over_time.buckets.map( d => d.doc_count)),\n        avg : data.aggregations.sales_over_time.buckets.map( d => d.doc_count).reduce((s,i) => s+i)/data.aggregations.sales_over_time.buckets.length\n    })?>\n)   \nset(\"response\")\n\n<?javascript\n    if($scope.response == Number.NEGATIVE_INFINITY){\n        $scope.res=\"NO DATA\"\n    } else {\n    \n        $scope.res = {\n    \t\"title\": {\n    \t\t\"text\": `{a|${$scope.response.max}}\\n{b|per day\\n\\n\\nmax items}\\n\\n\\n\\n\\n{c| }`,\n    \t\t\"top\": \"bottom\",\n    \t\t\"left\": \"center\",\n    \t\t\"textStyle\": {\n    \t\t\t\"rich\": {\n    \t\t\t\t\"a\": {\n    \t\t\t\t\t\"fontSize\": 36,\n    \t\t\t\t\t\"color\": \"rgba(200, 0, 0, 0.75)\"\n    \t\t\t\t},\n    \t\t\t\t\"b\": {\n    \t\t\t\t\t\"fontSize\": 14,\n    \t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.5)\"\n    \t\t\t\t},\n    \t\t\t\t\"c\": {\n    \t\t\t\t\t\"fontSize\": 24,\n    \t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.5)\"\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t},\n    \t\"series\": [\n    \t\t{\n    \t\t\t\"name\": \"Sold Products per Day max\",\n    \t\t\t\"type\": \"pie\",\n    \t\t\t\"top\": \"top\",\n    \t\t\t\"radius\": [\n    \t\t\t\t\"80%\",\n    \t\t\t\t\"85%\"\n    \t\t\t],\n    \t\t\t\"avoidLabelOverlap\": false,\n    \t\t\t\"startAngle\": -180,\n    \t\t\t\"label\": {\n    \t\t\t\t\"show\": false\n    \t\t\t},\n    \t\t\t\"labelLine\": {\n    \t\t\t\t\"show\": false\n    \t\t\t},\n    \t\t\t\"color\": [\n    \t\t\t\t\"rgba(200, 0, 0, 0.5)\",\n    \t\t\t\t\"rgba(0,0,0,0.1)\",\n    \t\t\t\t\"transparent\"\n    \t\t\t],\n    \t\t\t\"data\": [\n    \t\t\t\t{\n    \t\t\t\t\t\"value\": $scope.response.max,\n    \t\t\t\t\t\"name\": \"1\"\n    \t\t\t\t},\n    \t\t\t\t{\n    \t\t\t\t\t\"value\": 200-$scope.response.max,\n    \t\t\t\t\t\"name\": \"0\"\n    \t\t\t\t}\n    \t\t\t]\n    \t\t},\n\n    \t\t{\n    \t\t\t\"name\": \"Sold Products per Day avg\",\n    \t\t\t\"type\": \"pie\",\n    \t\t\t\"top\": \"top\",\n    \t\t\t\"radius\": [\n    \t\t\t\t\"75%\",\n    \t\t\t\t\"80%\"\n    \t\t\t],\n    \t\t\t\"avoidLabelOverlap\": false,\n    \t\t\t\"startAngle\": -180,\n    \t\t\t\"label\": {\n    \t\t\t\t\"show\": false\n    \t\t\t},\n    \t\t\t\"labelLine\": {\n    \t\t\t\t\"show\": false\n    \t\t\t},\n    \t\t\t\"color\": [\n    \t\t\t\t\"rgba(0, 200, 200, 0.5)\",\n    \t\t\t\t\"rgba(0,0,0,0.1)\",\n    \t\t\t\t\"transparent\"\n    \t\t\t],\n    \t\t\t\"data\": [\n    \t\t\t\t{\n    \t\t\t\t\t\"value\": $scope.response.avg,\n    \t\t\t\t\t\"name\": \"1\"\n    \t\t\t\t},\n    \t\t\t\t{\n    \t\t\t\t\t\"value\": 200-$scope.response.avg,\n    \t\t\t\t\t\"name\": \"0\"\n    \t\t\t\t}\n    \t\t\t]\n    \t\t},\n    \t\t    \t\t{\n    \t\t\t\"name\": \"Sold Products per Day min\",\n    \t\t\t\"type\": \"pie\",\n    \t\t\t\"top\": \"top\",\n    \t\t\t\"radius\": [\n    \t\t\t\t\"70%\",\n    \t\t\t\t\"75%\"\n    \t\t\t],\n    \t\t\t\"avoidLabelOverlap\": false,\n    \t\t\t\"startAngle\": -180,\n    \t\t\t\"label\": {\n    \t\t\t\t\"show\": false\n    \t\t\t},\n    \t\t\t\"labelLine\": {\n    \t\t\t\t\"show\": false\n    \t\t\t},\n    \t\t\t\"color\": [\n    \t\t\t\t\"rgba(200, 0, 0, 0.5)\",\n    \t\t\t\t\"rgba(0,0,0,0.1)\",\n    \t\t\t\t\"transparent\"\n    \t\t\t],\n    \t\t\t\"data\": [\n    \t\t\t\t{\n    \t\t\t\t\t\"value\": $scope.response.min,\n    \t\t\t\t\t\"name\": \"1\"\n    \t\t\t\t},\n    \t\t\t\t{\n    \t\t\t\t\t\"value\": 200-$scope.response.min,\n    \t\t\t\t\t\"name\": \"0\"\n    \t\t\t\t}\n    \t\t\t]\n    \t\t}\n    \t]\n    }\n    }\n?>\nreturn(\"res\")\n"},{"name":"Sales by Gender","script":"<?javascript\n    $scope.service = {\n        host: \"https://ao67vvmh5b:if1xwb6ag5@beech-495313317.eu-west-1.bonsaisearch.net:443\"\n    }\n    \n    // $scope.manufacturer = [\"Champion Arts\", \"Elitelligence\"]\n    // $scope.category = [\"Men's Accessories\", \"Men's Shoes\"]\n    \n    // $scope.manufacturer = []\n    // $scope.category = []\n    \n?>\n\nservice.es(\n\t\t\t\t\n    from: {{service}},\n    cmd:\"search\",\n    args:<? {\n        index:\"kibana_sample_data_ecommerce\",\n        body:{\n  \"aggs\": {\n    \"data\": {\n      \"terms\": {\n        \"field\": \"customer_gender\",\n        \"order\": {\n          \"_count\": \"desc\"\n        },\n        \"size\": 5\n      }\n    }\n  },\n  \"size\": 0,\n  \"_source\": {\n    \"excludes\": []\n  },\n  \"stored_fields\": [\n    \"*\"\n  ],\n  \"script_fields\": {},\n  \"docvalue_fields\": [\n    {\n      \"field\": \"customer_birth_date\",\n      \"format\": \"date_time\"\n    },\n    {\n      \"field\": \"order_date\",\n      \"format\": \"date_time\"\n    },\n    {\n      \"field\": \"products.created_on\",\n      \"format\": \"date_time\"\n    }\n  ],\n  \"query\": {\n    \"bool\": {\n      \"must\": [\n        {\n          \"bool\": {\n            \"should\": $scope.category.map( item =>({\n                \"match_phrase\": {\n                  \"category.keyword\": item\n                }\n            })),\n            \"minimum_should_match\": 1\n          }\n        },\n        {\n          \"bool\": {\n            \"should\": $scope.manufacturer.map(item => ({\n                \"match_phrase\": {\n                  \"manufacturer.keyword\": item\n                }    \n            })),\n            \"minimum_should_match\": 1\n          }\n        },\n        {\n          \"range\": {\n            \"order_date\": {\n              \"format\": \"strict_date_optional_time\",\n              \"gte\": \"2020-11-15T13:08:15.982Z\",\n              \"lte\": \"2020-11-22T13:08:15.982Z\"\n            }\n          }\n        }\n      ],\n      \"filter\": [\n        {\n          \"match_all\": {}\n        },\n        {\n          \"match_all\": {}\n        }\n      ],\n      \"should\": [],\n      \"must_not\": []\n    }\n  }\n} \n\n    } ?>,\n    \n    returns: <? data => data.aggregations.data.buckets ?>\n)   \nset(\"response\")\n\n<?javascript\n    let sum = $scope.response.map( d => d.doc_count).reduce( (a,d) => a + d)\n    $scope.response = _.sortBy($scope.response.map( d => {\n        d.percent = Math.round(100 * d.doc_count/sum)\n        return d\n    }), \"key\")\n    \n    $scope.res = {\n    \t\"title\": {\n    \t\t\"text\": \"{a| }\\n{b| \\n}\\n\\n\\n\\n{c| }\",\n    \t\t\"top\": \"bottom\",\n    \t\t\"left\": \"center\",\n    \t\t\"textStyle\": {\n    \t\t\t\"rich\": {\n    \t\t\t\t\"a\": {\n    \t\t\t\t\t\"fontSize\": 24,\n    \t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.5)\"\n    \t\t\t\t},\n    \t\t\t\t\"b\": {\n    \t\t\t\t\t\"fontSize\": 14,\n    \t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.9)\"\n    \t\t\t\t},\n    \t\t\t\t\"c\": {\n    \t\t\t\t\t\"fontSize\": 24,\n    \t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.5)\"\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t},\n    \t\"series\": [\n    \t\t{\n    \t\t\t\"name\": \"Sales by Gender\",\n    \t\t\t\"type\": \"pie\",\n    \t\t\t\"startAngle\": -180,\n    \t\t\t\"radius\": [\n    \t\t\t\t\"50%\",\n    \t\t\t\t\"65%\"\n    \t\t\t],\n    \t\t\t\"color\": [\n    \t\t\t\t\"rgba(183,28,28,0.5)\",\n    \t\t\t\t\"rgba(13,71,161,0.5)\"\n    \t\t\t\t\n    \t\t\t\t\n    \t\t\t],\n    \t\t\t\"label\": {\n    \t\t\t\t\"fontSize\": 14\n    \t\t\t},\n    \t\t\t\"data\": $scope.response.map( d => ({\n    \t\t\t    value: d.percent,\n    \t\t\t    name: `${d.key}\\n${d.percent}%`\n    \t\t\t})) \n    \t\t}\n    \t]\n    }\n    \n?>\n\nreturn(\"res\")\n\n\n"},{"name":"Average Sales Price","script":"<?javascript\n    $scope.service = {\n        host: \"https://ao67vvmh5b:if1xwb6ag5@beech-495313317.eu-west-1.bonsaisearch.net:443\"\n    }\n    \n    // $scope.manufacturer = [\"Champion Arts\", \"Elitelligence\"]\n    // $scope.category = [\"Men's Accessories\", \"Men's Shoes\"]\n    \n    // $scope.manufacturer = []\n    // $scope.category = []\n    \n?>\n\nservice.es(\n\t\t\t\t\n    from: {{service}},\n    cmd:\"search\",\n    args:<? {\n        index:\"kibana_sample_data_ecommerce\",\n        body:{\n          \"aggs\": {\n            \"data\": {\n              \"avg\": {\n                \"field\": \"taxful_total_price\"\n              }\n            }\n          },\n          \"size\": 0,\n          \"_source\": {\n            \"excludes\": []\n          },\n          \"stored_fields\": [\n            \"*\"\n          ],\n          \"script_fields\": {},\n          \"docvalue_fields\": [\n            {\n              \"field\": \"customer_birth_date\",\n              \"format\": \"date_time\"\n            },\n            {\n              \"field\": \"order_date\",\n              \"format\": \"date_time\"\n            },\n            {\n              \"field\": \"products.created_on\",\n              \"format\": \"date_time\"\n            }\n          ],\n          \"query\": {\n            \"bool\": {\n              \"must\": [\n                {\n                  \"bool\": {\n                    \"should\": $scope.category.map( item =>({\n                        \"match_phrase\": {\n                          \"category.keyword\": item\n                        }\n                    })),\n                    \"minimum_should_match\": 1\n                  }\n                },\n                {\n                  \"bool\": {\n                    \"should\": $scope.manufacturer.map(item => ({\n                        \"match_phrase\": {\n                          \"manufacturer.keyword\": item\n                        }    \n                    })),\n                    \"minimum_should_match\": 1\n                  }\n                },\n                {\n                  \"range\": {\n                    \"order_date\": {\n                      \"format\": \"strict_date_optional_time\",\n                      \"gte\": \"2020-11-15T13:08:15.982Z\",\n                      \"lte\": \"2020-11-22T13:08:15.982Z\"\n                    }\n                  }\n                }\n              ],\n              \"filter\": [\n                {\n                  \"match_all\": {}\n                },\n                {\n                  \"match_all\": {}\n                }\n              ],\n              \"should\": [],\n              \"must_not\": []\n            }\n          }\n        }\n    } ?>,\n    \n    returns: <? data => data.aggregations.data ?>\n)   \nset(\"response\")\n\n<?javascript\n    $scope.res = {\n    \t\"title\": {\n    \t\t\"text\": `{a|$${$scope.response.value.toFixed(2)}}\\n{b|per order\\n\\n\\naverage spend}\\n\\n\\n\\n\\n{c| }`,\n    \t\t\"top\": \"bottom\",\n    \t\t\"left\": \"center\",\n    \t\t\"textStyle\": {\n    \t\t\t\"rich\": {\n    \t\t\t\t\"a\": {\n    \t\t\t\t\t\"fontSize\": 36,\n    \t\t\t\t\t\"color\": \"rgba(0, 200, 0, 0.75)\"\n    \t\t\t\t},\n    \t\t\t\t\"b\": {\n    \t\t\t\t\t\"fontSize\": 14,\n    \t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.5)\"\n    \t\t\t\t},\n    \t\t\t\t\"c\": {\n    \t\t\t\t\t\"fontSize\": 24,\n    \t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.5)\"\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t},\n    \t\"series\": [\n    \t\t{\n    \t\t\t\"name\": \"Average Sales Price\",\n    \t\t\t\"type\": \"pie\",\n    \t\t\t\"top\": \"top\",\n    \t\t\t\"radius\": [\n    \t\t\t\t\"70%\",\n    \t\t\t\t\"85%\"\n    \t\t\t],\n    \t\t\t\"avoidLabelOverlap\": false,\n    \t\t\t\"startAngle\": -180,\n    \t\t\t\"label\": {\n    \t\t\t\t\"show\": false\n    \t\t\t},\n    \t\t\t\"labelLine\": {\n    \t\t\t\t\"show\": false\n    \t\t\t},\n    \t\t\t\"color\": [\n    \t\t\t\t\"rgba(0, 200, 0, 0.5)\",\n    \t\t\t\t\"rgba(0,0,0,0.1)\",\n    \t\t\t\t\"transparent\"\n    \t\t\t],\n    \t\t\t\"data\": [\n    \t\t\t\t{\n    \t\t\t\t\t\"value\": $scope.response.value.toFixed(2),\n    \t\t\t\t\t\"name\": \"1\"\n    \t\t\t\t},\n    \t\t\t\t{\n    \t\t\t\t\t\"value\": (200 - $scope.response.value).toFixed(2),\n    \t\t\t\t\t\"name\": \"0\"\n    \t\t\t\t}\n    \t\t\t]\n    \t\t}\n    \t]\n    }\n    \n?>\n\nreturn(\"res\")\n\n\n"},{"name":"Average Sold Quantity","script":"<?javascript\n    $scope.service = {\n        host: \"https://ao67vvmh5b:if1xwb6ag5@beech-495313317.eu-west-1.bonsaisearch.net:443\"\n    }\n    \n    // $scope.manufacturer = [\"Champion Arts\", \"Elitelligence\"]\n    // $scope.category = [\"Men's Accessories\", \"Men's Shoes\"]\n    \n    // $scope.manufacturer = []\n    // $scope.category = []\n    \n?>\n\nservice.es(\n\t\t\t\t\n    from: {{service}},\n    cmd:\"search\",\n    args:<? {\n        index:\"kibana_sample_data_ecommerce\",\n        body:{\n          \"aggs\": {\n            \"data\": {\n              \"avg\": {\n                \"field\": \"total_quantity\"\n              }\n            }\n          },\n          \"size\": 0,\n          \"_source\": {\n            \"excludes\": []\n          },\n          \"stored_fields\": [\n            \"*\"\n          ],\n          \"script_fields\": {},\n          \"docvalue_fields\": [\n            {\n              \"field\": \"customer_birth_date\",\n              \"format\": \"date_time\"\n            },\n            {\n              \"field\": \"order_date\",\n              \"format\": \"date_time\"\n            },\n            {\n              \"field\": \"products.created_on\",\n              \"format\": \"date_time\"\n            }\n          ],\n          \"query\": {\n            \"bool\": {\n              \"must\": [\n                {\n                  \"bool\": {\n                    \"should\": $scope.category.map( item =>({\n                        \"match_phrase\": {\n                          \"category.keyword\": item\n                        }\n                    })),\n                    \"minimum_should_match\": 1\n                  }\n                },\n                {\n                  \"bool\": {\n                    \"should\": $scope.manufacturer.map(item => ({\n                        \"match_phrase\": {\n                          \"manufacturer.keyword\": item\n                        }    \n                    })),\n                    \"minimum_should_match\": 1\n                  }\n                },\n                {\n                  \"range\": {\n                    \"order_date\": {\n                      \"format\": \"strict_date_optional_time\",\n                      \"gte\": \"2020-11-15T13:08:15.982Z\",\n                      \"lte\": \"2020-11-22T13:08:15.982Z\"\n                    }\n                  }\n                }\n              ],\n              \"filter\": [\n                {\n                  \"match_all\": {}\n                },\n                {\n                  \"match_all\": {}\n                }\n              ],\n              \"should\": [],\n              \"must_not\": []\n            }\n          }\n        }\n\n    } ?>,\n    \n    returns: <? data => data.aggregations.data ?>\n)   \nset(\"response\")\n\n<?javascript\n    $scope.res = {\n    \t\"title\": {\n    \t\t\"text\": `{a|${$scope.response.value.toFixed(3)}}\\n{b|per order\\n\\n\\naverage items}\\n\\n\\n\\n\\n{c| }`,\n    \t\t\"top\": \"bottom\",\n    \t\t\"left\": \"center\",\n    \t\t\"textStyle\": {\n    \t\t\t\"rich\": {\n    \t\t\t\t\"a\": {\n    \t\t\t\t\t\"fontSize\": 36,\n    \t\t\t\t\t\"color\": \"rgba(0, 0, 200, 0.75)\"\n    \t\t\t\t},\n    \t\t\t\t\"b\": {\n    \t\t\t\t\t\"fontSize\": 14,\n    \t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.5)\"\n    \t\t\t\t},\n    \t\t\t\t\"c\": {\n    \t\t\t\t\t\"fontSize\": 24,\n    \t\t\t\t\t\"color\": \"rgba(0, 0, 0, 0.5)\"\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t},\n    \t\"series\": [\n    \t\t{\n    \t\t\t\"name\": \"Average Sold Quantity\",\n    \t\t\t\"type\": \"pie\",\n    \t\t\t\"top\": \"top\",\n    \t\t\t\"radius\": [\n    \t\t\t\t\"70%\",\n    \t\t\t\t\"85%\"\n    \t\t\t],\n    \t\t\t\"avoidLabelOverlap\": false,\n    \t\t\t\"startAngle\": -180,\n    \t\t\t\"label\": {\n    \t\t\t\t\"show\": false\n    \t\t\t},\n    \t\t\t\"labelLine\": {\n    \t\t\t\t\"show\": false\n    \t\t\t},\n    \t\t\t\"color\": [\n    \t\t\t\t\"rgba(0, 0, 200, 0.5)\",\n    \t\t\t\t\"rgba(0,0,0,0.1)\",\n    \t\t\t\t\"transparent\"\n    \t\t\t],\n    \t\t\t\"data\": [\n    \t\t\t\t{\n    \t\t\t\t\t\"value\": $scope.response.value,\n    \t\t\t\t\t\"name\": \"1\"\n    \t\t\t\t},\n    \t\t\t\t{\n    \t\t\t\t\t\"value\": 4 - $scope.response.value,\n    \t\t\t\t\t\"name\": \"0\"\n    \t\t\t\t}\n    \t\t\t]\n    \t\t}\n    \t]\n    }\n    \n?>\n\nreturn(\"res\")\n\n\n"},{"name":"Sales by Category","script":"<?javascript\n    $scope.service = {\n        host: \"https://ao67vvmh5b:if1xwb6ag5@beech-495313317.eu-west-1.bonsaisearch.net:443\"\n    }\n    \n    // $scope.manufacturer = [\"Champion Arts\", \"Elitelligence\"]\n    // $scope.category = [\"Men's Accessories\", \"Men's Shoes\"]\n    \n    // $scope.manufacturer = []\n    // $scope.category = []\n    \n    // $scope.keys = [\n    //     {\n    //         \"id\": \"Men's Clothing\",\n    //         \"title\": \"Men's Clothing\"\n    //     },\n    //     {\n    //         \"id\": \"Women's Clothing\",\n    //         \"title\": \"Women's Clothing\"\n    //     },\n    //     {\n    //         \"id\": \"Women's Shoes\",\n    //         \"title\": \"Women's Shoes\"\n    //     },\n    //     {\n    //         \"id\": \"Men's Shoes\",\n    //         \"title\": \"Men's Shoes\"\n    //     },\n    //     {\n    //         \"id\": \"Women's Accessories\",\n    //         \"title\": \"Women's Accessories\"\n    //     },\n    //     {\n    //         \"id\": \"Men's Accessories\",\n    //         \"title\": \"Men's Accessories\"\n    //     }\n    // ]\n    \n    \n?>\n\nservice.es(\n\t\t\t\t\n    from: {{service}},\n    cmd:\"search\",\n    args:<? {\n        index:\"kibana_sample_data_ecommerce\",\n        body:{\n          \"aggs\": {\n            \"data\": {\n              \"date_histogram\": {\n                \"field\": \"order_date\",\n                \"interval\": \"3h\",\n                \"time_zone\": \"Europe/Kiev\",\n                \"min_doc_count\": 1\n              },\n              \"aggs\": {\n                \"point\": {\n                  \"terms\": {\n                    \"field\": \"category.keyword\",\n                    \"order\": {\n                      \"1\": \"desc\"\n                    },\n                    \"size\": 5\n                  },\n                  \"aggs\": {\n                    \"1\": {\n                      \"sum\": {\n                        \"field\": \"total_quantity\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"size\": 0,\n          \"_source\": {\n            \"excludes\": []\n          },\n          \"stored_fields\": [\n            \"*\"\n          ],\n          \"script_fields\": {},\n          \"docvalue_fields\": [\n            {\n              \"field\": \"customer_birth_date\",\n              \"format\": \"date_time\"\n            },\n            {\n              \"field\": \"order_date\",\n              \"format\": \"date_time\"\n            },\n            {\n              \"field\": \"products.created_on\",\n              \"format\": \"date_time\"\n            }\n          ],\n          \"query\": {\n            \"bool\": {\n              \"must\": [\n                {\n                  \"bool\": {\n                    \"should\": $scope.manufacturer.map( d => ({\n                        \"match_phrase\": {\n                          \"manufacturer.keyword\": d\n                        }\n                    })),\n                    \"minimum_should_match\": 1\n                  }\n                },\n                {\n                  \"bool\": {\n                    \"should\": $scope.category.map( d => ({\n                        \"match_phrase\": {\n                          \"category.keyword\": d\n                        }\n                    })),\n                    \"minimum_should_match\": 1\n                  }\n                },\n                {\n                  \"range\": {\n                    \"order_date\": {\n                      \"format\": \"strict_date_optional_time\",\n                      \"gte\": \"2020-11-15T13:08:15.982Z\",\n                      \"lte\": \"2020-11-22T13:08:15.982Z\"\n                    }\n                  }\n                }\n              ],\n              \"filter\": [\n                {\n                  \"match_all\": {}\n                },\n                {\n                  \"match_all\": {}\n                }\n              ],\n              \"should\": [],\n              \"must_not\": []\n            }\n          }\n        }\n    } ?>\n    ,\n    \n    returns: <? data =>\n        //data.aggregations.data.buckets \n        data.aggregations.data.buckets.map( d => ({\n            time: moment(d.key_as_string).format(\"MM.DD HH:mm\"),\n              points: d.point.buckets.map( p => ({\n                  value: p[\"1\"].value,\n                  key: p.key,\n                  doc_count: d.doc_count \n              })) \n        }))\n    ?>\n)   \nset(\"response\")\n\n<?javascript\n    $scope.res = {\n    \tlegend: $scope.keys.map( d => d.id), \n    \txAxis: $scope.response.map( d => d.time), \n    \tseries: $scope.keys.map( key => ({\n    \t    name: key.id,\n    \t    type: \"line\",\n    \t    data: $scope.response.map( d => {\n    \t        let item = _.find(d.points, dd => dd.key == key.id)\n    \t        return (item) ? item.value : 0\n    \t    }),\n    \t    smooth: true,\n    \t\tstack: \"a\",\n    \t\tareaStyle: {\n    \t\t    opacity: 0.2\n    \t\t}\n    \t}))\n    }\t\n\n?>\n\nreturn(\"res\")\n"},{"name":"getKeyList","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: getKeyList\n **     SERVICE: https://jace-dps.herokuapp.com\n **\n **/\n\n<?javascript\n    $scope.service = {\n        host: \"https://ao67vvmh5b:if1xwb6ag5@beech-495313317.eu-west-1.bonsaisearch.net:443\"\n    }\n    \n    $scope.field=\"category\"\n    \n?>\n\nservice.es(\n\t\t\t\t\n    from: {{service}},\n    cmd:\"search\",\n    args:<? {\n        index:\"kibana_sample_data_ecommerce\",\n        body:{\n          \"size\": 0,\n          \"aggs\": {\n            \"list\": {\n              \"terms\": {\n                \"field\": `${$scope.field}.keyword`,\n                \"size\": 10\n              }\n            }\n          }\n        }\n    } ?>,\n    returns: <? d => _.sortBy(d.aggregations.list.buckets.map( item => ({\n        id: item.key,\n        title: item.key\n    })),\"key\") ?>\n)    \n\n"},{"name":"lines","script":"\n<?javascript\n    $scope.keys = [\n        {\n            \"id\": \"Men's Clothing\",\n            \"title\": \"Men's Clothing\"\n        },\n        {\n            \"id\": \"Women's Clothing\",\n            \"title\": \"Women's Clothing\"\n        },\n        {\n            \"id\": \"Women's Shoes\",\n            \"title\": \"Women's Shoes\"\n        },\n        {\n            \"id\": \"Men's Shoes\",\n            \"title\": \"Men's Shoes\"\n        },\n        {\n            \"id\": \"Women's Accessories\",\n            \"title\": \"Women's Accessories\"\n        },\n        {\n            \"id\": \"Men's Accessories\",\n            \"title\": \"Men's Accessories\"\n        }\n    ]\n    \n    $scope.data = [\n        {\n            \"time\": \"11.15 16:00\",\n            \"points\": [\n                {\n                    \"value\": 12,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 7\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 7\n                },\n                {\n                    \"value\": 2,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 7\n                }\n            ]\n        },\n        {\n            \"time\": \"11.15 19:00\",\n            \"points\": [\n                {\n                    \"value\": 16,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 16\n                }\n            ]\n        },\n        {\n            \"time\": \"11.15 22:00\",\n            \"points\": [\n                {\n                    \"value\": 14,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 18\n                }\n            ]\n        },\n        {\n            \"time\": \"11.16 01:00\",\n            \"points\": [\n                {\n                    \"value\": 22,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 2,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 18\n                }\n            ]\n        },\n        {\n            \"time\": \"11.16 04:00\",\n            \"points\": [\n                {\n                    \"value\": 20,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 17\n                }\n            ]\n        },\n        {\n            \"time\": \"11.16 07:00\",\n            \"points\": [\n                {\n                    \"value\": 20,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 18\n                }\n            ]\n        },\n        {\n            \"time\": \"11.16 10:00\",\n            \"points\": [\n                {\n                    \"value\": 24,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 22,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 20\n                }\n            ]\n        },\n        {\n            \"time\": \"11.16 13:00\",\n            \"points\": [\n                {\n                    \"value\": 16,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 14\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 14\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 14\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 14\n                },\n                {\n                    \"value\": 2,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 14\n                }\n            ]\n        },\n        {\n            \"time\": \"11.16 16:00\",\n            \"points\": [\n                {\n                    \"value\": 24,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 2,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 20\n                }\n            ]\n        },\n        {\n            \"time\": \"11.16 19:00\",\n            \"points\": [\n                {\n                    \"value\": 20,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 19\n                }\n            ]\n        },\n        {\n            \"time\": \"11.16 22:00\",\n            \"points\": [\n                {\n                    \"value\": 22,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 19\n                }\n            ]\n        },\n        {\n            \"time\": \"11.17 01:00\",\n            \"points\": [\n                {\n                    \"value\": 22,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 20\n                }\n            ]\n        },\n        {\n            \"time\": \"11.17 04:00\",\n            \"points\": [\n                {\n                    \"value\": 30,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 22,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 2,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 19\n                }\n            ]\n        },\n        {\n            \"time\": \"11.17 07:00\",\n            \"points\": [\n                {\n                    \"value\": 16,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 14\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 14\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 14\n                },\n                {\n                    \"value\": 2,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 14\n                },\n                {\n                    \"value\": 2,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 14\n                }\n            ]\n        },\n        {\n            \"time\": \"11.17 10:00\",\n            \"points\": [\n                {\n                    \"value\": 14,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 16\n                }\n            ]\n        },\n        {\n            \"time\": \"11.17 13:00\",\n            \"points\": [\n                {\n                    \"value\": 26,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 20,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 22\n                }\n            ]\n        },\n        {\n            \"time\": \"11.17 16:00\",\n            \"points\": [\n                {\n                    \"value\": 24,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 20\n                }\n            ]\n        },\n        {\n            \"time\": \"11.17 19:00\",\n            \"points\": [\n                {\n                    \"value\": 24,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 17\n                }\n            ]\n        },\n        {\n            \"time\": \"11.17 22:00\",\n            \"points\": [\n                {\n                    \"value\": 22,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 13\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 13\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 13\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 13\n                },\n                {\n                    \"value\": 2,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 13\n                }\n            ]\n        },\n        {\n            \"time\": \"11.18 01:00\",\n            \"points\": [\n                {\n                    \"value\": 20,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 18\n                }\n            ]\n        },\n        {\n            \"time\": \"11.18 04:00\",\n            \"points\": [\n                {\n                    \"value\": 18,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 17\n                }\n            ]\n        },\n        {\n            \"time\": \"11.18 07:00\",\n            \"points\": [\n                {\n                    \"value\": 18,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 15\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 15\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 15\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 15\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 15\n                }\n            ]\n        },\n        {\n            \"time\": \"11.18 10:00\",\n            \"points\": [\n                {\n                    \"value\": 26,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 19\n                }\n            ]\n        },\n        {\n            \"time\": \"11.18 13:00\",\n            \"points\": [\n                {\n                    \"value\": 16,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 18\n                }\n            ]\n        },\n        {\n            \"time\": \"11.18 16:00\",\n            \"points\": [\n                {\n                    \"value\": 22,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 18,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 18,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 20\n                }\n            ]\n        },\n        {\n            \"time\": \"11.18 19:00\",\n            \"points\": [\n                {\n                    \"value\": 18,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 17\n                }\n            ]\n        },\n        {\n            \"time\": \"11.18 22:00\",\n            \"points\": [\n                {\n                    \"value\": 32,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 25\n                },\n                {\n                    \"value\": 22,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 25\n                },\n                {\n                    \"value\": 22,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 25\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 25\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 25\n                }\n            ]\n        },\n        {\n            \"time\": \"11.19 01:00\",\n            \"points\": [\n                {\n                    \"value\": 26,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 20\n                }\n            ]\n        },\n        {\n            \"time\": \"11.19 04:00\",\n            \"points\": [\n                {\n                    \"value\": 14,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 17\n                }\n            ]\n        },\n        {\n            \"time\": \"11.19 07:00\",\n            \"points\": [\n                {\n                    \"value\": 25,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 22\n                }\n            ]\n        },\n        {\n            \"time\": \"11.19 10:00\",\n            \"points\": [\n                {\n                    \"value\": 32,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 29\n                },\n                {\n                    \"value\": 23,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 29\n                },\n                {\n                    \"value\": 20,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 29\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 29\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 29\n                }\n            ]\n        },\n        {\n            \"time\": \"11.19 13:00\",\n            \"points\": [\n                {\n                    \"value\": 18,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 18\n                }\n            ]\n        },\n        {\n            \"time\": \"11.19 16:00\",\n            \"points\": [\n                {\n                    \"value\": 16,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 16\n                }\n            ]\n        },\n        {\n            \"time\": \"11.19 19:00\",\n            \"points\": [\n                {\n                    \"value\": 17,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 19\n                }\n            ]\n        },\n        {\n            \"time\": \"11.19 22:00\",\n            \"points\": [\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 15\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 15\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 15\n                },\n                {\n                    \"value\": 2,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 15\n                },\n                {\n                    \"value\": 2,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 15\n                }\n            ]\n        },\n        {\n            \"time\": \"11.20 01:00\",\n            \"points\": [\n                {\n                    \"value\": 26,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 20\n                }\n            ]\n        },\n        {\n            \"time\": \"11.20 04:00\",\n            \"points\": [\n                {\n                    \"value\": 15,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 18\n                }\n            ]\n        },\n        {\n            \"time\": \"11.20 07:00\",\n            \"points\": [\n                {\n                    \"value\": 20,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 9,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 16\n                }\n            ]\n        },\n        {\n            \"time\": \"11.20 10:00\",\n            \"points\": [\n                {\n                    \"value\": 13,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 19\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 19\n                }\n            ]\n        },\n        {\n            \"time\": \"11.20 13:00\",\n            \"points\": [\n                {\n                    \"value\": 19,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 20\n                }\n            ]\n        },\n        {\n            \"time\": \"11.20 16:00\",\n            \"points\": [\n                {\n                    \"value\": 12,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 15\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 15\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 15\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 15\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 15\n                }\n            ]\n        },\n        {\n            \"time\": \"11.20 19:00\",\n            \"points\": [\n                {\n                    \"value\": 18,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 13,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 20\n                }\n            ]\n        },\n        {\n            \"time\": \"11.20 22:00\",\n            \"points\": [\n                {\n                    \"value\": 22,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 17\n                }\n            ]\n        },\n        {\n            \"time\": \"11.21 01:00\",\n            \"points\": [\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 12,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 16\n                }\n            ]\n        },\n        {\n            \"time\": \"11.21 04:00\",\n            \"points\": [\n                {\n                    \"value\": 28,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 24,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 22,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 18,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 22\n                }\n            ]\n        },\n        {\n            \"time\": \"11.21 07:00\",\n            \"points\": [\n                {\n                    \"value\": 28,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 25\n                },\n                {\n                    \"value\": 28,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 25\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 25\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 25\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 25\n                }\n            ]\n        },\n        {\n            \"time\": \"11.21 10:00\",\n            \"points\": [\n                {\n                    \"value\": 26,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 5,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 20\n                }\n            ]\n        },\n        {\n            \"time\": \"11.21 13:00\",\n            \"points\": [\n                {\n                    \"value\": 15,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 16\n                }\n            ]\n        },\n        {\n            \"time\": \"11.21 16:00\",\n            \"points\": [\n                {\n                    \"value\": 18,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 18\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 18\n                }\n            ]\n        },\n        {\n            \"time\": \"11.21 19:00\",\n            \"points\": [\n                {\n                    \"value\": 31,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 21\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 21\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 21\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 21\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 21\n                }\n            ]\n        },\n        {\n            \"time\": \"11.21 22:00\",\n            \"points\": [\n                {\n                    \"value\": 22,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 21\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 21\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 21\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 21\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 21\n                }\n            ]\n        },\n        {\n            \"time\": \"11.22 01:00\",\n            \"points\": [\n                {\n                    \"value\": 17,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 16\n                },\n                {\n                    \"value\": 2,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 16\n                }\n            ]\n        },\n        {\n            \"time\": \"11.22 04:00\",\n            \"points\": [\n                {\n                    \"value\": 27,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 22,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 16,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 22\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 22\n                }\n            ]\n        },\n        {\n            \"time\": \"11.22 07:00\",\n            \"points\": [\n                {\n                    \"value\": 16,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Accessories\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 17\n                },\n                {\n                    \"value\": 4,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 17\n                }\n            ]\n        },\n        {\n            \"time\": \"11.22 10:00\",\n            \"points\": [\n                {\n                    \"value\": 24,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 21\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 21\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 21\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 21\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 21\n                }\n            ]\n        },\n        {\n            \"time\": \"11.22 13:00\",\n            \"points\": [\n                {\n                    \"value\": 22,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 18,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 14,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 20\n                },\n                {\n                    \"value\": 10,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 20\n                }\n            ]\n        },\n        {\n            \"time\": \"11.22 16:00\",\n            \"points\": [\n                {\n                    \"value\": 11,\n                    \"key\": \"Women's Clothing\",\n                    \"doc_count\": 12\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Clothing\",\n                    \"doc_count\": 12\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Men's Shoes\",\n                    \"doc_count\": 12\n                },\n                {\n                    \"value\": 8,\n                    \"key\": \"Women's Shoes\",\n                    \"doc_count\": 12\n                },\n                {\n                    \"value\": 6,\n                    \"key\": \"Women's Accessories\",\n                    \"doc_count\": 12\n                }\n            ]\n        }\n    ]\n\n    $scope.res = {\n    \tlegend: $scope.keys.map( d => d.title), \n    \txAxis: $scope.data.map( d => d.time), \n    \tseries: $scope.keys.map( key => ({\n    \t    name: key.title,\n    \t    type: \"line\",\n    \t    data: $scope.data.map( d => {\n    \t        let item = _.find(d.points, dd => dd.key == key.title)\n    \t        return (item) ? item.value : 0\n    \t    }),\n    \t    smooth: true,\n    \t\tstack: \"a\",\n    \t\tareaStyle: {\n    \t\t    opacity: 0.2\n    \t\t}\n    \t}))\n    }\t\n\n?>\n\nreturn(\"res\")"},{"name":"Top Selling Products","script":"<?javascript\n    $scope.service = {\n        host: \"https://ao67vvmh5b:if1xwb6ag5@beech-495313317.eu-west-1.bonsaisearch.net:443\"\n    }\n    \n    // $scope.manufacturer = [\"Champion Arts\", \"Elitelligence\"]\n    // $scope.category = [\"Men's Accessories\", \"Men's Shoes\"]\n    \n    // $scope.manufacturer = []\n    // $scope.category = []\n    \n?>\n\nservice.es(\n\t\t\t\t\n    from: {{service}},\n    cmd:\"search\",\n    args:<? {\n        index:\"kibana_sample_data_ecommerce\",\n        body:{\n          \"aggs\": {\n            \"data\": {\n              \"terms\": {\n                \"field\": \"products.product_name.keyword\",\n                \"order\": {\n                  \"_count\": \"desc\"\n                },\n                \"size\": 7\n              }\n            }\n          },\n          \"size\": 0,\n          \"_source\": {\n            \"excludes\": []\n          },\n          \"stored_fields\": [\n            \"*\"\n          ],\n          \"script_fields\": {},\n          \"docvalue_fields\": [\n            {\n              \"field\": \"customer_birth_date\",\n              \"format\": \"date_time\"\n            },\n            {\n              \"field\": \"order_date\",\n              \"format\": \"date_time\"\n            },\n            {\n              \"field\": \"products.created_on\",\n              \"format\": \"date_time\"\n            }\n          ],\n          \"query\": {\n            \"bool\": {\n              \"must\": [\n                {\n                  \"bool\": {\n                    \"should\": $scope.manufacturer.map( d => ({\n                        \"match_phrase\": {\n                          \"manufacturer.keyword\": d\n                        }\n                    })),\n                    \"minimum_should_match\": 1\n                  }\n                },\n                {\n                  \"bool\": {\n                    \"should\": $scope.category.map( d => ({\n                        \"match_phrase\": {\n                          \"category.keyword\": d\n                        }\n                    })),\n                    \"minimum_should_match\": 1\n                  }\n                },\n                {\n                  \"range\": {\n                    \"order_date\": {\n                      \"format\": \"strict_date_optional_time\",\n                      \"gte\": \"2020-11-15T13:08:15.982Z\",\n                      \"lte\": \"2020-11-22T13:08:15.982Z\"\n                    }\n                  }\n                }\n              ],\n              \"filter\": [\n                {\n                  \"match_all\": {}\n                },\n                {\n                  \"match_all\": {}\n                }\n              ],\n              \"should\": [],\n              \"must_not\": []\n            }\n          }\n        }\n    } ?>,\n    \n    returns: <? data => data.aggregations.data.buckets\n    ?>\n)   \nset(\"response\")\n\n<?javascript\n    $scope.res = {\n\t\"series\": [\n\t\t{\n\t\t\t\"name\": \"Top Selling Products\",\n\t\t\t\"type\": \"wordCloud\",\n\t\t\t\"left\": \"center\",\n\t\t\t\"top\": \"center\",\n\t\t\t\"width\": \"100%\",\n\t\t\t\"height\": \"100%\",\n\t\t\t\"right\": null,\n\t\t\t\"bottom\": null,\n\t\t\t\"sizeRange\": [\n\t\t\t\t10,\n\t\t\t\t36\n\t\t\t],\n\t\t\t\"gridSize\": 10,\n\t\t\t\"rotationRange\": [\n\t\t\t\t0,\n\t\t\t\t0\n\t\t\t],\n\t\t\t\"rotationStep\": 0,\n\t\t\t\"textPadding\": 10,\n\t\t\t\"drawOutOfBound\": true,\n\t\t\t\"data\": $scope.response.map( d => ({\n\t\t\t    name: d.key,\n\t\t\t    value: d.doc_count\n\t\t\t}))\n\t\t}\n\t]\n}\n    \n?>\n\nreturn(\"res\")\n\n\n"},{"name":"dml","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: dml\n **     SERVICE: https://jace-dps.herokuapp.com\n **\n **/\ndml.select(\n    from:\"countries\"\n)\n\nset(\"countries\")"},{"name":"Average Sales Per Region","script":"<?javascript\n    $scope.service = {\n        host: \"https://ao67vvmh5b:if1xwb6ag5@beech-495313317.eu-west-1.bonsaisearch.net:443\"\n    }\n    \n    // $scope.manufacturer = [\"Champion Arts\", \"Elitelligence\"]\n    // $scope.category = [\"Men's Accessories\", \"Men's Shoes\"]\n    \n    // $scope.manufacturer = []\n    // $scope.category = []\n    \n?>\n\nservice.es(\n\t\t\t\t\n    from: {{service}},\n    cmd:\"search\",\n    args:<? {\n        index:\"kibana_sample_data_ecommerce\",\n        body:{\n          \"aggs\": {\n            \"data\": {\n              \"terms\": {\n                \"field\": \"geoip.country_iso_code\",\n                \"order\": {\n                  \"1\": \"desc\"\n                },\n                \"size\": 100\n              },\n              \"aggs\": {\n                \"1\": {\n                  \"avg\": {\n                    \"field\": \"taxful_total_price\"\n                  }\n                }\n              }\n            }\n          },\n          \"size\": 0,\n          \"_source\": {\n            \"excludes\": []\n          },\n          \"stored_fields\": [\n            \"*\"\n          ],\n          \"script_fields\": {},\n          \"docvalue_fields\": [\n            {\n              \"field\": \"customer_birth_date\",\n              \"format\": \"date_time\"\n            },\n            {\n              \"field\": \"order_date\",\n              \"format\": \"date_time\"\n            },\n            {\n              \"field\": \"products.created_on\",\n              \"format\": \"date_time\"\n            }\n          ],\n          \"query\": {\n            \"bool\": {\n              \"must\": [\n               {\n                          \"bool\": {\n                            \"should\": $scope.manufacturer.map( d => ({\n                                \"match_phrase\": {\n                                  \"manufacturer.keyword\": d\n                                }\n                            })),\n                            \"minimum_should_match\": 1\n                          }\n                        },\n                        {\n                          \"bool\": {\n                            \"should\": $scope.category.map( d => ({\n                                \"match_phrase\": {\n                                  \"category.keyword\": d\n                                }\n                            })),\n                            \"minimum_should_match\": 1\n                          }\n                        },\n                        {\n                          \"range\": {\n                            \"order_date\": {\n                              \"format\": \"strict_date_optional_time\",\n                              \"gte\": \"2020-11-15T13:08:15.982Z\",\n                              \"lte\": \"2020-11-22T13:08:15.982Z\"\n                            }\n                          }\n                        }\n              ],\n              \"filter\": [\n                {\n                  \"match_all\": {}\n                },\n                {\n                  \"match_all\": {}\n                }\n              ],\n              \"should\": [],\n              \"must_not\": []\n            }\n          }\n        }\n } ?>,\n    \n    returns: <? data => data.aggregations.data.buckets \n        // data.aggregations.data.buckets.map( d => ({\n        //     time: moment(d.key_as_string).format(\"MM.DD HH:mm\"),\n        //       points: d.point.buckets.map( p => ({\n        //           value: p[\"1\"].value,\n        //           key: p.key,\n        //           doc_count: d.doc_count \n        //       })) \n        // }))\n    ?>\n)   \nset(\"response\")\n\ndml.select(\n    from:\"countries\"\n)\n\nset(\"countries\")\n\n<?javascript\n    $scope.res = {\n    \tserie : $scope.response.map( d => {\n    \t    let c = _.find($scope.countries, c => c.iso3166_1_alpha2 == d.key)\n    \t    if(c) return {\n    \t        selector: c.iso3166_1_alpha3,\n    \t        name: c.name,\n    \t        value: Number.parseFloat(d[\"1\"].value.toFixed(3))\n    \t    }\n    \t}).filter(d => d)\n    }\n    \n?>\n\nreturn(\"res\")\n\n\n"},{"name":"Orders","script":"<?javascript\n    $scope.service = {\n        host: \"https://ao67vvmh5b:if1xwb6ag5@beech-495313317.eu-west-1.bonsaisearch.net:443\"\n    }\n    \n    // $scope.manufacturer = [\"Champion Arts\"]\n    // $scope.category = [\"Men's Accessories\", \"Men's Shoes\"]\n    \n    // $scope.manufacturer = []\n    // $scope.category = []\n    \n?>\n\nservice.es(\n\t\t\t\t\n    from: {{service}},\n    cmd:\"search\",\n    args:<? {\n        index:\"kibana_sample_data_ecommerce\",\n        body:{\n          \"version\": true,\n          \"size\": 100,\n          \"sort\": [\n            {\n              \"order_date\": {\n                \"order\": \"desc\",\n                \"unmapped_type\": \"boolean\"\n              }\n            }\n          ],\n          \"_source\": {\n            \"excludes\": []\n          },\n          \"stored_fields\": [\n            \"*\"\n          ],\n          \"script_fields\": {},\n          \"docvalue_fields\": [\n            {\n              \"field\": \"customer_birth_date\",\n              \"format\": \"date_time\"\n            },\n            {\n              \"field\": \"order_date\",\n              \"format\": \"date_time\"\n            },\n            {\n              \"field\": \"products.created_on\",\n              \"format\": \"date_time\"\n            }\n          ],\n          \"query\": {\n            \"bool\": {\n              \"must\": [\n              {\n                  \"bool\": {\n                    \"should\": $scope.manufacturer.map( d => ({\n                        \"match_phrase\": {\n                          \"manufacturer.keyword\": d\n                        }\n                    })),\n                    \"minimum_should_match\": 1\n                  }\n                },\n                {\n                  \"bool\": {\n                    \"should\": $scope.category.map( d => ({\n                        \"match_phrase\": {\n                          \"category.keyword\": d\n                        }\n                    })),\n                    \"minimum_should_match\": 1\n                  }\n                },\n                {\n                  \"range\": {\n                    \"order_date\": {\n                      \"format\": \"strict_date_optional_time\",\n                      \"gte\": \"2020-11-15T13:08:15.982Z\",\n                      \"lte\": \"2020-11-22T13:08:15.982Z\"\n                    }\n                  }\n                }\n              ],\n              \"filter\": [\n                {\n                  \"match_all\": {}\n                },\n                {\n                  \"match_all\": {}\n                }\n              ],\n              \"should\": [],\n              \"must_not\": []\n            }\n          },\n          \"highlight\": {\n            \"pre_tags\": [\n              \"@kibana-highlighted-field@\"\n            ],\n            \"post_tags\": [\n              \"@/kibana-highlighted-field@\"\n            ],\n            \"fields\": {\n              \"*\": {}\n            },\n            \"fragment_size\": 2147483647\n          }\n        }\n    } ?>,\n    \n    returns: <? data => data.hits.hits.map( d => ({\n        category: d._source.category.join(\", \"),\n        currency: d._source.currency,\n        customer: d._source.customer_full_name,\n        manufacturer: d._source.manufacturer.join(\", \"),\n        order_date: moment(d._source.order_date).format(\"YY.MM.DD\"),\n        order_id: d._source.order_id,\n        total_quantity:d._source.total_quantity,\n        taxful_total_price: d._source.taxful_total_price,\n        city_name: d._source.geoip.city_name\n    }))\n    ?>\n)   \nset(\"response\")\n\n<?javascript\n    let dimensions = [\n        \"order_date\",\n        \"order_id\",\n        \"category\",\n        \"manufacturer\",\n        \"city_name\",\n        \"total_quantity\",\n        \"currency\",\n        \"taxful_total_price\"\n        \n    ]\n    $scope.res = {\n\t\"dataset\": {\n\t\tdimensions,\n\t\tsource: $scope.response.map( d => {\n\t\t    let res = {}\n\t\t    dimensions.forEach( key => {\n\t\t        res[key] = d[key]\n\t\t    })\n\t\t    return res\n\t\t})\n\t}\n}\n    \n?>\n\nreturn(\"res\")\n\n\n"},{"name":"GET_ALL_CATS","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: GET_ALL_CATS\n **     SERVICE: https://jace-dps.herokuapp.com\n **\n **/\n\n/**\n **\n **     DATA PROCESSING SCRIPT: getKeyList\n **     SERVICE: https://jace-dps.herokuapp.com\n **\n **/\n\n<?javascript\n    $scope.service = {\n        host: \"https://ao67vvmh5b:if1xwb6ag5@beech-495313317.eu-west-1.bonsaisearch.net:443\"\n    }\n    \n    // $scope.manufacturer = [\"Champion Arts\", \"Elitelligence\"]\n    // $scope.category = [\"Men's Accessories\", \"Men's Shoes\"]\n    \n    $scope.manufacturer = []\n    $scope.category = []\n    \n?>\n\nservice.es(\n\t\t\t\t\n    from: {{service}},\n    cmd:\"search\",\n    args:<? {\n        index:\"kibana_sample_data_ecommerce\",\n        body:{\n          \"size\": 0,\n          \"aggs\": {\n            \"list\": {\n              \"terms\": {\n                \"field\": \"category.keyword\",\n                \"size\": 10\n              }\n            }\n          }\n        }\n    } ?>,\n    returns: <? d => d.aggregations.list.buckets.map( item => ({\n        id: item.key,\n        title: item.key\n    })) ?>\n)    \n\nset(\"response\")\n<?javascript\n    $scope.response = _.sortBy($scope.response,\"key\") \n?>\nreturn (\"response\")\n"}],"data":{"source":"embedded","embedded":"<h2 color=\"#eee\"><center>not configured<center></h2><p>Use options dialog for configure this widget</p>","script":""},"id":"6e1cpe4w7mr","activated":false},{"type":"mediator-widget","name":"noname","icon":"mdi-language-javascript","options":{"widget":{"visible":true}},"data":{"script":"\n\nlet queue = (data, mapper) => new Promise( (resolve, reject) => {\n    let index = 0\n    \n    let fn = (data, mapper) => {\n        if( index == data.length ){\n            resolve()\n            return\n        }\n        mapper(data[index], index)\n            .then( () => {\n                index++\n                fn(data, mapper)\n            })\n            .catch( e => {\n                reject(e)\n            })\n    }        \n    \n    fn(data, mapper,0)      \n})\n\n\n\n    \n    \n    \n    let scripts = this.api.selectWidgets(\"6e1cpe4w7mr\").$refs.instance.scripts\n    let getScript = name => _.find(scripts,item => item.name == name).script\n    \n    let names = [\n        \"Category\",\n        \"Manufacturer\",\n        \"Filter\"\n    ]\n    let widgets = {}\n    \n    names.forEach( n => {\n        widgets[n] = this.api.selectWidgets( w => w.config.name == n)\n    })\n    \n    let chartNames = ([\n        \"Total Revenue\",\n        \"Sold Products\",\n        \"Sales by Gender\",\n        \"Average Sales Price\",\n        \"Sales by Category\",\n        \"Average Sold Quantity\",\n        \"Average Sales Per Region\",\n        \"Top Selling Products\",\n        \"Orders\"\n    ])\n    \n    let charts = {}\n    chartNames.forEach( n => {\n        charts[n] = this.api.selectWidgets( w => w.config.name == n)\n    })\n    \n    let selectedData = {\n        category: [],\n        manufacturer: [],\n        keys:[]\n    }\n    \n    let appliedData = {\n        category: [],\n        manufacturer: [],\n        keys:[]\n    }\n    \n    let filterData = \t{\n\t\t\"title\": \"Apply Filter\",\n\t\t\"event\": \"apply-filter\",\n\t\t\"color\": \"secondary\",\n\t\t\"disabled\": false\n\t}\n    \n    let getListHtml = collection => `<div class=\"secondary--text text--lighten-2 d-flex align-center justify-left py-1 px-2\" style=\"\n        font-size:24px;\n        border: 1px solid #cfd7e6;\n        box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);\n    \">\n        ${(collection.length > 0) ? collection.join(\", \") : \"All\"}\n    </div>\n    `\n    \n    let updateReport = () => {\n        widgets.Filter.update({data:[_.extend(filterData,{title:\"Wait...\",disabled:true})]})\n        widgets.Category.update({data: getListHtml(appliedData.category)})\n        widgets.Manufacturer.update({data: getListHtml(appliedData.manufacturer)})\n        \n        queue(chartNames, n => this.api.runDps( getScript(n), appliedData)\n            .then( res => {\n                console.log(n, res)\n                if((res.type == \"error\" || res.data == \"NO DATA\")) {\n                    charts[n].hide()\n                } else {\n                    charts[n].show()\n                    // this.$nextTick(() => {\n                        charts[n].update(res)\n                    // })    \n                }\n                \n            })\n        ).then( () => {\n            widgets.Filter.update({data:[_.extend(filterData,{title:\"Apply Filter\",disabled:false})]})\n            console.log(\"Page updated\")\n        })\n        \n        \n        \n    }\n    \n    this.api.runDps( getScript(\"GET_ALL_CATS\"))\n        .then ( res => {\n            appliedData.keys = res.data\n            updateReport()\n        })\n    \n    \n    this.api.off()\n    \n    this.api.on({\n        event: \"manufacturer-select\",\n        callback: (sender, selection) => {\n            selectedData.manufacturer = selection.selection.filter( s => s.selected).map( item => item.entity.id)\n        }\n    })\n    \n    this.api.on({\n        event: \"category-select\",\n        callback: (sender, selection) => {\n            selectedData.category = selection.selection.filter( s => s.selected).map( item => item.entity.id)\n            selectedData.keys = selection.selection.map( item => item.entity)\n            \n        }\n    })\n    \n    this.api.on({\n        event: \"apply-filter\",\n        callback: () => {\n             appliedData.category = selectedData.category.filter( d => d)\n             appliedData.manufacturer = selectedData.manufacturer.filter( d => d)\n             appliedData.keys = selectedData.keys.filter( d => d)\n             updateReport()\n        }\n    })\n    "},"id":"2we06sshejx","activated":false},{"type":"md-widget","name":"noname","icon":"mdi-markdown","options":{"widget":{"visible":true},"style":"\n  widget-style {\n    /*margin:1em;*/\n    padding:1em;\n    font-size:18px;\n    /*border: 1px solid #cfd7e6;*/\n    /*box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);*/\n  }\n\n"},"data":{"source":"embedded","embedded":"%0A%23Sample%20eCommerce%20Data%0A","script":""},"id":"rcz619azxs9","activated":false}]},"p3adrrs20xb":{"widgets":[{"type":"md-widget","name":"noname_clone_emytp843h1r","icon":"mdi-markdown","options":{"widget":{"visible":true},"style":"\n  widget-style {\n    /*margin:1em;*/\n    padding:1em;\n    font-size:18px;\n    /*border: 1px solid #cfd7e6;*/\n    /*box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);*/\n  }\n\n"},"data":{"source":"embedded","embedded":"%0A*This%20dashboard%20contains%20sample%20data%20for%20you%20to%20play%20with.%20You%20can%20view%20it%2C%20search%20it%2C%20and%20interact%20with%20the%20visualizations.*","script":""},"id":"emytp843h1r","activated":false}]},"svr8t06zrf":{"widgets":[{"type":"data-selector-widget","name":"noname","icon":"mdi-format-list-checks","options":{"widget":{"visible":true,"multiple":true,"label":"Manufacturer","event":"manufacturer-select"},"mapper":{"id":"3_alpha_code","title":"name"}},"data":{"source":"dps","embedded":[{"id":"ABW","title":"Aruba","index":0},{"id":"ADO","title":"Andorra","index":-1},{"id":"AFG","title":"Afghanistan","index":-1},{"id":"AGO","title":"Angola","index":-1},{"id":"ALB","title":"Albania","index":-1}],"script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: getKeyList\n **     SERVICE: https://jace-dps.herokuapp.com\n **\n **/\n\n<?javascript\n    $scope.service = {\n        host: \"https://ao67vvmh5b:if1xwb6ag5@beech-495313317.eu-west-1.bonsaisearch.net:443\"\n    }\n    \n    // $scope.manufacturer = [\"Champion Arts\", \"Elitelligence\"]\n    // $scope.category = [\"Men's Accessories\", \"Men's Shoes\"]\n    \n    $scope.manufacturer = []\n    $scope.category = []\n    \n?>\n\nservice.es(\n\t\t\t\t\n    from: {{service}},\n    cmd:\"search\",\n    args:<? {\n        index:\"kibana_sample_data_ecommerce\",\n        body:{\n          \"size\": 0,\n          \"aggs\": {\n            \"list\": {\n              \"terms\": {\n                \"field\": \"manufacturer.keyword\",\n                \"size\": 10\n              }\n            }\n          }\n        }\n    } ?>,\n    returns: <? d => d.aggregations.list.buckets.map( item => ({\n        id: item.key,\n        title: item.key\n    })) ?>\n)    \n\nset(\"response\")\n<?javascript\n    $scope.response = _.sortBy($scope.response,\"key\") \n?>\nreturn (\"response\")\n"},"id":"sgf0q4k67oh","activated":false}]},"1fo40ob1rvj":{"widgets":[{"type":"data-selector-widget","name":"noname_clone_2lwgaexh7c9","icon":"mdi-format-list-checks","options":{"widget":{"visible":true,"multiple":true,"label":"Category","event":"category-select"},"mapper":{"id":"3_alpha_code","title":"name"}},"data":{"source":"dps","embedded":[{"id":"ABW","title":"Aruba","index":0},{"id":"ADO","title":"Andorra","index":-1},{"id":"AFG","title":"Afghanistan","index":-1},{"id":"AGO","title":"Angola","index":-1},{"id":"ALB","title":"Albania","index":-1}],"script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: getKeyList\n **     SERVICE: https://jace-dps.herokuapp.com\n **\n **/\n\n<?javascript\n    $scope.service = {\n        host: \"https://ao67vvmh5b:if1xwb6ag5@beech-495313317.eu-west-1.bonsaisearch.net:443\"\n    }\n    \n    // $scope.manufacturer = [\"Champion Arts\", \"Elitelligence\"]\n    // $scope.category = [\"Men's Accessories\", \"Men's Shoes\"]\n    \n    $scope.manufacturer = []\n    $scope.category = []\n    \n?>\n\nservice.es(\n\t\t\t\t\n    from: {{service}},\n    cmd:\"search\",\n    args:<? {\n        index:\"kibana_sample_data_ecommerce\",\n        body:{\n          \"size\": 0,\n          \"aggs\": {\n            \"list\": {\n              \"terms\": {\n                \"field\": \"category.keyword\",\n                \"size\": 10\n              }\n            }\n          }\n        }\n    } ?>,\n    returns: <? d => d.aggregations.list.buckets.map( item => ({\n        id: item.key,\n        title: item.key\n    })) ?>\n)    \n\nset(\"response\")\n<?javascript\n    $scope.response = _.sortBy($scope.response,\"key\") \n?>\nreturn (\"response\")\n"},"id":"2lwgaexh7c9","activated":false},{"type":"edu-push-button-widget","name":"Filter","icon":"mdi-card-outline","options":{"widget":{"visible":true}},"data":{"embedded":[{"title":"Apply Filter","event":"apply-filter","color":"secondary","disabled":false}],"script":""},"id":"bpbf3w25pto","activated":false}]},"p3o5ah6pnkb":{"widgets":[{"type":"md-widget","name":"noname_clone_i6umgbzjs5a","icon":"mdi-markdown","options":{"widget":{"visible":true},"style":"\n  widget-style {\n    /*margin:1em;*/\n    padding:1em;\n    font-size:18px;\n    /*border: 1px solid #cfd7e6;*/\n    /*box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);*/\n  }\n\n"},"data":{"source":"embedded","embedded":"%0A%23%20%0A","script":""},"id":"i6umgbzjs5a","activated":false}]},"0kzxrrtmq99q":{"widgets":[]},"w0pxqxuyww":{"widgets":[]},"7f8tszclp3l":{"widgets":[{"type":"html-widget","name":"noname_clone_3pt8tchnmkv_clone_hm9xal9wsww","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div style=\"font-size:24px\" class=\"secondary--text text--lighten-3 font-weight-light\">Period</div>    \n","script":""},"id":"hm9xal9wsww","activated":false},{"type":"html-widget","name":"Total Revenue_clone_1p6w7edqvxy","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"display-1 secondary--text text--lighten-2 d-flex align-center justify-center pa-1\" style=\"\r\n        border: 1px solid #cfd7e6;\r\n        box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);\r\n    \">\r\n        2020.11.15\r\n    </div>","script":""},"id":"1p6w7edqvxy","activated":false}]},"6z1u5cwy3he":{"widgets":[{"type":"html-widget","name":"noname_clone_3pt8tchnmkv_clone_hm9xal9wsww_clone_5c7a06xms4n","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div style=\"font-size:24px\" class=\"secondary--text text--lighten-3 font-weight-light\">&nbsp;</div>    \n","script":""},"id":"5c7a06xms4n","activated":false},{"type":"html-widget","name":"Total Revenue_clone_1p6w7edqvxy_clone_0mplrndj7rx","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"display-1 secondary--text text--lighten-2 d-flex align-center justify-center pa-1\" style=\"\r\n        border: 1px solid #cfd7e6;\r\n        box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);\r\n    \">\r\n        2020.11.22\r\n    </div>","script":""},"id":"0mplrndj7rx","activated":false}]},"jepu8saf3a":{"widgets":[{"type":"html-widget","name":"noname_clone_53h2i79q93p","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div style=\"font-size:24px\" class=\"secondary--text text--lighten-3 font-weight-light\">Sales by Category</div>    \n","script":""},"id":"53h2i79q93p","activated":false},{"type":"line-chart-widget","name":"Sales by Category","icon":"mdi-chart-line","options":{"widget":{"visible":true,"height":300},"tooltip":{"trigger":"axis","axisPointer":{"type":"cross","label":{"backgroundColor":"#6a7985"}}},"legend":{"data":["1","2"]},"xAxis":{"type":"category","data":["2015","2016","2017","2018"]},"yAxis":{"type":"value"},"series":[{"name":"1","type":"line","data":[43.3,85.8,93.7,79.4],"smooth":true},{"name":"2","type":"line","data":[37.3,28.8,77.7,100],"smooth":true}],"color":["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e","#e6ab02","#a6761d","#666666"],"palette":{"id":"Dark2_8","color":["#1b9e77","#d95f02","#7570b3","#e7298a","#66a61e","#e6ab02","#a6761d","#666666"]},"style":"\n  widget-style {\n    /*margin:1em;*/\n    padding:1em;\n    font-size:18px;\n    border: 1px solid #cfd7e6;\n    box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);\n  }\n\n"},"data":{"source":"embedded","embedded":{"series":[]},"script":""},"id":"2w4769ywnn8","activated":false}]},"qzk8d2qwl1j":{"widgets":[{"type":"html-widget","name":"noname_clone_3pt8tchnmkv_clone_hm9xal9wsww_clone_mhp1d2x6myp","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div style=\"font-size:24px\" class=\"secondary--text text--lighten-3 font-weight-light\">Category</div>    \n","script":""},"id":"mhp1d2x6myp","activated":false}]},"y1cup7hpm8b":{"widgets":[{"type":"html-widget","name":"Category","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"secondary--text text--lighten-2 d-flex align-center justify-left pa-1\" style=\"\r\n        font-size:24px;\r\n        border: 1px solid #cfd7e6;\r\n        box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);\r\n    \">\r\n        All\r\n    </div>","script":""},"id":"g0y6kfdopiw","activated":false}]},"x05ae076il":{"widgets":[{"type":"html-widget","name":"noname_clone_3pt8tchnmkv_clone_hm9xal9wsww_clone_mhp1d2x6myp_clone_g168oh988ne","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div style=\"font-size:24px\" class=\"secondary--text text--lighten-3 font-weight-light\">Manufacturer</div>    \n","script":""},"id":"g168oh988ne","activated":false}]},"uvknugko83":{"widgets":[{"type":"html-widget","name":"Manufacturer","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"secondary--text text--lighten-2 d-flex align-center justify-left pa-1\" style=\"\r\n        font-size:24px;\r\n        border: 1px solid #cfd7e6;\r\n        box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);\r\n    \">\r\n        All\r\n    </div>","script":""},"id":"37zcyrdhx6v","activated":false}]},"1frfkradols":{"widgets":[]},"dy1k08psyw":{"widgets":[]},"3rx4d9rdjq3":{"widgets":[]},"2bxhyrwum33":{"widgets":[{"type":"html-widget","name":"noname","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div style=\"font-size:24px\" class=\"secondary--text text--lighten-3 font-weight-light\">Total Revenue</div>    \n","script":""},"id":"cph7anuxl6u","activated":false},{"type":"html-widget","name":"Total Revenue","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"\r\n<div class=\"display-3 secondary--text text--lighten-2 d-flex align-center justify-center pa-1\" style=\"\r\n        height: 100px;\r\n        border: 1px solid #cfd7e6;\r\n        box-shadow: 0 1px 3px 0 rgba(89,105,129,.05), 0 1px 1px 0 rgba(0,0,0,.025);\r\n    \">\r\n        &nbsp;\r\n    </div>\r\n","script":""},"id":"jm8z365paoq","activated":false}]}},"id":"e_commerce","title":"E-commerce","url":"https://jace-dev.herokuapp.com/design/ElasticSearch#/e_commerce"}],"name":"ElasticSearch","i18n":{"en":{},"uk":{}},"icon":"https://cdn.iconscout.com/icon/free/png-512/elasticsearch-226094.png","skin":{"holders":{"AppHeader":{"widgets":[{"type":"html-widget","name":"noname","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"row mx-0\">\n    <!--<div class=\"col\">-->\n        <span \n                class=\"secondary--text display-2 font-weight-light\"\n                style=\"\n                            height: 100px;\n            background: url(https://cdn.iconscout.com/icon/free/png-512/elasticsearch-226094.png) no-repeat;\n            background-size: contain;\n            margin: 0 -1px 0 1em;\n            padding: 0.55em 0em 0em 3em;\"\n        >\n            How to use ElasticSearch in your Jace apps\n        </span>        \n    <!--</div>-->\n    <div class=\"spacer\"></div>\n    <!--<div class=\"col\">-->\n        <a href=\"https://www.elastic.co/\" target=\"_blank\">\n            <div class=\"ma-1\">\n            <center>\n                <div class=\"pa-3\" style=\"border: 1px solid #eaeaea;\n                display: inline-block;\n                background: white;\">\n                  <h5 class=\"brand-title text-dark caption\">Thanks to</h5>\n                \n                  <div class=\"brand-logo\">\n                    <img \n                        alt=\"\" \n                        src=\"https://cdn.iconscout.com/icon/free/png-512/elasticsearch-226094.png\"\n                        style=\"width:2em\"\n                    >\n                  </div>\n                <h5 class=\"brand-title text-dark caption\">Elastic</h5>\n            </div>\n            </center>\n            </div>\n</a>\n<a href=\"https://elements.heroku.com/addons/bonsai\" target=\"_blank\">\n            <div class=\"my-1 ml-0 mr-2\">\n            <center>\n                <div class=\"pa-3\" style=\"border: 1px solid #eaeaea;\n                display: inline-block;\n                background: white;\">\n                  <h5 class=\"brand-title text-dark caption\">Thanks to</h5>\n                \n                  <div class=\"brand-logo\">\n                    <img \n                        alt=\"Elasticsearch, pure and simple.\" \n                        src=\"https://s3.amazonaws.com/assets.heroku.com/addons.heroku.com/icons/854/original.png?1429293570\"\n                        style=\"width:2em\"\n                    >\n                  </div>\n                <h5 class=\"brand-title text-dark caption\">Bonsai</h5>\n            </div>\n            </center>\n            </div>\n</a>\n    <!--</div>-->\n</div>\n","script":""},"id":"5nia14kv2ci","activated":false},{"type":"app-topbar-widget","name":"noname","icon":"mdi-page-layout-header","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":{"title":"","locale":false,"user":false,"login":false,"references":[{"title":"About ElasticSearch","id":" "},{"title":"service.es()","id":"service"},{"title":"Indices Explorer","id":"explorer"},{"title":"E-commerce","id":"e_commerce"}]},"script":""},"id":"z8fnd0cwzl","activated":false},{"type":"mediator-widget","name":"noname","icon":"mdi-language-javascript","options":{"widget":{"visible":true}},"data":{"script":"    \n    let mediator = this;\n    \n    window.esUrl =  \"https://ao67vvmh5b:if1xwb6ag5@beech-495313317.eu-west-1.bonsaisearch.net:443\"\n    mediator.emit(\"init-page-state\")\n   \n    window.esService = {\n        host: window.esUrl\n    }\n\n    mediator.$nextTick(() => {\n        mediator.api.emit(\"start-page-script\")\n    })\n\n    "},"id":"kqlijvlfvnj","activated":false}]},"AppFooter":{"widgets":[]}}},"dpsURL":"https://jace-dps.herokuapp.com","theme":{"primary":"#0065a4","secondary":"#37474F","accent":"#8E24AA","error":"#f44336","info":"#0091EA","success":"#388E3C","warning":"#E65100"},"importedFromURL":"http://jace-dev.herokuapp.com/app/ElasticSearch","importedFromAuthor":"Andrey Boldak"}