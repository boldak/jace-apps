{"title":"Simulation of dynamic processes","description":"Example of traffic prediction with Bayesian Belief Network, Virtual Evidences and Indicator functions for Fuzzy Events","keywords":["BBN","Fuzzy Event","Indicator function"],"isPublished":true,"pages":[{"layout":"flex","sections":[{"align":"justify-center","holders":[{"name":"default","width":11}]},{"align":"justify-center","holders":[{"name":"xenecmo79sa","width":4},{"name":"d8pwgtzh7pa","width":6}]},{"align":"justify-center","holders":[{"name":"7adkx3ep8fp","width":10}]},{"align":"justify-center","holders":[{"name":"3n17j6nbanh","width":4},{"name":"v4583y30bab","width":6}]},{"align":"justify-center","holders":[{"name":"z9k4etyyvqs","width":10}]}],"holders":{"default":{"widgets":[{"type":"html-widget","name":"noname","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"display-1 primary--text font-weight-light pb-3 pt-5\">\n    Simulation of dynamic processes with Bayesian Belief Network\n</div>","script":""},"id":"jt9darq2kgd","activated":false},{"type":"dps-suite-widget","name":"noname","icon":"mdi-card-text-outline","options":{"widget":{"visible":true}},"scripts":[{"name":"test","script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: test\n **     SERVICE: https://dj-storage.herokuapp.com\n **\n **/\n\n/**\n **\n **     DATA PROCESSING SCRIPT: test2\n **     SERVICE: http://localhost:8098\n **\n **/\n\n/**\n **\n **     DATA PROCESSING SCRIPT: bbn graph\n **     SERVICE: http://localhost:8098\n **\n **/\n\n<?javascript\n    $scope.model = {\n\t\"metadata\":{\n\t\t\"type\":\"bbn-model\"\n\t},\n\t\"variables\": {\n\t\n\t  \t\"Traffic\": {\n\t  \t\t\"domain\":[\"high\", \"medium\", \"low\"],\n\t  \t\t\"layer\":\"model\",\n\t  \t\t\"causes\":[{\n\t  \t\t\t\"ref\": \"Day\",\n\t  \t\t\t\"metadata\": {}\n\t  \t\t},{\n\t  \t\t\t\"ref\": \"Time\",\n\t  \t\t\t\"metadata\": {}\n\t  \t\t}],\n\t  \t\t\"metadata\": {}\n\t  \t},\n\t  \t\"Day\": {\n\t  \t\t\"domain\":[\"working_day\", \"weekend\"],\n\t  \t\t\"layer\":\"input\",\n\t  \t\t\"causes\":[],\n\t  \t\t\"metadata\": {}\n\t  \t},\n\t  \t\"Time\": {\n\t  \t\t\"domain\":[\"morning\", \"noon\", \"evening\", \"night\"],\n\t  \t\t\"layer\":\"input\",\n\t  \t\t\"causes\":[],\n\t  \t\t\"metadata\": {}\n\t  \t}\n\t}\n}\n\n?>\n\n<?javascript\n$scope.res = \"graph LR \\\\n\"\n_.keys($scope.model.variables).forEach(name => {\n    \n        $scope.res += \"_\"+name + \"[<b>\"+name+\"</b><br/>\"+$scope.model.variables[name].domain.join(\", \")+\"]\\\\n\"\n    \n})\n_.keys($scope.model.variables).forEach(name => {\n    $scope.model.variables[name].causes.forEach( c => {\n        $scope.res += \"_\"+c.ref + \" --> \" + \"_\"+name + \"\\\\n\"\n    })\n})\n?>\n\nreturn(\"res\")\ntext()"}],"data":{"source":"embedded","embedded":"<h2 color=\"#eee\"><center>not configured<center></h2><p>Use options dialog for configure this widget</p>","script":""},"id":"nloazyf054g","activated":false}]},"xenecmo79sa":{"widgets":[]},"d8pwgtzh7pa":{"widgets":[]},"3n17j6nbanh":{"widgets":[{"type":"html-widget","name":"noname_clone_az61chkjrja","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div class=\"primary--text font-weight-light subheading\">\n    <center>Indicator Functions for Fuzzy Events</center>\n</div>\n","script":""},"id":"az61chkjrja","activated":false},{"type":"line-chart-widget","name":"noname","icon":"mdi-chart-line","options":{"widget":{"visible":true,"height":"230"},"legend":{"data":["1","2"]},"xAxis":{"type":"category","data":["2015","2016","2017","2018"]},"yAxis":{"type":"value"},"series":[{"name":"1","type":"line","areaStyle":{"opacity":0.2},"data":[43.3,85.8,93.7,79.4],"smooth":true},{"name":"2","type":"line","areaStyle":{"opacity":0.2},"data":[37.3,28.8,77.7,100],"smooth":true}]},"data":{"source":"dps","embedded":{"legend":["embedded1","embedded2"],"xAxis":["2015","2016","2017","2018"],"series":[{"name":"embedded1","type":"line","data":[43.3,85.8,93.7,79.4],"smooth":true,"areaStyle":{"opacity":0.2}},{"name":"embedded2","type":"line","data":[37.3,28.8,77.7,100],"smooth":true,"areaStyle":{"opacity":0.2}}]},"script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: test\n **     SERVICE: http://localhost:8098\n **\n **/\ntimeline.eventIndicator(<? \n(    {\n\t\t\"start\":{\n\t\t\t\"stamp\":\"2017-05-22 04:00\",\n\t\t\t\"format\":\"YYYY-MM-DD HH:mm\"\t\n\t\t},\n\t    \"duration\":\"12:00.0\",\n        \"distribution\":[\n        {\n\t\t\t\"rel\":\"00:00.0\",\n\t\t\t\"prob\":0.1\n\t\t}, {\n\t\t\t\"rel\":\"1:00\",\n\t\t\t\"prob\":0.15\n\t\t}, {\n\t\t    \"rel\":\"2:00\",\n\t\t\t\"prob\":0.25\n\t\t}, {\n\t\t    \"rel\":\"3:00\",\n\t\t\t\"prob\":0.5\n\t\t}, {\n\t\t    \"rel\":\"4:00\",\n\t\t\t\"prob\":1\n\t\t}, {\n\t\t    \"rel\":\"5:00\",\n\t\t\t\"prob\":0.5\n\t\t}, {\n\t\t    \"rel\":\"6:00\",\n\t\t\t\"prob\":0.25\n\t\t}, {\n\t\t    \"rel\":\"7:00\",\n\t\t\t\"prob\":0.15\n\t\t}, {\n\t\t    \"rel\":\"8:00\",\n\t\t\t\"prob\":0.1\n\t\t}],\n\t\t\"period\":\"1.00:00\"\n    }\n)\n?>)\nset(\"m\")\ntimeline.eventIndicator(<? \n(    {\n\t\t\"start\":{\n\t\t\t\"stamp\":\"2017-05-22 8:00\",\n\t\t\t\"format\":\"YYYY-MM-DD HH:mm\"\t\n\t\t},\n\t    \"duration\":\"12:00.0\",\n        \"distribution\":[\n        {\n\t\t\t\"rel\":\"00:00.0\",\n\t\t\t\"prob\":0.1\n\t\t}, {\n\t\t\t\"rel\":\"1:00\",\n\t\t\t\"prob\":0.15\n\t\t}, {\n\t\t    \"rel\":\"2:00\",\n\t\t\t\"prob\":0.25\n\t\t}, {\n\t\t    \"rel\":\"3:00\",\n\t\t\t\"prob\":0.5\n\t\t}, {\n\t\t    \"rel\":\"4:00\",\n\t\t\t\"prob\":1\n\t\t}, {\n\t\t    \"rel\":\"5:00\",\n\t\t\t\"prob\":0.5\n\t\t}, {\n\t\t    \"rel\":\"6:00\",\n\t\t\t\"prob\":0.25\n\t\t}, {\n\t\t    \"rel\":\"7:00\",\n\t\t\t\"prob\":0.15\n\t\t}, {\n\t\t    \"rel\":\"8:00\",\n\t\t\t\"prob\":0.1\n\t\t}],\n\t\t\"period\":\"1.00:00\"\n    }\n)\n?>)\nset(\"dd\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 00:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"18:00\",\n    \tperiod:\"1:00\"\n    })\n?>)\nc.map(<? \n    d => ({\n    \tdate: d,\n    \tmm:$scope.m(d),\n    \tdd:$scope.dd(d)\n    })\n?>)\nset(\"data\")\n<?javascript\n$scope.res = {\n\t\"legend\": [\"Morning\",\"Noon\"],\t\n\t\n\t\"xAxis\": $scope.data.map(\n\t    d => moment(new Date(d.date)).format(\"HH:mm\")\n\t ),\n\t\n\t\"series\": [\n\t\t{\n\t\t\t\"name\": \"Morning\",\n\t\t\t\"type\": \"line\",\n\t\t\t\"data\": $scope.data.map(\n\t\t\t    d => Number.parseFloat(d.mm.toFixed(2))\n\t\t\t ),\n\t\t\t\"smooth\": true,\n\t\t\t\"areaStyle\": {\n\t\t\t\t\"opacity\": 0.2\n\t\t\t}\n\t\t},\n\t\t\t{\n\t\t\t\"name\": \"Noon\",\n\t\t\t\"type\": \"line\",\n\t\t\t\"data\": $scope.data.map(\n\t\t\t    d => Number.parseFloat(d.dd.toFixed(2))\n\t\t\t ),\n\t\t\t\"smooth\": true,\n\t\t\t\"areaStyle\": {\n\t\t\t\t\"opacity\": 0.2\n\t\t\t}\n\t\t}\n\t]\n}\n?>\nreturn (\"res\")"},"id":"9ldfdg0ydyd","activated":false}]},"v4583y30bab":{"widgets":[{"type":"html-widget","name":"noname","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<p class=\"headline primary--text font-weight-light\">\n    Fuzzy Events and Indicator Function\n</p>\n<p class=\"subheading\">\nFuzzy Event is event of type \n<span style=\"font-size:1.1em;\"> \n            \"{{$f('(\"Variable\" = \"Value\")')}}\"\n</span>\ndefined in multi-valued terms. \nThis event is indicated by indicator function, that maps the value of free continius variable\n( for example, \"temperature\" or \"time\" ) to event probability. \n</p>\n<p class=\"subheading\">\nOn figure you can see example of indicator function \nfor events \"The period of time is morning\" and  \"The period of time is noon\"\n</p>\n<p class=\"subheading\">\nAt 10:00 you can observe uncertain situation \"It's not morning, but it's not noon\".\n</p>","script":""},"id":"twgl9aie5kb","activated":false}]},"z9k4etyyvqs":{"widgets":[{"type":"html-widget","name":"noname_clone_p2onaqylyqn","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<center class=\"headline primary--text font-weight-light pb-2 pt-2\">\n    Tipical Dynamic of Traffic \n</center>\n<center class=\"subheading pb-3\">\n    Sample values (Cars per 100m on one lane)\n</center>","script":""},"id":"p2onaqylyqn","activated":false},{"type":"line-chart-widget","name":"noname","icon":"mdi-chart-line","options":{"widget":{"visible":true,"height":300},"tooltip":{"trigger":"axis","axisPointer":{"type":"cross","label":{"backgroundColor":"#6a7985"}}},"legend":{"data":["1","2"]},"xAxis":{"type":"category","data":["2015","2016","2017","2018"]},"yAxis":{"type":"value"},"series":[{"name":"1","type":"line","data":[43.3,85.8,93.7,79.4],"smooth":true},{"name":"2","type":"line","data":[37.3,28.8,77.7,100],"smooth":true}]},"data":{"source":"dps","embedded":{"legend":["embedded1","embedded2"],"xAxis":["2015","2016","2017","2018"],"series":[{"name":"embedded1","type":"line","data":[43.3,85.8,93.7,79.4],"smooth":true},{"name":"embedded2","type":"line","data":[37.3,28.8,77.7,100],"smooth":true}]},"script":"\n/**\n **\n **     DATA PROCESSING SCRIPT: generate data\n **     SERVICE: http://localhost:8098\n **\n **/\n\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 00:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"4:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: Math.random()*6,\n        day:\"working_day\",\n        time:\"night\"\n    })\n?>)\nset(\"w1\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 04:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"4:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 5+Math.random()*6,\n        day:\"working_day\",\n        time:\"morning\"\n    })\n?>)\nset(\"w2\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 08:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"2:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 24+Math.random()*6,\n        day:\"working_day\",\n        time:\"morning\"\n    })\n?>)\nset(\"w3\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 10:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"6:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 15+Math.random()*15,\n        day:\"working_day\",\n        time:\"noon\"\n        \n    })\n?>)\nset(\"w4\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 16:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"3:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 14+Math.random()*6,\n        day:\"working_day\",\n        time:\"evening\"\n    })\n?>)\nset(\"w5\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 19:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"6:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 3+Math.random()*10,\n        day:\"working_day\",\n        time:\"evening\"\n    })\n?>)\nset(\"w6\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 00:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"4:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: Math.random()*6,\n        day:\"weekend\",\n        time:\"night\"\n    })\n?>)\nset(\"p1\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 04:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"4:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 0+Math.random()*6,\n        day:\"weekend\",\n        time:\"morning\"\n    })\n?>)\nset(\"p2\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 08:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"2:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 3+Math.random()*6,\n        day:\"weekend\",\n        time:\"morning\"\n    })\n?>)\nset(\"p3\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 10:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"6:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 10+Math.random()*6,\n        day:\"weekend\",\n        time:\"noon\"\n    })\n?>)\nset(\"p4\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 16:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"3:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 10+Math.random()*6,\n        day:\"weekend\",\n        time:\"evening\"\n    })\n?>)\nset(\"p5\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 19:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"6:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 3+Math.random()*6,\n        day:\"weekend\",\n        time:\"evening\"\n    })\n?>)\nset(\"p6\")\n\n\n<?javascript\n    $scope.res = $scope.w1\n        .concat($scope.w2)\n        .concat($scope.w3)\n        .concat($scope.w4)\n        .concat($scope.w5)\n        .concat($scope.w6)\n        .concat($scope.p1)\n        .concat($scope.p2)\n        .concat($scope.p3)\n        .concat($scope.p4)\n        .concat($scope.p5)\n        .concat($scope.p6)\n        \n    $scope.res = $scope.res.map( d => ({\n       date: moment(new Date(d.date)).format(\"HH:mm\"),\n       day: d.day,\n       time: d.time,\n       value: Math.round(d.traffic),\n       traffic: (d.traffic <= 5)\n                    ? \"low\"\n                    : (d.traffic >= 12)\n                        ? \"high\"\n                        : \"medium\"\n    }))        \n        \n?>\n\n\n<?javascript\n    $scope.res = \n    {\n\t\"legend\": [\n\t\t\"working day\",\n\t\t\"weekend\"\n\t],\n\t\n\t\"xAxis\":  $scope.res.filter( d => d.day==\"working_day\").map(d => d.date),\n\t\n\t\n\t\"series\": [\n\t\t{\n\t\t\t\"name\": \"working day\",\n\t\t\t\"type\": \"line\",\n\t\t\t\"data\": $scope.res.filter( d => d.day==\"working_day\").map(d => d.value),\n\t\t\t\"smooth\": true,\n\t\t\t\"markLine\":{\n\t\t\t    data:[\n\t\t\t        {yAxis:5},\n\t\t\t        {yAxis:15}\n\t\t\t    ]\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t\"name\": \"weekend\",\n\t\t\t\"type\": \"line\",\n\t\t\t\"data\": $scope.res.filter( d => d.day==\"weekend\").map(d => d.value),\n\t\t\t\"smooth\": true,\n\t\t\t\"markLine\":{\n\t\t\t    data:[\n\t\t\t        {yAxis:5},\n\t\t\t        {yAxis:15}\n\t\t\t    ]\n\t\t\t}\n\t\t}\n\t]\n}\n?>\n\n\n\nreturn(\"res\")\n"},"id":"jpgekz8u45","activated":false},{"type":"html-widget","name":"noname","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<center class=\"headline primary--text font-weight-light pb-2 pt-2\">\n    Traffic Prediction (Indicator Functions)\n</center>\n<center class=\"subheading pb-3\">\n    Bayes Belief Network, Virtual Evidences, Indicator function for Fuzzy Events\n</center>","script":""},"id":"9g1imi18idj","activated":false},{"type":"scatter1d-chart-widget","name":"noname","icon":"mdi-chart-scatterplot-hexbin","options":{"widget":{"visible":true,"height":"300"},"tooltip":{"position":"top"},"title":[],"singleAxis":[],"series":[],"color":["#7570b3","#d95f02","#1b9e77"],"palette":{"id":"Dark2_3","color":["#1b9e77","#d95f02","#7570b3"],"isReverse":true}},"data":{"source":"dps","embedded":{"symbolSize":4,"xAxis":{"data":[0,1,2,3,4,5]},"series":[{"name":"Serie1","data":[5,3,1,2,4]},{"name":"Serie2","data":[1,2,1,4,2]},{"name":"Serie3","data":[2,3,2,1,1]},{"name":"Serie4","data":[5,3,1,2,4]},{"name":"Serie5","data":[1,2,1,4,2]},{"name":"Serie6","data":[2,3,2,1,1]}]},"script":"\n<?javascript\n    $scope.d = moment().format(\"dddd\").toLowerCase()\n    $scope.dayIndicator = {\n        \"monday\": date => ((moment(new Date(date)).format(\"dddd\").toLowerCase() == \"monday\") ? 1 : 0), \n        \"tuesday\": date => ((moment(new Date(date)).format(\"dddd\").toLowerCase() == \"tuesday\")?1:0), \n        \"wednesday\": date => ((moment(new Date(date)).format(\"dddd\").toLowerCase() == \"wednesday\")?1:0), \n        \"thursday\": date => ((moment(new Date(date)).format(\"dddd\").toLowerCase() == \"thursday\")?1:0), \n        \"friday\": date => ((moment(new Date(date)).format(\"dddd\").toLowerCase() == \"friday\")?1:0), \n        \"saturday\": date => ((moment(new Date(date)).format(\"dddd\").toLowerCase() == \"saturday\")?1:0), \n        \"sunday\": date => ((moment(new Date(date)).format(\"dddd\").toLowerCase() == \"sunday\")?1:0),\n        \n        \"work\": date => {\n            let d = moment(new Date(date)).format(\"dddd\").toLowerCase()\n            return (d == \"saturday\" || d == \"sunday\" ) ? 0.25: 0.75\n        },\n        \"weekend\": date => {\n            let d = moment(new Date(date)).format(\"dddd\").toLowerCase()\n            return (d == \"saturday\" || d == \"sunday\" ) ? 0.75 : 0.25\n        }\n    }\n    $scope.distribution = [\n        {\n\t\t\t\"rel\":\"00:00.0\",\n\t\t\t\"prob\":0.1\n\t\t}, {\n\t\t\t\"rel\":\"1:00\",\n\t\t\t\"prob\":0.15\n\t\t}, {\n\t\t    \"rel\":\"2:00\",\n\t\t\t\"prob\":0.25\n\t\t}, {\n\t\t    \"rel\":\"3:00\",\n\t\t\t\"prob\":0.5\n\t\t}, {\n\t\t    \"rel\":\"4:00\",\n\t\t\t\"prob\":1\n\t\t}, {\n\t\t    \"rel\":\"5:00\",\n\t\t\t\"prob\":0.5\n\t\t}, {\n\t\t    \"rel\":\"6:00\",\n\t\t\t\"prob\":0.25\n\t\t}, {\n\t\t    \"rel\":\"7:00\",\n\t\t\t\"prob\":0.15\n\t\t}, {\n\t\t    \"rel\":\"8:00\",\n\t\t\t\"prob\":0.1\n\t\t}\n\t]\n\n?>\n\n// \"morning\", \"day\", \"evening\", \"night\"\n\n\ntimeline.eventIndicator(<? \n(    {\n\t\t\"start\":{\n\t\t\t\"stamp\":\"2017-05-22 04:00\",\n\t\t\t\"format\":\"YYYY-MM-DD HH:mm\"\t\n\t\t},\n\t    \"duration\":\"12:00.0\",\n        \"distribution\":$scope.distribution,\n\t\t\"period\":\"1.00:00\"\n    }\n)\n?>)\nset(\"timeIndicator.morning\")\n\n\ntimeline.eventIndicator(<? \n(    {\n\t\t\"start\":{\n\t\t\t\"stamp\":\"2017-05-22 10:00\",\n\t\t\t\"format\":\"YYYY-MM-DD HH:mm\"\t\n\t\t},\n\t    \"duration\":\"12:00.0\",\n        \"distribution\":$scope.distribution,\n\t\t\"period\":\"1.00:00\"\n    }\n)\n?>)\nset(\"timeIndicator.day\")\n\ntimeline.eventIndicator(<? \n(    {\n\t\t\"start\":{\n\t\t\t\"stamp\":\"2017-05-22 16:00\",\n\t\t\t\"format\":\"YYYY-MM-DD HH:mm\"\t\n\t\t},\n\t    \"duration\":\"12:00.0\",\n        \"distribution\":$scope.distribution,\n\t\t\"period\":\"1.00:00\"\n    }\n)\n?>)\nset(\"timeIndicator.evening\")\n\ntimeline.eventIndicator(<? \n(    {\n\t\t\"start\":{\n\t\t\t\"stamp\":\"2017-05-21 22:00\",\n\t\t\t\"format\":\"YYYY-MM-DD HH:mm\"\t\n\t\t},\n\t    \"duration\":\"12:00.0\",\n        \"distribution\":$scope.distribution,\n\t\t\"period\":\"1.00:00\"\n    }\n)\n?>)\nset(\"timeIndicator.night\")\n\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 00:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"5.00:00\",\n    \tperiod:\"0:20\"\n    })\n?>)\n\nc.map(<? \n    d => ({\n    \tdate: d,\n    \tevd:{\n    \t    time:{\n    \t        \"morning\": $scope.timeIndicator.morning(d), \n    \t        \"noon\": $scope.timeIndicator.day(d), \n    \t        \"evening\": $scope.timeIndicator.evening(d), \n    \t        \"night\": $scope.timeIndicator.night(d)\n    \t    },\n    \t    day:{\n    \t        \"working_day\":$scope.dayIndicator.work(d), \n    \t        \"weekend\":$scope.dayIndicator.weekend(d)\n    \t        \n    \t       // \"monday\":$scope.dayIndicator.monday(d), \n    \t       // \"tuesday\":$scope.dayIndicator.tuesday(d), \n    \t       // \"wednesday\":$scope.dayIndicator.wednesday(d), \n    \t       // \"thursday\":$scope.dayIndicator.thursday(d), \n    \t       // \"friday\":$scope.dayIndicator.friday(d), \n    \t       // \"saturday\":$scope.dayIndicator.saturday(d),\n    \t       // \"sunday\":$scope.dayIndicator.sunday(d)\n    \t    }\n    \t    \n    \t}\n    })\n?>)\nset(\"timeline\")\n\n\n\n///////////////////////////////////////////////////////////\n\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 00:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"4:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: Math.random()*6,\n        day:\"working_day\",\n        time:\"night\"\n    })\n?>)\nset(\"w1\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 04:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"4:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 5+Math.random()*6,\n        day:\"working_day\",\n        time:\"morning\"\n    })\n?>)\nset(\"w2\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 08:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"2:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 24+Math.random()*6,\n        day:\"working_day\",\n        time:\"morning\"\n    })\n?>)\nset(\"w3\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 10:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"6:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 15+Math.random()*15,\n        day:\"working_day\",\n        time:\"noon\"\n        \n    })\n?>)\nset(\"w4\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 16:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"3:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 14+Math.random()*6,\n        day:\"working_day\",\n        time:\"evening\"\n    })\n?>)\nset(\"w5\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 19:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"6:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 3+Math.random()*10,\n        day:\"working_day\",\n        time:\"evening\"\n    })\n?>)\nset(\"w6\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 00:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"4:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: Math.random()*6,\n        day:\"weekend\",\n        time:\"night\"\n    })\n?>)\nset(\"p1\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 04:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"4:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 0+Math.random()*6,\n        day:\"weekend\",\n        time:\"morning\"\n    })\n?>)\nset(\"p2\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 08:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"2:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 3+Math.random()*6,\n        day:\"weekend\",\n        time:\"morning\"\n    })\n?>)\nset(\"p3\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 10:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"6:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 10+Math.random()*6,\n        day:\"weekend\",\n        time:\"noon\"\n    })\n?>)\nset(\"p4\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 16:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"3:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 10+Math.random()*6,\n        day:\"weekend\",\n        time:\"evening\"\n    })\n?>)\nset(\"p5\")\n\ntimeline.ticks(<? \n({\n    \tstart:{\n    \t\tstamp:\"2017-05-26 19:00\",\n    \t\tformat:\"YYYY-MM-DD HH:mm\"\n    \t},\n    \tduration:\"6:00\",\n    \tperiod:\"00:10\"\n    })\n?>)\nc.map(<? \n    d => ({\n        date: d,\n        traffic: 3+Math.random()*6,\n        day:\"weekend\",\n        time:\"evening\"\n    })\n?>)\nset(\"p6\")\n\n\n<?javascript\n    $scope.res = $scope.w1\n        .concat($scope.w2)\n        .concat($scope.w3)\n        .concat($scope.w4)\n        .concat($scope.w5)\n        .concat($scope.w6)\n        .concat($scope.p1)\n        .concat($scope.p2)\n        .concat($scope.p3)\n        .concat($scope.p4)\n        .concat($scope.p5)\n        .concat($scope.p6)\n        \n    $scope.res = $scope.res.map( d => ({\n       date: moment(new Date(d.date)).format(\"HH:mm\"),\n       day: d.day,\n       time: d.time,\n       value: d.traffic,\n       traffic: (d.traffic <= 5)\n                    ? \"low\"\n                    : (d.traffic >= 12)\n                        ? \"high\"\n                        : \"medium\"\n    }))        \n        \n?>\n\n<?javascript\n    $scope.model = {\n\t\"metadata\":{\n\t\t\"type\":\"bbn-model\"\n\t},\n\t\"variables\": {\n\t\t\n\t  \t\"traffic\": {\n\t  \t\t\"domain\":[\"high\", \"medium\", \"low\"],\n\t  \t\t\"layer\":\"model\",\n\t  \t\t\"causes\":[\n\t  \t\t{\n\t  \t\t\t\"ref\": \"day\",\n\t  \t\t\t\"metadata\": {}\n\t  \t\t},\n\t  \t\t{\n\t  \t\t\t\"ref\": \"time\",\n\t  \t\t\t\"metadata\": {}\n\t  \t\t}],\n\t  \t\t\"cpt\":[\n\t\t\t   \n\t\t\t //  [0.70, 0.25, 0.05],\n\t\t\t //  [0.20, 0.50, 0.30],\n\t\t\t //  [0.75, 0.22, 0.03],\n\t\t\t //  [0.02, 0.02, 0.94],\n\t\t\t   \n\t\t\t //  [0.05, 0.2, 0.75],\n\t\t\t //  [0.1, 0.8, 0.1],\n\t\t\t //  [0.6, 0.3, 0.1],\n\t\t\t //  [0.1, 0.1, 0.8]\n\t\t  \t],\n\t  \t\t\"metadata\": {}\n\t  \t},\n\t  \t\"day\": {\n\t  \t\t\"domain\":[\"working_day\", \"weekend\"],\n\t  \t\t\"layer\":\"input\",\n\t  \t\t\"causes\":[],\n\t  \t\t\"metadata\": {}\n\t  \t},\n\t  \t\"time\": {\n\t  \t\t\"domain\":[\"morning\", \"noon\", \"evening\", \"night\"],\n\t  \t\t\"layer\":\"input\",\n\t  \t\t\"causes\":[],\n\t  \t\t\"metadata\": {}\n\t  \t}\n\t}\n}\n?>\n\n<?javascript\n    \n    let cptFilters = (a) => {\n        let filters = []\n        let rec = (f, index) => {\n            f = JSON.parse(JSON.stringify(f))\n            if(index < a.length-1){\n                a[index].domain.forEach( v => {\n                    f[a[index].name] = v\n                    rec(f,index+1)\n                })\n            } else {\n                let row = []\n                a[index].domain.forEach( v => {\n                    f[a[index].name] = v\n                    row.push(JSON.parse(JSON.stringify(f)))\n                })\n                filters.push(JSON.parse(JSON.stringify(row)))\n            }\n        }\n        rec({},0)\n        return filters\n    }\n    \n    $scope.pp = []\n    _.keys($scope.model.variables).forEach( vName => {\n        if($scope.model.variables[vName].causes.length>0){\n            let p = {\n                variable:{\n                    name:vName,\n                    domain:$scope.model.variables[vName].domain\n                },\n                args:$scope.model.variables[vName].causes.map( d => ({\n                    name: d.ref,\n                    domain: $scope.model.variables[d.ref].domain\n                }))\n            }\n            p.args.push(p.variable)\n            let cpt = cptFilters(p.args)\n            cpt.forEach((row,index) => {\n                cpt[index] = row.map( filter => _.countBy($scope.res,filter).true).map( d => (d)? d:0)\n                let max = _.sum(cpt[index])\n                cpt[index] = cpt[index].map(d => d/max)\n            })\n            \n            $scope.model.variables[vName].cpt = cpt\n            \n            $scope.pp.push({\n                variable: p.name,\n                cpt \n            })            \n        }\n    })\n    \n    \n\n?>\n\n\n\nreturn(\"model\")\n\n\n\n//////////////////////////////////////////////////////////\n\n\n\n\n\n\n\n\n\nbbn.create({{model}})\n\nset(\"bbn\")\nget(\"timeline\")\nc.map(<? \n    d => {\n        d.res = $scope.bbn.simulate(d.evd)\n        return d\n    }\n?>)\n\n\n\n<?javascript\n    $scope.res = {\n        symbolSize: 30,\n    \t\n    \t\"xAxis\": {\n    \t    data: $scope.timeline.map(d=> moment(d.date).format(\"DD.MM HH:mm\"))\n    \t},\n    \t\n    \t\"series\": [\n    \t    {\n    \t\t\t\"name\": \"working day\",\n    \t\t\t\"data\": $scope.timeline.map(d=> d.res.day.working_day)\n    \t\t},\n    // \t\t{\n    // \t\t\t\"name\": \"weekend\",\n    // \t\t\t\"data\": $scope.timeline.map(d=> d.res.day.weekend)\n    // \t\t},\n    // \t\t{\n    // \t\t\t\"name\": \"morning\",\n    // \t\t\t\"data\": $scope.timeline.map(d=> d.res.time.morning)\n    // \t\t},\n    // \t\t{\n    // \t\t\t\"name\": \"noon\",\n    // \t\t\t\"data\": $scope.timeline.map(d=> d.res.time.noon)\n    // \t\t},\n    // \t\t{\n    // \t\t\t\"name\": \"evening\",\n    // \t\t\t\"data\": $scope.timeline.map(d=> d.res.time.evening)\n    // \t\t},\n    // \t\t{\n    // \t\t\t\"name\": \"night\",\n    // \t\t\t\"data\": $scope.timeline.map(d=> d.res.time.night)\n    // \t\t},\n    \t\t{\n    \t\t\t\"name\": \"High traffic\",\n    \t\t\t\"data\": $scope.timeline.map(d=> d.res.traffic.high)\n    \t\t},\n    // \t\t{\n    // \t\t\t\"name\": \"Middle Traffic\",\n    // \t\t\t\"data\": $scope.timeline.map(d=> d.res.traffic.medium)\n    // \t\t},\n    \t\t{\n    \t\t\t\"name\": \"Low Traffic\",\n    \t\t\t\"data\": $scope.timeline.map(d=> d.res.traffic.low)\n    \t\t},\n    // \t\t{\n    // \t\t\t\"name\": \"Undefined Traffic\",\n    // \t\t\t\"data\": $scope.timeline.map(d=> d.res.traffic._undef)\n    // \t\t}\n        ]\t\n    }\n?>\n\nreturn(\"res\")"},"id":"5ym69b50if","activated":false}]},"7adkx3ep8fp":{"widgets":[{"type":"html-widget","name":"noname","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<p class=\"headline primary--text font-weight-light\">\n    Bayesian belief network\n</p>\n<p class=\"subheading\">\n    \n    According to the <a href=\"https://en.wikipedia.org/wiki/Bayesian_network\" target=\"_blank\">Wikipedia</a>, Bayesian networks are DAGs whose nodes represent variables in the \n    Bayesian sense: they may be observable quantities, latent variables, \n    unknown parameters or hypotheses. \n    Edges represent conditional dependencies; nodes \n    that are not connected (no path connects one node to another) \n    represent variables that are conditionally independent of each other. \n    Each node is associated with a probability function that takes, as input, a particular set of \n    values for the node's parent variables, and gives (as output) the \n    probability (or probability distribution, if applicable) of the variable represented by \n    the node. \n</p>    \n<p class=\"subheading\">\nYou can see a BBN example on the figure. It represents traffic model, its \ncontrol(day of the week and time) and reaction events(value of traffic). \nSo variables Day and Time belong to input layer; Traffic - model. It\nshould be noted that variables Day and Time are not events directly(like High, \nMedium and Low) but represent systems of incompatible events for simplicity.\n</p>","script":""},"id":"egr9f8n1jr8","activated":false}]}},"id":"","title":"bbn","url":"https://jace-dev.herokuapp.com/design/BBN#/"}],"name":"BBN","i18n":{"en":{},"uk":{}},"icon":"https://pioneer-india.in/media/misc/timeline-icon.png","skin":{"holders":{"AppHeader":{"widgets":[{"type":"html-widget","name":"noname","icon":"mdi-language-html5","options":{"widget":{"visible":true}},"data":{"source":"embedded","embedded":"<div style=\"\n        height:200px; \n        background:url(http://www.ctiglobal.com/wp-content/uploads/2016/06/rh.png) no-repeat;\n        background-size:100%\n        \n        \"\n></div>","script":""},"id":"w5vd074og0p","activated":false}]},"AppFooter":{"widgets":[]}}},"dpsURL":"https://jace-dps.herokuapp.com","theme":{"primary":"#1565C0","secondary":"#757575","accent":"#448AFF","error":"#f44336","info":"#1E88E5","success":"#2E7D32","warning":"#FF8F00"},"importedFromURL":"http://jace-dev.herokuapp.com/app/BBN","importedFromAuthor":"Andrey Boldak"}